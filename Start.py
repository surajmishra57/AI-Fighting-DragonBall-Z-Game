import random
import pygame
import math
import os
pygame.init()
GameICON=pygame.image.load("data/Select/Musett-Dragon-Ballz-Dragon-Ball.ico")
pygame.display.set_icon(GameICON)
os.environ['SDL_VIDEO_WINDOW_POS']="%d,%d"%(30,100)
GameScreen = pygame.display.set_mode((1300,600))
pygame.display.set_caption("Game Loading....... (Plz wait)")
SOUND=True
MUSIC=False
ISbgblit=True
ME=None
COMPUTER=None
###############################################################################################################################

                                                        # ALL CLASSES #
                                                    #=====================#


class Young_Gohan():
    global COMPUTER
    font=pygame.font.SysFont('calibri',40,True,True)
    Name=font.render("Young Gohan",1,(230,98,46))
    V=font.render("V",1,(230,98,46))
    A=font.render("/",1,(255,223,0))
    S=font.render("S",1,(230,98,46))
    BG=pygame.image.load("data/bg/I.png").convert_alpha()
    BG=pygame.transform.scale(BG,(1300,600))
    Logo=pygame.image.load("data/Select/A1.png").convert_alpha()
    Logo=pygame.transform.scale(Logo,(100,100))

    SE=[pygame.image.load("data/Effects/A1.png").convert_alpha(),pygame.image.load("data/Effects/A2.png").convert_alpha(),pygame.image.load("data/Effects/A3.png").convert_alpha(),pygame.image.load("data/Effects/A4.png").convert_alpha()]
    Stand=[pygame.image.load("data/YoundGohan/A1.png").convert_alpha(),pygame.image.load("data/YoundGohan/A2.png").convert_alpha(),pygame.image.load("data/YoundGohan/A3.png").convert_alpha(),pygame.image.load("data/YoundGohan/A4.png").convert_alpha(),pygame.image.load("data/YoundGohan/A5.png").convert_alpha(),pygame.image.load("data/YoundGohan/A6.png").convert_alpha(),pygame.image.load("data/YoundGohan/A7.png").convert_alpha(),pygame.image.load("data/YoundGohan/A8.png").convert_alpha(),pygame.image.load("data/YoundGohan/A9.png").convert_alpha()]
    Stand1=[pygame.image.load("data/YoundGohan/B1.png"),pygame.image.load("data/YoundGohan/B2.png"),pygame.image.load("data/YoundGohan/B3.png"),pygame.image.load("data/YoundGohan/B4.png")]
    SA3=[pygame.image.load("data/YoundGohan/C1.png").convert_alpha(),pygame.image.load("data/YoundGohan/C2.png").convert_alpha(),pygame.image.load("data/YoundGohan/C3.png").convert_alpha(),pygame.image.load("data/YoundGohan/C4.png").convert_alpha(),pygame.image.load("data/YoundGohan/C5.png").convert_alpha()]
    SA4=[pygame.image.load("data/YoundGohan/D1.png").convert_alpha(),pygame.image.load("data/YoundGohan/D2.png").convert_alpha(),pygame.image.load("data/YoundGohan/D3.png").convert_alpha(),pygame.image.load("data/YoundGohan/D3.png").convert_alpha(),pygame.image.load("data/YoundGohan/D3.png").convert_alpha(),pygame.image.load("data/YoundGohan/D3.png").convert_alpha()]
    SA5=[pygame.image.load("data/YoundGohan/E1.png").convert_alpha(),pygame.image.load("data/YoundGohan/E2.png").convert_alpha(),pygame.image.load("data/YoundGohan/E3.png").convert_alpha(),pygame.image.load("data/YoundGohan/E3.png").convert_alpha(),pygame.image.load("data/YoundGohan/E3.png").convert_alpha(),pygame.image.load("data/YoundGohan/E3.png").convert_alpha()]
    SA6=[pygame.image.load("data/YoundGohan/F1.png").convert_alpha(),pygame.image.load("data/YoundGohan/F2.png").convert_alpha(),pygame.image.load("data/YoundGohan/F3.png").convert_alpha(),pygame.image.load("data/YoundGohan/F3.png").convert_alpha(),pygame.image.load("data/YoundGohan/F3.png").convert_alpha(),pygame.image.load("data/YoundGohan/F3.png").convert_alpha()]
    SA7=[pygame.image.load("data/YoundGohan/G1.png").convert_alpha(),pygame.image.load("data/YoundGohan/G2.png").convert_alpha(),pygame.image.load("data/YoundGohan/G3.png").convert_alpha(),pygame.image.load("data/YoundGohan/G4.png").convert_alpha(),pygame.image.load("data/YoundGohan/G5.png").convert_alpha(),pygame.image.load("data/YoundGohan/G6.png").convert_alpha()]
    SA8=[pygame.image.load("data/YoundGohan/H1.png").convert_alpha(),pygame.image.load("data/YoundGohan/H2.png").convert_alpha(),pygame.image.load("data/YoundGohan/H3.png").convert_alpha(),pygame.image.load("data/YoundGohan/H3.png").convert_alpha(),pygame.image.load("data/YoundGohan/H3.png").convert_alpha(),pygame.image.load("data/YoundGohan/H3.png").convert_alpha()]
    SA9=[pygame.image.load("data/YoundGohan/I1.png").convert_alpha(),pygame.image.load("data/YoundGohan/I2.png").convert_alpha(),pygame.image.load("data/YoundGohan/I1.png").convert_alpha()]
    SA10=[pygame.image.load("data/YoundGohan/J1.png").convert_alpha(),pygame.image.load("data/YoundGohan/J2.png").convert_alpha(),pygame.image.load("data/YoundGohan/J2.png").convert_alpha()]
    SA11=[pygame.image.load("data/YoundGohan/K1.png").convert_alpha(),pygame.image.load("data/YoundGohan/K2.png").convert_alpha(),pygame.image.load("data/YoundGohan/K3.png").convert_alpha(),pygame.image.load("data/YoundGohan/K4.png").convert_alpha()]
    SA12=[pygame.image.load("data/YoundGohan/L1.png").convert_alpha(),pygame.image.load("data/YoundGohan/L2.png").convert_alpha(),pygame.image.load("data/YoundGohan/L3.png").convert_alpha(),pygame.image.load("data/YoundGohan/L4.png").convert_alpha(),pygame.image.load("data/YoundGohan/L5.png").convert_alpha(),pygame.image.load("data/YoundGohan/L6.png").convert_alpha()]
    SA13=[pygame.image.load("data/YoundGohan/M1.png").convert_alpha(),pygame.image.load("data/YoundGohan/M2.png").convert_alpha(),pygame.image.load("data/YoundGohan/M3.png").convert_alpha(),pygame.image.load("data/YoundGohan/M4.png").convert_alpha(),pygame.image.load("data/YoundGohan/M5.png").convert_alpha(),pygame.image.load("data/YoundGohan/M6.png").convert_alpha(),pygame.image.load("data/YoundGohan/M7.png").convert_alpha()]
    SA14=[pygame.image.load("data/YoundGohan/N1.png").convert_alpha(),pygame.image.load("data/YoundGohan/N2.png").convert_alpha(),pygame.image.load("data/YoundGohan/N3.png").convert_alpha(),pygame.image.load("data/YoundGohan/N4.png").convert_alpha(),pygame.image.load("data/YoundGohan/N5.png").convert_alpha(),pygame.image.load("data/YoundGohan/N6.png").convert_alpha()]
    SA15=[pygame.image.load("data/YoundGohan/O1.png").convert_alpha(),pygame.image.load("data/YoundGohan/O2.png").convert_alpha(),pygame.image.load("data/YoundGohan/O3.png").convert_alpha(),pygame.image.load("data/YoundGohan/O4.png").convert_alpha(),pygame.image.load("data/YoundGohan/O5.png").convert_alpha(),pygame.image.load("data/YoundGohan/O6.png").convert_alpha()]
    SA16=[pygame.image.load("data/YoundGohan/P1.png").convert_alpha(),pygame.image.load("data/YoundGohan/P2.png").convert_alpha(),pygame.image.load("data/YoundGohan/P3.png").convert_alpha(),pygame.image.load("data/YoundGohan/P4.png").convert_alpha()]
    SA17=[pygame.image.load("data/YoundGohan/Q1.png").convert_alpha(),pygame.image.load("data/YoundGohan/Q2.png").convert_alpha(),pygame.image.load("data/YoundGohan/Q3.png").convert_alpha(),pygame.image.load("data/YoundGohan/Q4.png").convert_alpha(),pygame.image.load("data/YoundGohan/Q5.png").convert_alpha(),pygame.image.load("data/YoundGohan/Q6.png").convert_alpha()]
    SA18=[pygame.image.load("data/YoundGohan/R1.png").convert_alpha(),pygame.image.load("data/YoundGohan/R2.png").convert_alpha(),pygame.image.load("data/YoundGohan/R3.png").convert_alpha(),pygame.image.load("data/YoundGohan/R4.png").convert_alpha()]
    SA19=[pygame.image.load("data/YoundGohan/S1.png").convert_alpha(),pygame.image.load("data/YoundGohan/S2.png").convert_alpha(),pygame.image.load("data/YoundGohan/S3.png").convert_alpha(),pygame.image.load("data/YoundGohan/S4.png").convert_alpha(),pygame.image.load("data/YoundGohan/S5.png").convert_alpha()]
    SA20=[pygame.image.load("data/YoundGohan/T1.png").convert_alpha(),pygame.image.load("data/YoundGohan/T2.png").convert_alpha(),pygame.image.load("data/YoundGohan/T3.png").convert_alpha(),pygame.image.load("data/YoundGohan/T4.png").convert_alpha(),pygame.image.load("data/YoundGohan/T5.png").convert_alpha()]
    SA21=[pygame.image.load("data/YoundGohan/U1.png").convert_alpha(),pygame.image.load("data/YoundGohan/U2.png").convert_alpha(),pygame.image.load("data/YoundGohan/U3.png").convert_alpha(),pygame.image.load("data/YoundGohan/U4.png").convert_alpha()]
    SA22=[pygame.image.load("data/YoundGohan/V1.png").convert_alpha(),pygame.image.load("data/YoundGohan/V2.png").convert_alpha(),pygame.image.load("data/YoundGohan/V3.png").convert_alpha(),pygame.image.load("data/YoundGohan/V4.png").convert_alpha(),pygame.image.load("data/YoundGohan/V5.png").convert_alpha()]
    SA23=[pygame.image.load("data/YoundGohan/W1.png").convert_alpha(),pygame.image.load("data/YoundGohan/W2.png").convert_alpha(),pygame.image.load("data/YoundGohan/W3.png").convert_alpha(),pygame.image.load("data/YoundGohan/W4.png").convert_alpha(),pygame.image.load("data/YoundGohan/W5.png").convert_alpha(),pygame.image.load("data/YoundGohan/W6.png").convert_alpha()]
    SA24=[pygame.image.load("data/YoundGohan/X1.png").convert_alpha(),pygame.image.load("data/YoundGohan/X2.png").convert_alpha(),pygame.image.load("data/YoundGohan/X3.png").convert_alpha(),pygame.image.load("data/YoundGohan/X4.png").convert_alpha(),pygame.image.load("data/YoundGohan/X5.png").convert_alpha()]
    SA25=[pygame.image.load("data/YoundGohan/Y1.png").convert_alpha(),pygame.image.load("data/YoundGohan/Y2.png").convert_alpha(),pygame.image.load("data/YoundGohan/Y3.png").convert_alpha(),pygame.image.load("data/YoundGohan/Y4.png").convert_alpha(),pygame.image.load("data/YoundGohan/Y5.png").convert_alpha()]
    SA26=[pygame.image.load("data/YoundGohan/Z1.png").convert_alpha(),pygame.image.load("data/YoundGohan/Z2.png").convert_alpha(),pygame.image.load("data/YoundGohan/Z3.png").convert_alpha(),pygame.image.load("data/YoundGohan/Z4.png").convert_alpha(),pygame.image.load("data/YoundGohan/Z5.png").convert_alpha()]
    SA27=[pygame.image.load("data/YoundGohan/AA1.png").convert_alpha(),pygame.image.load("data/YoundGohan/AA2.png").convert_alpha(),pygame.image.load("data/YoundGohan/AA3.png").convert_alpha(),pygame.image.load("data/YoundGohan/AA4.png").convert_alpha(),pygame.image.load("data/YoundGohan/AA5.png").convert_alpha(),pygame.image.load("data/YoundGohan/AA6.png").convert_alpha()]
    SA28=[pygame.image.load("data/YoundGohan/AB1.png").convert_alpha(),pygame.image.load("data/YoundGohan/AB2.png").convert_alpha(),pygame.image.load("data/YoundGohan/AB3.png").convert_alpha(),pygame.image.load("data/YoundGohan/AB4.png").convert_alpha(),pygame.image.load("data/YoundGohan/AB5.png").convert_alpha()]
    SA29=[pygame.image.load("data/YoundGohan/AC1.png").convert_alpha(),pygame.image.load("data/YoundGohan/AC2.png").convert_alpha(),pygame.image.load("data/YoundGohan/AC3.png").convert_alpha(),pygame.image.load("data/YoundGohan/AC4.png").convert_alpha(),pygame.image.load("data/YoundGohan/AC5.png").convert_alpha(),pygame.image.load("data/YoundGohan/AC6.png").convert_alpha()]
    SA30=[pygame.image.load("data/YoundGohan/AD1.png").convert_alpha(),pygame.image.load("data/YoundGohan/AD2.png").convert_alpha(),pygame.image.load("data/YoundGohan/AD3.png").convert_alpha(),pygame.image.load("data/YoundGohan/AD4.png").convert_alpha(),pygame.image.load("data/YoundGohan/AD5.png").convert_alpha(),pygame.image.load("data/YoundGohan/AD6.png").convert_alpha()]
    SA31=[pygame.image.load("data/YoundGohan/AE1.png").convert_alpha(),pygame.image.load("data/YoundGohan/AE2.png").convert_alpha(),pygame.image.load("data/YoundGohan/AE3.png").convert_alpha(),pygame.image.load("data/YoundGohan/AE4.png").convert_alpha(),pygame.image.load("data/YoundGohan/AE5.png").convert_alpha(),pygame.image.load("data/YoundGohan/AE6.png").convert_alpha()]
    SA32=[pygame.image.load("data/YoundGohan/AF1.png").convert_alpha(),pygame.image.load("data/YoundGohan/AF2.png").convert_alpha(),pygame.image.load("data/YoundGohan/AF3.png").convert_alpha(),pygame.image.load("data/YoundGohan/AF4.png").convert_alpha(),pygame.image.load("data/YoundGohan/AF5.png").convert_alpha(),pygame.image.load("data/YoundGohan/AF6.png").convert_alpha()]
    SA33=[pygame.image.load("data/YoundGohan/AG1.png").convert_alpha(),pygame.image.load("data/YoundGohan/AG2.png").convert_alpha(),pygame.image.load("data/YoundGohan/AG3.png").convert_alpha(),pygame.image.load("data/YoundGohan/AG4.png").convert_alpha(),pygame.image.load("data/YoundGohan/AG5.png").convert_alpha(),pygame.image.load("data/YoundGohan/AG6.png").convert_alpha()]
    SA34=[pygame.image.load("data/YoundGohan/AH1.png").convert_alpha(),pygame.image.load("data/YoundGohan/AH2.png").convert_alpha(),pygame.image.load("data/YoundGohan/AH3.png").convert_alpha(),pygame.image.load("data/YoundGohan/AH4.png").convert_alpha(),pygame.image.load("data/YoundGohan/AH5.png").convert_alpha(),pygame.image.load("data/YoundGohan/AH6.png").convert_alpha()]
    SA35=[pygame.image.load("data/YoundGohan/AI1.png").convert_alpha(),pygame.image.load("data/YoundGohan/AI2.png").convert_alpha(),pygame.image.load("data/YoundGohan/AI3.png").convert_alpha(),pygame.image.load("data/YoundGohan/AI4.png").convert_alpha(),pygame.image.load("data/YoundGohan/AI5.png").convert_alpha(),pygame.image.load("data/YoundGohan/AI6.png").convert_alpha()]
    SA36=[pygame.image.load("data/YoundGohan/AJ1.png").convert_alpha(),pygame.image.load("data/YoundGohan/AJ2.png").convert_alpha(),pygame.image.load("data/YoundGohan/AJ3.png").convert_alpha(),pygame.image.load("data/YoundGohan/AJ4.png").convert_alpha(),pygame.image.load("data/YoundGohan/AJ5.png").convert_alpha(),pygame.image.load("data/YoundGohan/AJ6.png").convert_alpha(),pygame.image.load("data/YoundGohan/AJ7.png").convert_alpha(),pygame.image.load("data/YoundGohan/AJ8.png").convert_alpha()]
    SA37=[pygame.image.load("data/YoundGohan/AK1.png").convert_alpha(),pygame.image.load("data/YoundGohan/AK2.png").convert_alpha(),pygame.image.load("data/YoundGohan/AK3.png").convert_alpha(),pygame.image.load("data/YoundGohan/AK4.png").convert_alpha(),pygame.image.load("data/YoundGohan/AK5.png").convert_alpha(),pygame.image.load("data/YoundGohan/AK6.png").convert_alpha(),pygame.image.load("data/YoundGohan/AK7.png").convert_alpha(),pygame.image.load("data/YoundGohan/AK8.png").convert_alpha(),pygame.image.load("data/YoundGohan/AK9.png").convert_alpha(),pygame.image.load("data/YoundGohan/AK10.png").convert_alpha()]

    SZ0=[pygame.image.load("data/YoundGohan/AZ1.png").convert_alpha(),pygame.image.load("data/YoundGohan/AZ2.png").convert_alpha(),pygame.image.load("data/YoundGohan/AZ3.png").convert_alpha(),pygame.image.load("data/YoundGohan/AZ4.png").convert_alpha(),pygame.image.load("data/YoundGohan/AZ5.png").convert_alpha(),pygame.image.load("data/Android18/AZ6.png").convert_alpha()]
    SZ1=[pygame.image.load("data/YoundGohan/AQ1.png").convert_alpha(),pygame.image.load("data/YoundGohan/AQ2.png").convert_alpha(),pygame.image.load("data/YoundGohan/AQ3.png").convert_alpha(),pygame.image.load("data/YoundGohan/AQ4.png").convert_alpha()]
    SZ2=[pygame.image.load("data/YoundGohan/AR1.png").convert_alpha(),pygame.image.load("data/YoundGohan/AR2.png").convert_alpha()]
    SZ3=[pygame.image.load("data/YoundGohan/AW3.png").convert_alpha(),pygame.image.load("data/YoundGohan/AW4.png").convert_alpha(),pygame.image.load("data/YoundGohan/AW1.png").convert_alpha(),pygame.image.load("data/YoundGohan/AW2.png").convert_alpha()]
    SZ4=[pygame.image.load("data/YoundGohan/AN1.png").convert_alpha(),pygame.image.load("data/YoundGohan/AN2.png").convert_alpha(),pygame.image.load("data/YoundGohan/AN3.png").convert_alpha(),pygame.image.load("data/YoundGohan/AN4.png").convert_alpha()]
    SZ5=[pygame.image.load("data/YoundGohan/AT1.png").convert_alpha(),pygame.image.load("data/YoundGohan/AT2.png").convert_alpha(),pygame.image.load("data/YoundGohan/AT3.png").convert_alpha(),pygame.image.load("data/YoundGohan/AT4.png").convert_alpha()]
    SZ6=[pygame.image.load("data/YoundGohan/AU1.png").convert_alpha(),pygame.image.load("data/YoundGohan/AU2.png").convert_alpha()]
    SZ7=[pygame.image.load("data/YoundGohan/AV1.png").convert_alpha(),pygame.image.load("data/YoundGohan/AV2.png").convert_alpha()]
    SZ8=[pygame.image.load("data/YoundGohan/AX1.png").convert_alpha(),pygame.image.load("data/YoundGohan/AX2.png").convert_alpha(),pygame.image.load("data/YoundGohan/AW1.png").convert_alpha(),pygame.image.load("data/YoundGohan/AW2.png").convert_alpha(),pygame.image.load("data/YoundGohan/AY1.png").convert_alpha(),pygame.image.load("data/YoundGohan/AY2.png").convert_alpha()]
    SZ9=[pygame.image.load("data/YoundGohan/AP1.png").convert_alpha(),pygame.image.load("data/YoundGohan/AP2.png").convert_alpha()]
    SZ10=[pygame.image.load("data/YoundGohan/AS1.png").convert_alpha(),pygame.image.load("data/YoundGohan/AS2.png").convert_alpha()]
    SZ11=[pygame.image.load("data/YoundGohan/AM1.png").convert_alpha(),pygame.image.load("data/YoundGohan/AM2.png").convert_alpha(),pygame.image.load("data/YoundGohan/AM3.png").convert_alpha(),pygame.image.load("data/YoundGohan/AM4.png").convert_alpha()]
    SZ12=[pygame.image.load("data/YoundGohan/AO1.png").convert_alpha(),pygame.image.load("data/YoundGohan/AO2.png").convert_alpha()]
    SZ13=[pygame.image.load("data/YoundGohan/AW3.png").convert_alpha(),pygame.image.load("data/YoundGohan/AW4.png").convert_alpha(),pygame.image.load("data/YoundGohan/AY3.png").convert_alpha(),pygame.image.load("data/YoundGohan/AY4.png").convert_alpha()]
    SZ14=[pygame.image.load("data/YoundGohan/AX3.png").convert_alpha(),pygame.image.load("data/YoundGohan/AX3.png").convert_alpha(),pygame.image.load("data/YoundGohan/AX4.png").convert_alpha(),pygame.image.load("data/YoundGohan/AX4.png").convert_alpha(),pygame.image.load("data/YoundGohan/AY4.png").convert_alpha(),pygame.image.load("data/YoundGohan/AY4.png").convert_alpha()]
    def __init__(self,x,y,right,logo):
        self.x=x
        self.Base=y
        self.y=y
        self.width=None
        self.height=None
        self.health=None
        self.right=right
        self.logo=logo
        self.SS=0
        self.count=0
        self.stand=0
        self.move=0
        self.hit=0
        self.attack=0
        self.Attack=False
        self.EffectWork=False
        self.Effect=None
        self.Screen=None
        self.SUPER=None
        self.POWERX=x
        self.POWERY=y
        self.POWER=None
        self.POWERBLIT=True
        
        self.A3L=False
        self.A3R=False
        self.A4=False
        self.A5=False
        self.A6=False
        self.A7=False
        self.A8=False
        self.A9L=False # It include A10
        self.A9R=False # It include A10
        self.A11R=False # It include A10
        self.A11L=False # It include A10
        self.A12=False
        self.A13=False
        self.A14=False
        self.A15=False  # Not Enter
        self.A16=False
        self.A17=False
        self.A18=False
        self.A19=False
        self.A20=False
        self.A21=False
        self.A22=False
        self.A23=False
        self.A24=False
        self.A25=False
        self.A26=False
        self.A27=False
        self.A28=False
        self.A29=False
        self.A30=False
        self.A31=False
        self.A32=False
        self.A33=False
        self.A34=False
        self.A35=False
        self.A36=False
        self.A37=False
        self.A38=False
        
        self.Z0=False
        self.Z1=False
        self.Z2=False
        self.Z3=False
        self.Z4=False
        self.Z5=False
        self.Z6=False
        self.Z7=False
        self.Z8=False
        self.Z9=False
        self.Z10=False
        self.Z11=False
        self.Z12=False
        self.Z13=False
        self.Z14=False

    def Direction(self,X):
        if self.x>X.x:
            self.right=False
        elif self.x<X.x:
            self.right=True

    def Computer(self,X):
        if self.A13:
            if self.right:
                if self.attack==16 and self.x+95>X.x-40 and self.y==X.y:
                    self.x=X.x-70
                    COMPUTER.hit=0
                    COMPUTER.Z1=True
                    self.EffectWork=True
                elif self.attack==16 and self.x+95>X.x-40 and self.y>X.y and self.y<X.y+X.height:
                    self.x=X.x-70
                    COMPUTER.hit=0
                    COMPUTER.Z4=True
                    self.EffectWork=True
            else:
                if self.attack==16 and self.x<X.x+X.width+40 and self.y==X.y:
                    self.x=X.x+X.width-40
                    COMPUTER.hit=0
                    COMPUTER.Z1=True
                    self.EffectWork=True
                elif self.attack==16 and self.x<X.x+X.width+40 and self.y>X.y and self.y<X.y+X.height:
                    self.x=X.x+X.width-40
                    COMPUTER.hit=0
                    COMPUTER.Z4=True
                    self.EffectWork=True

        elif self.A14:
            if self.right:
                if self.attack==8 and self.x+95>X.x-40 and self.y==X.y:
                    if random.randint(1,2)==1:
                        self.x=X.x-100
                        COMPUTER.hit=0
                        COMPUTER.Z2=True
                        self.EffectWork=True
                    else:
                        self.x=X.x-110
                        COMPUTER.hit=0
                        COMPUTER.Z1=True
                        self.EffectWork=True
            
                elif self.attack==8 and self.x+95>X.x-40 and self.y>X.y and self.y<X.y+X.height:
                    self.x=X.x-100
                    COMPUTER.hit=0
                    COMPUTER.Z3=True
                    COMPUTER.Z0=True
                    self.EffectWork=True
                        
            else:
                if self.attack==8 and self.x<X.x+X.width+40 and self.y==X.y:
                    if random.randint(1,2)==1:    
                        self.x=X.x+X.width-40
                        COMPUTER.hit=0
                        COMPUTER.Z2=True
                        self.EffectWork=True
                    else:
                        self.x=X.x+X.width-40
                        COMPUTER.hit=0
                        COMPUTER.Z1=True
                        self.EffectWork=True

                elif self.attack==8 and self.x<X.x+X.width+40 and self.y>X.y and self.y<X.y+X.height:
                    self.x=X.x+X.width-40
                    COMPUTER.hit=0
                    COMPUTER.Z3=True
                    COMPUTER.Z0=True
                    self.EffectWork=True


        elif self.A15:
            if self.right:
                if self.POWERX>X.x and self.POWERY<X.y+X.height and self.POWERY>X.y:
                   self.POWERBLIT=False
                   self.POWERX=self.x
                   a=random.randint(1,3)
                   if a==1:
                       COMPUTER.hit=0
                       COMPUTER.Z3=True
                       COMPUTER.Z0=True
                   elif a==2:
                       COMPUTER.hit=0
                       COMPUTER.Z13=True
                       COMPUTER.Z0=True
                   else:
                       COMPUTER.hit=0
                       COMPUTER.Z14=True
                       COMPUTER.Z0=True
                       
            else:
                if self.POWERX<X.x and self.POWERY<X.y+X.height and self.POWERY>X.y:
                   self.POWERBLIT=False
                   self.POWERX=self.x
                   a=random.randint(1,3)
                   if a==1:
                       COMPUTER.hit=0
                       COMPUTER.Z3=True
                       COMPUTER.Z0=True
                   elif a==2:
                       COMPUTER.hit=0
                       COMPUTER.Z13=True
                       COMPUTER.Z0=True
                   else:
                       COMPUTER.hit=0
                       COMPUTER.Z14=True
                       COMPUTER.Z0=True

            
        elif self.A16:
            if self.right:
                if self.attack==8 and self.x+95>X.x-40 and self.y>X.y and self.y<X.y+X.height:
                    self.x=X.x-70
                    COMPUTER.hit=0
                    COMPUTER.Z4=True
                    self.EffectWork=True
                    
                elif self.attack==8 and self.x+95>X.x-40 and self.y==X.y:
                    self.x=X.x-70
                    COMPUTER.hit=0
                    COMPUTER.Z5=True
                    self.EffectWork=True
            else:
                if self.attack==8 and self.x<X.x+X.width+40 and self.y>X.y and self.y<X.y+X.height:
                    self.x=X.x+X.width-40
                    COMPUTER.hit=0
                    COMPUTER.Z4=True
                    self.EffectWork=True
                    
                elif self.attack==8 and self.x<X.x+X.width+40 and self.y==X.y:
                    self.x=X.x+X.width-40
                    COMPUTER.hit=0
                    COMPUTER.Z5=True #Nicha
                    self.EffectWork=True
                    
        elif self.A17:
            if self.right:
                if self.attack==8 and self.x+140>X.x-40 and ((self.y>X.y and self.y<X.y+X.height) or self.y<X.y):
                    self.x=X.x-140
                    if random.randint(1,2)==1:
                        COMPUTER.hit=0
                        COMPUTER.Z6=True
                    else:
                        COMPUTER.hit=0
                        COMPUTER.Z7=True
                    self.EffectWork=True
            else:
                if self.attack==8 and self.x<X.x+X.width+40 and ((self.y>X.y and self.y<X.y+X.height) or self.y<X.y):
                    self.x=X.x+X.width
                    if random.randint(1,2)==1:
                        COMPUTER.hit=0
                        COMPUTER.Z6=True
                    else:
                        COMPUTER.hit=0
                        COMPUTER.Z7=True
                    self.EffectWork=True

        elif self.A18:
            if self.right:
                if self.attack==5 and self.x+95>X.x-40 and (self.y==X.y or (self.y>X.y and self.y<X.y+X.height) or (self.y<X.y and self.y+self.height>X.y)):
                    self.x=X.x-60
                    COMPUTER.hit=0
                    COMPUTER.Z8=True
                    COMPUTER.Z0=True
                    self.EffectWork=True
            else:
                if self.attack==5 and self.x<X.x+X.width+40 and (self.y==X.y or (self.y>X.y and self.y<X.y+X.height) or (self.y<X.y and self.y+self.height>X.y)):
                    self.x=X.x+X.width-30
                    COMPUTER.hit=0
                    COMPUTER.Z8=True
                    COMPUTER.Z0=True
                    self.EffectWork=True
        elif self.A19:
            if self.right:
                if self.attack==5 and self.x+95>X.x-40 and self.y==X.y:
                    COMPUTER.hit=0
                    COMPUTER.Z4=True
                    self.EffectWork=True
                elif self.attack==5 and self.x+95>X.x-40 and self.y<X.y and self.y+self.height>X.y:
                    COMPUTER.hit=0
                    COMPUTER.Z5=True  
                    self.EffectWork=True
            
            else:
                if self.attack==5 and self.x<X.x+X.width+40 and self.y==X.y:
                    self.x=X.x+X.width-20
                    COMPUTER.hit=0
                    COMPUTER.Z4=True
                    self.EffectWork=True
                elif self.attack==5 and self.x<X.x+X.width+40 and self.y<X.y and self.y+self.height>X.y:
                    self.x=X.x+X.width-20
                    COMPUTER.hit=0
                    COMPUTER.Z5=True
                    self.EffectWork=True

        elif self.A20:
            if self.right:
                if self.attack==5 and self.x+95>X.x-40 and self.y==X.y:
                   self.x=X.x-134
                   COMPUTER.hit=0
                   COMPUTER.Z4=True
                   self.EffectWork=True
                elif self.attack==5 and self.x+95>X.x-40 and self.y>X.y and X.y<self.y+self.height:
                   self.x=X.x-134
                   COMPUTER.hit=0
                   COMPUTER.Z4=True
                   self.EffectWork=True
            else:
                if self.attack==5 and self.x<X.x+X.width+40 and self.y==X.y:
                   self.x=X.x+X.width-20
                   COMPUTER.hit=0
                   COMPUTER.Z4=True
                   self.EffectWork=True
                elif self.attack==5 and self.x<X.x+X.width+40 and X.y<self.y+self.height:
                   self.x=X.x+X.width-20
                   COMPUTER.hit=0
                   COMPUTER.Z4=True
                   self.EffectWork=True

        elif self.A21:
            if self.right:
                if self.attack==5 and self.x+95>X.x-40 and self.y==X.y:
                   self.x=X.x-134
                   a=random.randint(1,5)
                   if a==1:
                       COMPUTER.hit=0
                       COMPUTER.Z3=True
                       COMPUTER.Z0=True
                   elif a==2:
                       COMPUTER.hit=0
                       COMPUTER.Z8=True
                       COMPUTER.Z0=True
                   elif a==3:
                       COMPUTER.hit=0
                       COMPUTER.Z1=True
                   elif a==4:
                       COMPUTER.hit=0
                       COMPUTER.Z13=True
                       COMPUTER.Z0=True
                   else:
                       COMPUTER.hit=0
                       COMPUTER.Z14=True
                       COMPUTER.Z0=True
                   self.EffectWork=True
                elif self.attack==5 and self.x+95>X.x-40 and X.y<self.y and X.y+X.height>=self.y:
                   self.x=X.x-134
                   COMPUTER.hit=0
                   COMPUTER.Z13=True
                   COMPUTER.Z0=True
                   self.EffectWork=True
            else:
                if self.attack==5 and self.x<X.x+X.width+40 and self.y==X.y:
                   self.x=X.x+X.width-30
                   a=random.randint(1,5)
                   if a==1:
                       COMPUTER.hit=0
                       COMPUTER.Z3=True
                       COMPUTER.Z0=True
                   elif a==2:
                       COMPUTER.hit=0
                       COMPUTER.Z8=True
                       COMPUTER.Z0=True
                   elif a==3:
                       COMPUTER.hit=0
                       COMPUTER.Z1=True
                   elif a==4:
                       COMPUTER.hit=0
                       COMPUTER.Z13=True
                       COMPUTER.Z0=True
                   else:
                       COMPUTER.hit=0
                       COMPUTER.Z14=True
                       COMPUTER.Z0=True
                   self.EffectWork=True
                elif self.attack==5 and  self.x<X.x+X.width+40 and X.y<self.y and X.y+X.height>=self.y:
                   self.x=X.x+X.width-30
                   COMPUTER.hit=0
                   COMPUTER.Z13=True
                   COMPUTER.Z0=True
                   self.EffectWork=True

        elif self.A22:
            if self.right:
                if self.attack==5 and self.x+95>X.x-40 and (self.y==X.y or (X.y<self.y and X.y+X.height>self.y)):
                    self.x=X.x-150
                    COMPUTER.hit=0
                    COMPUTER.Z4=True
                    if random.randint(1,3)==2:
                        COMPUTER.hit=0
                        COMPUTER.Z0=True
                    self.EffectWork=True        
            else:
                if self.attack==5 and self.x<X.x+X.width+40 and  (self.y==X.y or (X.y<self.y and X.y+X.height>self.y)):
                   self.x=X.x+X.width-40
                   COMPUTER.hit=0
                   COMPUTER.Z4=True
                   if random.randint(1,3)==2:
                        COMPUTER.hit=0
                        COMPUTER.Z0=True
                   self.EffectWork=True
                
                   
        elif self.A23:
            if self.right:
                if self.attack==5 and self.x+95>X.x-40 and self.y==X.y:
                    self.x=X.x-95
                    if random.randint(1,2)==1:
                        COMPUTER.hit=0
                        COMPUTER.Z9=True
                    else:
                        COMPUTER.hit=0
                        COMPUTER.Z10=True
                    self.EffectWork=True
                elif self.attack==5 and self.x+95>X.x-40 and X.y<self.y and X.y+X.height<self.y+self.height:
                    self.x=X.x-95
                    if random.randint(1,2)==1:
                        COMPUTER.hit=0
                        COMPUTER.Z9=True
                    else:
                        COMPUTER.hit=0
                        COMPUTER.Z10=True
                    self.EffectWork=True
            else:
                if self.attack==5 and self.x<X.x+X.width+40 and self.y==X.y:
                   self.x=X.x+X.width-30  
                   if random.randint(1,2)==1:
                        COMPUTER.hit=0
                        COMPUTER.Z9=True
                   else:
                        COMPUTER.hit=0
                        COMPUTER.Z10=True
                   self.EffectWork=True
                elif self.attack==5 and  self.x<X.x+X.width+40 and X.y<self.y and X.y+X.height<self.y+self.heigh:
                    self.x=X.x+X.width-30
                    if random.randint(1,2)==1:
                        COMPUTER.hit=0
                        COMPUTER.Z9=True
                    else:
                        COMPUTER.hit=0
                        COMPUTER.Z10=True
                    self.EffectWork=True

        
        elif self.A24:
            if self.right:
                if self.POWERX>X.x and self.POWERY<X.y+X.height and self.POWERY>X.y:
                   self.POWERBLIT=False
                   self.POWERX=self.x
                   if random.randint(1,2)==1:
                       COMPUTER.hit=0
                       COMPUTER.Z8=True
                       COMPUTER.Z0=True
                   else:
                       COMPUTER.hit=0
                       COMPUTER.Z13=True
                       COMPUTER.Z0=True
                       
            else:
                if self.POWERX<X.x and self.POWERY<X.y+X.height and self.POWERY>X.y:
                   self.POWERBLIT=False
                   self.POWERX=self.x
                   if random.randint(1,2)==1:
                       COMPUTER.hit=0
                       COMPUTER.Z8=True
                       COMPUTER.Z0=True
                   else:
                       COMPUTER.hit=0
                       COMPUTER.Z13=True
                       COMPUTER.Z0=True

        elif self.A25:
            if self.right:
                if self.attack==5 and self.x+95>X.x-40 and self.y==X.y:
                    self.x=X.x-91
                    a=random.randint(1,3)
                    if a==1:
                       COMPUTER.hit=0
                       COMPUTER.Z3=True
                       COMPUTER.Z0=True
                    elif a==2:
                       COMPUTER.hit=0
                       COMPUTER.Z13=True
                       COMPUTER.Z0=True
                    else:
                       COMPUTER.hit=0
                       COMPUTER.Z14=True
                       COMPUTER.Z0=True
                    self.EffectWork=True
                    
                elif self.attack==5 and self.x+95>X.x-40 and self.y<X.y and self.y+self.height>X.y:
                    self.x=X.x-91
                    a=random.randint(1,3)
                    if a==1:
                       COMPUTER.hit=0
                       COMPUTER.Z3=True
                       COMPUTER.Z0=True
                    elif a==2:
                       COMPUTER.hit=0
                       COMPUTER.Z13=True
                       COMPUTER.Z0=True
                    else:
                       COMPUTER.hit=0
                       COMPUTER.Z14=True
                       COMPUTER.Z0=True
                    self.EffectWork=True
            else:
                if self.attack==5 and self.x<X.x+X.width+40 and self.y==X.y:
                   self.x=X.x+X.width-30
                   COMPUTER.hit=0
                   COMPUTER.Z13=True
                   COMPUTER.Z0=True
                   self.EffectWork=True
                elif self.attack==5 and  self.x<X.x+X.width+40 and self.y<X.y and self.y+self.height>X.y:
                   self.x=X.x+X.width-30
                   COMPUTER.hit=0
                   COMPUTER.Z13=True
                   COMPUTER.Z0=True
                   self.EffectWork=True
                
        elif self.A26:
            if self.right:
                if self.attack==5 and self.x+95>X.x-40 and self.y==X.y:
                    self.x=X.x-60
                    COMPUTER.hit=0
                    COMPUTER.Z8=True
                    COMPUTER.Z0=True
                    self.EffectWork=True
                elif self.attack==5 and self.x+95>X.x-40 and self.y<X.y and self.y+self.height>X.y:
                    self.x=X.x-60
                    COMPUTER.hit=0
                    COMPUTER.Z8=True
                    COMPUTER.Z0=True
                    self.EffectWork=True
            else:
                if self.attack==5 and self.x<X.x+X.width+40 and self.y==X.y:
                   self.x=X.x+X.width-50
                   COMPUTER.hit=0
                   COMPUTER.Z8=True
                   COMPUTER.Z0=True
                   self.EffectWork=True
                elif self.attack==5 and  self.x<X.x+X.width+40 and self.y<X.y and self.y+self.height>X.y:
                   self.x=X.x+X.width-50
                   COMPUTER.hit=0
                   COMPUTER.Z8=True
                   COMPUTER.Z0=True
                   self.EffectWork=True
                
        elif self.A27:
            if self.right:
                if self.POWERX>X.x and self.POWERY<X.y+X.height and self.POWERY>X.y:
                   self.POWERBLIT=False
                   self.POWERX=self.x
                   a=random.randint(1,3)
                   if a==1:
                       COMPUTER.hit=0
                       COMPUTER.Z3=True
                       COMPUTER.Z0=True
                   elif a==2:
                       COMPUTER.hit=0
                       COMPUTER.Z13=True
                       COMPUTER.Z0=True
                   else:
                       COMPUTER.hit=0
                       COMPUTER.Z14=True
                       COMPUTER.Z0=True
            else:
                if self.POWERX<X.x and self.POWERY<X.y+X.height and self.POWERY>X.y:
                   self.POWERBLIT=False
                   self.POWERX=self.x
                   a=random.randint(1,3)
                   if a==1:
                       COMPUTER.hit=0
                       COMPUTER.Z3=True
                       COMPUTER.Z0=True
                   elif a==2:
                       COMPUTER.hit=0
                       COMPUTER.Z13=True
                       COMPUTER.Z0=True
                   else:
                       COMPUTER.hit=0
                       COMPUTER.Z14=True
                       COMPUTER.Z0=True

        elif self.A28:
            if self.right:
                if self.attack==5 and self.x+95>X.x-40 and self.y==X.y:
                    self.x=X.x-75
                    if random.randint(1,2)==1:
                        COMPUTER.hit=0
                        COMPUTER.Z8=True
                        COMPUTER.Z0=True
                    else:
                        COMPUTER.hit=0
                        COMPUTER.Z14=True
                        COMPUTER.Z0=True
                    self.EffectWork=True
                elif self.attack==5 and self.x+95>X.x-40 and self.y<X.y and self.y+self.height>X.y:
                    self.x=X.x-75
                    if random.randint(1,2)==1:
                        COMPUTER.hit=0
                        COMPUTER.Z8=True
                        COMPUTER.Z0=True
                    else:
                        COMPUTER.hit=0
                        COMPUTER.Z14=True
                        COMPUTER.Z0=True
                    self.EffectWork=True
            else:
                if self.attack==5 and self.x<X.x+X.width+40 and self.y==X.y:
                   self.x=X.x+X.width-30  
                   if random.randint(1,2)==1:
                        COMPUTER.hit=0
                        COMPUTER.Z8=True
                        COMPUTER.Z0=True
                   else:
                        COMPUTER.hit=0
                        COMPUTER.Z1=True
                        COMPUTER.Z0=True
                   self.EffectWork=True
                elif self.attack==5 and  self.x<X.x+X.width+40 and self.y<X.y and self.y+self.height>X.y:
                   self.x=X.x+X.width-30  
                   if random.randint(1,2)==1:
                        COMPUTER.hit=0
                        COMPUTER.Z8=True
                        COMPUTER.Z0=True
                   else:
                        COMPUTER.hit=0
                        COMPUTER.Z1=True
                        COMPUTER.Z0=True
                   self.EffectWork=True

        elif self.A29:
            if self.right:
                if self.attack==5 and self.x+95>X.x-40 and self.y==X.y:
                   self.x=X.x-95
                   a=random.randint(1,3)
                   if a==1:
                        COMPUTER.hit=0 
                        COMPUTER.Z11=True
                   elif a==2:
                        COMPUTER.hit=0 
                        COMPUTER.Z1=True
                   else:
                        COMPUTER.hit=0 
                        COMPUTER.Z4=True
                        
                   self.EffectWork=True
                elif self.attack==5 and self.x+95>X.x-40 and self.y<X.y and self.y+self.height>X.y:
                    self.x=X.x-95
                    COMPUTER.hit=0 
                    COMPUTER.Z4=True
            else:
                if self.attack==5 and self.x<X.x+X.width+40 and self.y==X.y:
                   self.x=X.x+X.width-40
                   a=random.randint(1,3)
                   if a==1:
                        COMPUTER.hit=0 
                        COMPUTER.Z11=True
                   elif a==2:
                        COMPUTER.hit=0 
                        COMPUTER.Z1=True
                   else:
                        COMPUTER.hit=0 
                        COMPUTER.Z4=True
                   self.EffectWork=True
                elif self.attack==5 and  self.x<X.x+X.width+40 and self.y<X.y and self.y+self.height>X.y:
                    self.x=X.x+X.width-40
                    COMPUTER.hit=0 
                    COMPUTER.Z4=True

        elif self.A30:
            if self.right:
                if self.attack==5 and self.x+95>X.x-40 and X.y<self.y+self.height and X.y>=self.y:
                    self.x=X.x-90
                    COMPUTER.hit=0
                    COMPUTER.Z1=True
                    if random.randint(1,2)==1:
                        COMPUTER.Z0=True
                    self.EffectWork=True
            else:
                if self.attack==5 and self.x<X.x+X.width+40 and X.y<self.y+self.height and X.y>=self.y:
                   self.x=X.x+X.width-40
                   COMPUTER.hit=0
                   COMPUTER.Z1=True
                   if random.randint(1,2)==1:
                        COMPUTER.Z0=True
                   self.EffectWork=True

        elif self.A31:
            if self.right:
                if self.attack==11 and self.x+95>X.x-40 and self.y==X.y:
                    self.x=X.x-90
                    if random.randint(1,2)==0:
                        COMPUTER.hit=0
                        COMPUTER.Z9=True
                    else:
                        COMPUTER.hit=0
                        COMPUTER.Z10=True
                    if random.randint(1,4)==2:
                        COMPUTER.hit=0
                        COMPUTER.Z0=True
                    self.EffectWork=True
                elif self.attack==5 and self.x+95>X.x-40 and self.y<X.y and self.y+self.height>X.y:
                    self.x=X.x-90
                    COMPUTER.hit=0
                    COMPUTER.Z0=True 
                    self.EffectWork=True
            else:
                if self.attack==11 and self.x<X.x+X.width+40 and self.y==X.y:
                   self.x=X.x+X.width-40  
                   if random.randint(1,2)==0:
                        COMPUTER.hit=0
                        COMPUTER.Z9=True
                   else:
                        COMPUTER.hit=0
                        COMPUTER.Z10=True
                   if random.randint(1,4)==2:
                        COMPUTER.hit=0
                        COMPUTER.Z0=True
                   self.EffectWork=True
                elif self.attack==5 and  self.x<X.x+X.width+40 and self.y<X.y and self.y+self.height>X.y:
                    self.x=X.x+X.width-40  
                    COMPUTER.hit=0
                    COMPUTER.Z0=True 
                    self.EffectWork=True

        elif self.A32:
                if self.POWERY>X.y:
                   a=random.randint(1,3)
                   if a==1:
                       COMPUTER.hit=0
                       COMPUTER.Z3=True
                       COMPUTER.Z0=True
                   elif a==2:
                       COMPUTER.hit=0
                       COMPUTER.Z13=True
                       COMPUTER.Z0=True
                   else:
                       COMPUTER.hit=0
                       COMPUTER.Z14=True
                       COMPUTER.Z0=True
                    

        elif self.A33:
            if self.right:
                if self.attack==11 and self.x+95>X.x-40 and X.y<self.y+self.height and X.y>=self.y:
                    self.x=X.x-90
                    a=random.randint(1,3)
                    if a==1:
                        COMPUTER.hit=0
                        COMPUTER.Z1=True
                        if random.randint(1,2)==1:
                            COMPUTER.Z0=True
                    elif a==2:
                        COMPUTER.hit=0
                        COMPUTER.Z2=True
                        if random.randint(1,2)==1:
                            COMPUTER.Z0=True
                    else:
                        COMPUTER.hit=0
                        COMPUTER.Z5=True
                        if random.randint(1,2)==1:
                            COMPUTER.Z0=True
                    self.EffectWork=True
            else:
                if self.attack==11 and self.x<X.x+X.width+40 and X.y<self.y+self.height and X.y>=self.y:
                   self.x=X.x+X.width-40  
                   a=random.randint(1,3)
                   if a==1:
                        COMPUTER.hit=0
                        COMPUTER.Z1=True
                        if random.randint(1,2)==1:
                            COMPUTER.Z0=True
                   elif a==2:
                        COMPUTER.hit=0
                        COMPUTER.Z2=True
                        if random.randint(1,2)==1:
                            COMPUTER.Z0=True
                   else:
                        COMPUTER.hit=0
                        COMPUTER.Z5=True
                        if random.randint(1,2)==1:
                            COMPUTER.Z0=True
                   self.EffectWork=True

        elif self.A34:
            pass

        elif self.A35:
            if self.right:
                if self.attack==11 and self.x+95>X.x-40 and X.y<self.y+self.height and X.y>=self.y:
                    self.x=X.x-20
                    a=random.randint(1,7)
                    if a==1:
                        COMPUTER.hit=0
                        COMPUTER.Z4=True
                        if random.randint(1,2)==1:
                            COMPUTER.Z0=True   
                    elif a==2:
                        COMPUTER.hit=0
                        COMPUTER.Z12=True
                        if random.randint(1,2)==1:
                            COMPUTER.Z0=True
                    elif a==3:
                        COMPUTER.hit=0
                        COMPUTER.Z9=True
                        if random.randint(1,2)==1:
                            COMPUTER.Z0=True
                    elif a==4:
                        COMPUTER.hit=0
                        COMPUTER.Z1=True
                        if random.randint(1,2)==1:
                            COMPUTER.Z0=True
                    elif a==5:
                        COMPUTER.hit=0
                        COMPUTER.Z5=True
                        if random.randint(1,2)==1:
                            COMPUTER.Z0=True
                    elif a==6:
                        COMPUTER.hit=0
                        COMPUTER.Z2=True
                        if random.randint(1,2)==1:
                            COMPUTER.Z0=True
                    else:
                        COMPUTER.hit=0
                        COMPUTER.Z10=True
                        if random.randint(1,2)==1:
                            COMPUTER.Z0=True
                    self.EffectWork=True
            else:
                if self.attack==11 and self.x<X.x+X.width+40 and X.y<self.y+self.height and X.y>=self.y:
                    self.x=X.x+X.width-50  
                    a=random.randint(1,7)
                    if a==1:
                        COMPUTER.hit=0
                        COMPUTER.Z4=True
                        if random.randint(1,2)==1:
                            COMPUTER.Z0=True                        
                    elif a==2:
                        COMPUTER.hit=0
                        COMPUTER.Z12=True
                        if random.randint(1,2)==1:
                            COMPUTER.Z0=True
                    elif a==3:
                        COMPUTER.hit=0
                        COMPUTER.Z9=True
                        if random.randint(1,2)==1:
                            COMPUTER.Z0=True
                    elif a==4:
                        COMPUTER.hit=0
                        COMPUTER.Z1=True
                        if random.randint(1,2)==1:
                            COMPUTER.Z0=True
                    elif a==5:
                        COMPUTER.hit=0
                        COMPUTER.Z5=True
                        if random.randint(1,2)==1:
                            COMPUTER.Z0=True
                    elif a==6:
                        COMPUTER.hit=0
                        COMPUTER.Z2=True
                        if random.randint(1,2)==1:
                            COMPUTER.Z0=True
                    else:
                        COMPUTER.hit=0
                        COMPUTER.Z10=True
                        if random.randint(1,2)==1:
                            COMPUTER.Z0=True
                    self.EffectWork=True

        elif self.A36:
            if self.right:
                if self.attack==11 and self.x+95>X.x-40 and X.y<self.y+self.height and X.y>=self.y:
                    self.x=X.x-20
                    if random.randint(1,2)==1:
                        COMPUTER.hit=0
                        COMPUTER.Z8=True
                        COMPUTER.Z0=True
                    else:
                        COMPUTER.hit=0
                        COMPUTER.Z1=True     
                    self.EffectWork=True
            else:
                if self.attack==11 and self.x<X.x+X.width+40 and X.y<self.y+self.height and X.y>=self.y:
                   self.x=X.x+X.width-40  
                   if random.randint(1,2)==1:
                        COMPUTER.hit=0
                        COMPUTER.Z8=True
                        COMPUTER.Z0=True
                   else:
                        COMPUTER.hit=0
                        COMPUTER.Z1=True
                   self.EffectWork=True

        elif self.A37:
            pass
        
    def Me(self,X): 
        pass    
    def Battelfeild(self,win):
        win.blit(self.BG,(0,0))
        
    def Control(self,keys):
        if keys[pygame.K_m]:
            pass
        elif (keys[pygame.K_LSHIFT] or keys[pygame.K_RSHIFT]) and (keys[pygame.K_LCTRL] or keys[pygame.K_RCTRL]):
            if self.attack==0:
                self.A15=True
        elif (keys[pygame.K_LSHIFT] or keys[pygame.K_RSHIFT]) and (keys[pygame.K_LALT] or keys[pygame.K_RALT]):
            if self.attack==0:
                self.A24=True
        elif (keys[pygame.K_LSHIFT] or keys[pygame.K_RSHIFT]) and keys[pygame.K_SPACE]:
            if self.attack==0:
                self.A27=True
        elif (keys[pygame.K_LALT] or keys[pygame.K_RALT]) and (keys[pygame.K_LCTRL] or keys[pygame.K_RCTRL]):
            if self.attack==0:
                self.A32=True
        elif (keys[pygame.K_LCTRL] or keys[pygame.K_RCTRL]) and keys[pygame.K_SPACE]:
            if self.attack==0:
                self.A34=True
        elif (keys[pygame.K_LALT] or keys[pygame.K_RALT]) and keys[pygame.K_SPACE]:
            if self.attack==0:
                self.A37=True
        elif (keys[pygame.K_RSHIFT] or keys[pygame.K_LSHIFT])and keys[pygame.K_q]:
            if self.attack==0:
                self.A16=True
        elif (keys[pygame.K_RSHIFT] or keys[pygame.K_LSHIFT])and keys[pygame.K_w]:
            if self.attack==0:
                 self.A33=True
        elif (keys[pygame.K_RSHIFT] or keys[pygame.K_LSHIFT])and keys[pygame.K_e]:
            if self.attack==0:
                self.A35=True
        elif (keys[pygame.K_RSHIFT] or keys[pygame.K_LSHIFT])and keys[pygame.K_a]:
            if self.attack==0:
                self.A17=True
        elif (keys[pygame.K_RSHIFT] or keys[pygame.K_LSHIFT])and keys[pygame.K_s]:
            if self.attack==0:
                self.A22=True
        elif (keys[pygame.K_RSHIFT] or keys[pygame.K_LSHIFT])and keys[pygame.K_d]:
            if self.attack==0:
                self.A25=True
        elif (keys[pygame.K_RSHIFT] or keys[pygame.K_LSHIFT])and keys[pygame.K_z]:
            if self.attack==0:
                self.A28=True
        elif (keys[pygame.K_RSHIFT] or keys[pygame.K_LSHIFT])and keys[pygame.K_x]:
            if self.attack==0:
                self.A30=True
        elif (keys[pygame.K_RSHIFT] or keys[pygame.K_LSHIFT])and keys[pygame.K_c]:
            if self.attack==0:
                self.A31=True
        elif (keys[pygame.K_RCTRL] or keys[pygame.K_LCTRL]) and (keys[pygame.K_q] or keys[pygame.K_w] or keys[pygame.K_e]):
            if self.attack==0:
                self.A36=True
                
        elif keys[pygame.K_RSHIFT] and keys[pygame.K_RIGHT]:
            if self.count==0:
                self.A9R=True
                
        elif keys[pygame.K_RSHIFT] and keys[pygame.K_LEFT]:
            if self.count==0:
                self.A9L=True

        elif keys[pygame.K_LSHIFT] and keys[pygame.K_RIGHT]:
            if self.count==0:
                self.A11R=True

        elif keys[pygame.K_LSHIFT] and keys[pygame.K_LEFT]:
            if self.count==0:
                self.A11L=True
                
        elif keys[pygame.K_LEFT]:
            self.A3L=True
            self.A9R=False
            self.A9L=False
            self.A11R=False
            self.A11L=False
            self.move=0
        elif keys[pygame.K_RIGHT]:
            self.A3R=True
            self.A9R=False
            self.A9L=False
            self.A11R=False
            self.A11L=False
            self.move=0
                
        elif keys[pygame.K_UP]:
            if self.count==0:
                self.A7=True

        elif keys[pygame.K_DOWN]:
            if self.count==0:
                self.A8=True
                
        elif keys[pygame.K_SPACE]:
            if self.count==0 and self.attack==0:
                self.A12=True
                
        elif keys[pygame.K_q]:
            if self.attack==0:
                self.A13=True
        elif keys[pygame.K_w]:
            if self.attack==0:
                self.A29=True
        elif keys[pygame.K_e]:
            if self.attack==0:
                self.A21=True
        elif keys[pygame.K_a]:
            if self.attack==0:
                self.A14=True
        elif keys[pygame.K_s]:
            if self.attack==0:
                self.A19=True
        elif keys[pygame.K_d]:
            if self.attack==0:
                self.A20=True
        elif keys[pygame.K_z]:
            if self.attack==0:
                self.A18=True
        elif keys[pygame.K_x]:
            if self.attack==0:
                self.A23=True
        elif keys[pygame.K_c]:
            if self.attack==0:
                self.A26=True
        

                                
                
            
    def draw(self,win,X):
        
        if self.logo:
            win.blit(self.Logo,(0,0))
            pygame.draw.rect(win,(255,255,255),(0,0,100,100),1)
            win.blit(self.Name,(110,0))
            win.blit(self.V,(620,40))
            win.blit(self.A,(640,40))
            
            pygame.draw.rect(win,(0,0,0),(100,40,500,30))
            pygame.draw.rect(win,(230,98,46),(100,40,500,30))
            pygame.draw.rect(win,(255,255,255),(100,40,500,30),1)

            pygame.draw.rect(win,(0,0,0),(100,70,250,30))
            pygame.draw.rect(win,(255,223,0),(100,70,250,30))            
            pygame.draw.rect(win,(255,255,255),(100,70,250,30),1)
        else:
            win.blit(self.Logo,(1200,0))
            pygame.draw.rect(win,(255,255,255),(1200,0,100,100),1)
            win.blit(self.Name,(970,0))
            win.blit(self.S,(660,40))

            pygame.draw.rect(win,(0,0,0),(702,40,500,30))
            pygame.draw.rect(win,(230,98,46),(702,40,500,30))
            pygame.draw.rect(win,(255,255,255),(702,40,500,30),1)

            
            pygame.draw.rect(win,(0,0,0),(952,70,250,30))
            pygame.draw.rect(win,(255,223,0),(952,70,250,30))
            pygame.draw.rect(win,(255,255,255),(952,70,250,30),1)



            
        if self.A3L:
            self.Screen=self.SA3[self.move//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
                if self.x>10:
                    self.x-=2
            else:
                if self.x>X.x+X.width+5:
                    self.x-=2
            win.blit(self.Screen,(self.x,self.y))
            self.move+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.move+ 1> 20:
                self.move=0
                self.A3L=False
                self.Direction(X)
                

        elif self.A3R:
            self.Screen=self.SA3[self.move//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
                if self.x<X.x-97:
                    self.x+=2
            else:
                if self.x+97<1300:
                    self.x+=2
            win.blit(self.Screen,(self.x,self.y))
            self.move+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.move+ 1> 20:
                self.move=0
                self.A3R=False
                self.Direction(X)

        elif self.A4:
            self.Screen=self.SA4[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.count=0
                self.A4=False
                self.Direction(X)

        elif self.A5:
            self.y=self.Base+30
            self.Screen=self.SA5[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.count=0
                self.y=self.Base
                self.A5=False
                self.Direction(X)

        elif self.A6:
            self.Screen=self.SA6[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.count=0
                self.A6=False
                self.Direction(X)

        elif self.A7:
            if self.right and 1300 -(X.x+X.width)>100: # 100 self.widht
                if (self.x+95)>X.x-40 and  self.x<X.x+X.width+10  and self.count>18 and self.x+95 < 1300:
                    self.x+=50
            else:
                if X.x>100 :# 100 self.widht
                   if self.x<(X.x+X.width+40)and self.x+95>X.x-10 and self.count>18 and self.x > 20:
                        self.x-=50
                
            if self.count<12 and self.count>4:
                self.y-=25
            self.Screen=self.SA7[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                if self.x+95>1300:
                    self.x=self.x-(self.x+95-1300)
                if self.x<10:
                    self.x=10
                self.count=0
                self.y=self.Base
                self.A7=False
                self.Direction(X)
                
        elif self.A8:
            if self.count>8:
                self.y=self.Base+60
            self.Screen=self.SA8[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.y=self.Base
                self.count=0
                self.A8=False
                self.Direction(X)

        elif self.A9R: 
            if self.right:
                if self.x+135<X.x-20 and self.move>=8:
                    self.x+=10  
                    self.move=7
                self.Screen=self.SA9[self.move//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x+106<1300 and self.move>=4: # SELF.WIDHT 106
                    self.x+=10
                    self.move=3
                self.Screen=self.SA10[self.move//4]     
            win.blit(self.Screen,(self.x,self.y))
            self.move+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.move+1>12:
                self.y=self.Base
                self.move=0
                self.A9R=False
                self.Direction(X)

        elif self.A9L:
            if self.right:
                if self.x>10 and self.move>=4:
                    self.x-=10
                    self.move=3
                self.Screen=self.SA10[self.move//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x>X.x+X.width+20 and self.move>=8:
                    self.x-=10
                    self.move=7
                self.Screen=self.SA9[self.move//4]
                
            win.blit(self.Screen,(self.x,self.y))
            self.move+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.move+1>12:
                self.y=self.Base
                self.move=0
                self.A9L=False
                self.Direction(X)
        
        elif self.A11R:
            if self.right:
                if self.x+130<X.x-20 and self.move>=8: # SELF.WIDTH 130
                    self.x+=10
                    self.move=7
                self.Screen=self.SA11[self.move//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x+106<1300 and self.move>=4: # SELF.WIDTH 106
                    self.x+=10
                    self.move=3
                self.Screen=self.SA10[self.move//4]     
            win.blit(self.Screen,(self.x,self.y))
            self.move+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.right:
                if self.move+1>16:
                    self.y=self.Base
                    self.move=0
                    self.A11R=False
                    self.Direction(X)
            else:
                if self.move+1>12:
                    self.y=self.Base
                    self.move=0
                    self.A11R=False
                    self.Direction(X)


        elif self.A11L:
            if self.right:
                if self.x>10 and self.move>=4:
                    self.x-=10
                    self.move=3
                self.Screen=self.SA10[self.move//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x>X.x+X.width+20 and self.move>=8:
                    self.x-=10
                    self.move=7
                self.Screen=self.SA11[self.move//4]
                
            win.blit(self.Screen,(self.x,self.y))
            self.move+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.right:
                if self.move+1>12:
                    self.y=self.Base
                    self.move=0
                    self.A11L=False
                    self.Direction(X)
            else:
                if self.move+1>16:
                    self.y=self.Base
                    self.move=0
                    self.A11L=False
                    self.Direction(X)


        elif self.A12:
            self.SUPER=self.SE[self.SS//4]
            self.SUPER=pygame.transform.scale(self.SUPER,(300,280))
            self.Screen=self.SA12[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            win.blit(self.SUPER,(self.x-100,self.y-160))
            self.count+=1
            self.SS+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.SS+1>16:
                self.SS=0
            if self.count+1>24:
                self.y=self.Base
                self.count=0
                self.SS=0
                self.A12=False
                self.Direction(X)

        elif self.A13:
            self.Screen=self.SA13[self.attack//4]
            self.Effect=pygame.image.load("data/Power/p1.png")
            self.Effect=pygame.transform.scale(self.Effect,(80,80))
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=16 and self.attack<=20 and self.EffectWork:
                    win.blit(self.Effect,(self.x+50,self.y+10))
            else:
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=16 and self.attack<=20 and self.EffectWork:
                    win.blit(self.Effect,(self.x-40,self.y+10))
            self.attack+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.attack+1>28:
                if self.right and self.x>10:
                    self.x-=5
                else:
                    if self.x+95<1300:
                        self.x+=5
                self.Attack=False
                self.y=self.Base
                self.attack=0
                self.A13=False
                self.EffectWork=False
                self.Direction(X)

        elif self.A14:
            self.Screen=self.SA14[self.attack//4]
            self.Effect=pygame.image.load("data/Power/p3.png")
            self.Effect=pygame.transform.scale(self.Effect,(80,80))
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)        
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=8 and self.attack<=12 and self.EffectWork:
                    win.blit(self.Effect,(self.x+80,self.y-10))    
            else:
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=8 and self.attack<=12 and self.EffectWork:
                    win.blit(self.Effect,(self.x-10,self.y-10))
            self.attack+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.attack+1>24:
                self.Attack=False 
                self.y=self.Base
                self.attack=0
                self.A14=False
                self.EffectWork=False
                self.Direction(X)

        elif self.A15:
            self.POWER=pygame.image.load("data/Power/p39.png")
            self.POWER=pygame.transform.scale(self.POWER,(100,100))
            self.Screen=self.SA15[self.attack//4]
            if self.right:
                if self.attack==5:
                   self.POWERX=self.x+100
                   self.POWERY=self.y+5
                if self.POWERX<1300 and self.attack>5 and self.POWERBLIT:
                    win.blit(self.POWER,(self.POWERX,self.POWERY))
                    self.POWERX+=15
                    self.attack=6
            else:
                if self.attack==5:
                   self.POWERX=self.x-100
                   self.POWERY=self.y+5
                if self.POWERX>0 and self.attack>5 and self.POWERBLIT:
                    win.blit(self.POWER,(self.POWERX,self.POWERY))
                    self.POWERX-=15
                    self.attack=6    
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)                
                win.blit(self.Screen,(self.x,self.y))
            else:
                win.blit(self.Screen,(self.x,self.y))
            self.attack+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.attack+1>24:
                self.Attack=False
                self.EffectWork=False
                self.y=self.Base
                self.attack=0
                self.A15=False
                self.Direction(X)
                self.POWERBLIT=True
                    
        elif self.A16 :
            self.y=self.Base+30
            self.Screen=self.SA16[self.attack//4]
            self.Effect=pygame.image.load("data/Power/p1.png")
            self.Effect=pygame.transform.scale(self.Effect,(80,80))
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=4 and self.attack<=12 and self.EffectWork:
                    win.blit(self.Effect,(self.x+50,self.y))
            else:
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=4 and self.attack<=12 and self.EffectWork:
                    win.blit(self.Effect,(self.x-40,self.y))
            self.attack+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.attack+1>16:
                self.Attack=False
                self.EffectWork=False
                self.y=self.Base
                self.attack=0
                self.A16=False
                self.Direction(X)


        elif self.A17 :
            if self.attack==1:
                self.y=X.Base+X.height-84
            self.Screen=self.SA17[self.attack//4]
            self.Effect=pygame.image.load("data/Power/p3.png")
            self.Effect=pygame.transform.scale(self.Effect,(80,80))
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)        
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=8 and self.attack<=12 and self.EffectWork:
                    win.blit(self.Effect,(self.x+100,self.y))
                
            else:
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=8 and self.attack<=12 and self.EffectWork:
                    win.blit(self.Effect,(self.x-20,self.y))
            self.attack+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.attack+1>24:
                self.Attack=False
                self.EffectWork=False
                self.y=self.Base
                self.attack=0
                self.A17=False
                self.Direction(X)



        elif self.A18 :
            self.y=self.Base-20
            self.Screen=self.SA18[self.attack//4]
            self.Effect=pygame.image.load("data/Power/p3.png")
            self.Effect=pygame.transform.scale(self.Effect,(80,80))
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)        
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=4 and self.attack<=12 and self.EffectWork:
                    win.blit(self.Effect,(self.x+80,self.y-10))       
            else:
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=4 and self.attack<=12 and self.EffectWork:
                    win.blit(self.Effect,(self.x-20,self.y-10))
            self.attack+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.attack+1>16:
                self.Attack=False
                self.EffectWork=False
                self.y=self.Base
                self.attack=0
                self.A18=False
                self.Direction(X)

        elif self.A19:
            self.Screen=self.SA19[self.attack//4]
            self.Effect=pygame.image.load("data/Power/p9.png")
            self.Effect=pygame.transform.scale(self.Effect,(80,80))
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)        
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=5 and self.attack<=12 and self.EffectWork:
                    win.blit(self.Effect,(self.x+90,self.y-10))       
            else:
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=5 and self.attack<=12 and self.EffectWork:
                    win.blit(self.Effect,(self.x-30,self.y-10))
            self.attack+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.attack+1>20:
                self.Attack=False
                self.EffectWork=False
                self.y=self.Base
                self.attack=0
                self.A19=False
                self.Direction(X)
            
        elif self.A20:
            self.Screen=self.SA20[self.attack//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)                
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=5 and self.attack<=7 and self.EffectWork:
                    self.Effect=pygame.image.load("data/Power/p9.png")
                    self.Effect=pygame.transform.scale(self.Effect,(80,80))
                    win.blit(self.Effect,(self.x+110,self.y+60))
                elif self.attack>=9 and self.attack<=11 and self.EffectWork:
                    self.Effect=pygame.image.load("data/Power/p9.png")
                    self.Effect=pygame.transform.scale(self.Effect,(80,80))
                    win.blit(self.Effect,(self.x+110,self.y+20))
                elif self.attack==13 and self.attack<=15 and self.EffectWork:
                    self.Effect=pygame.image.load("data/Power/p9.png")
                    self.Effect=pygame.transform.scale(self.Effect,(80,80))
                    win.blit(self.Effect,(self.x+110,self.y+10))
            else:
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=5 and self.attack<=7 and self.EffectWork:
                    self.Effect=pygame.image.load("data/Power/p9.png")
                    self.Effect=pygame.transform.scale(self.Effect,(80,80))
                    win.blit(self.Effect,(self.x-40,self.y+60))
                elif self.attack>=9 and self.attack<=11 and self.EffectWork:
                    self.Effect=pygame.image.load("data/Power/p9.png")
                    self.Effect=pygame.transform.scale(self.Effect,(80,80))
                    win.blit(self.Effect,(self.x-40,self.y+20))
                elif self.attack==13 and self.attack<=15 and self.EffectWork:
                    self.Effect=pygame.image.load("data/Power/p9.png")
                    self.Effect=pygame.transform.scale(self.Effect,(80,80))
                    win.blit(self.Effect,(self.x-40,self.y+10))
            self.attack+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.attack+1>20:
                self.Attack=False
                self.EffectWork=False
                self.y=self.Base
                self.attack=0
                self.A20=False
                self.Direction(X)
                
        elif self.A21:
            self.Screen=self.SA21[self.attack//4]
            self.Effect=pygame.image.load("data/Power/p1.png")
            self.Effect=pygame.transform.scale(self.Effect,(80,80))
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=12 and self.attack<=15 and self.EffectWork:
                    win.blit(self.Effect,(self.x+50,self.y-20))
            else:
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=12 and self.attack<=15 and self.EffectWork:
                    win.blit(self.Effect,(self.x-40,self.y-20))
            self.attack+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.attack+1>16:
                self.Attack=False
                self.EffectWork=False
                self.y=self.Base
                self.attack=0
                self.A21=False
                self.Direction(X)
            
        elif self.A22:
            self.Screen=self.SA22[self.attack//4]
            self.Effect=pygame.image.load("data/Power/p9.png")
            self.Effect=pygame.transform.scale(self.Effect,(80,80))
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)        
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=5 and self.attack<=12 and self.EffectWork:
                    win.blit(self.Effect,(self.x+110,self.y+10))       
            else:
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=5 and self.attack<=12 and self.EffectWork:
                    win.blit(self.Effect,(self.x-40,self.y+10))
            self.attack+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.attack+1>20:
                self.Attack=False
                self.EffectWork=False
                self.y=self.Base
                self.attack=0
                self.A22=False
                self.Direction(X)
                
        elif self.A23:
            self.Screen=self.SA23[self.attack//4]
            self.Effect=pygame.image.load("data/Power/p21.png")
            self.Effect=pygame.transform.scale(self.Effect,(80,80))
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)        
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=5 and self.attack<=12 and self.EffectWork:
                    win.blit(self.Effect,(self.x+90,self.y-10))       
            else:
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=5 and self.attack<=12 and self.EffectWork:
                    win.blit(self.Effect,(self.x-40,self.y-10))
            self.attack+=1
            self.width=self.Screen.get_width() 
            self.height=self.Screen.get_height()
            if self.attack+1>24:
                self.Attack=False 
                self.y=self.Base
                self.attack=0
                self.A23=False
                self.Direction(X)
                
        elif self.A24:
            self.POWER=pygame.image.load("data/Power/p1.png")
            self.POWER=pygame.transform.scale(self.POWER,(100,100))
            self.Screen=self.SA24[self.attack//4]
            if self.right:
                if self.attack==11:
                   self.POWERX=self.x+100
                   self.POWERY=self.y+5
                if self.POWERX<1300 and self.attack>11 and self.POWERBLIT:
                    win.blit(self.POWER,(self.POWERX,self.POWERY))
                    self.POWERX+=15
                    self.attack=12
            else:
                if self.attack==11:
                   self.POWERX=self.x-100
                   self.POWERY=self.y+5
                if self.POWERX>0 and self.attack>11 and self.POWERBLIT:
                    win.blit(self.POWER,(self.POWERX,self.POWERY))
                    self.POWERX-=15
                    self.attack=12   
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)                
                win.blit(self.Screen,(self.x,self.y))
            else:
                win.blit(self.Screen,(self.x,self.y))
            self.attack+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.attack+1>20:
                self.Attack=False
                self.EffectWork=False
                self.y=self.Base
                self.attack=0
                self.A24=False
                self.Direction(X)
                self.POWERBLIT=True
                
        elif self.A25:
            self.Screen=self.SA25[self.attack//4]
            self.Effect=pygame.image.load("data/Power/p29.png")
            self.Effect=pygame.transform.scale(self.Effect,(80,80))
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)        
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=5 and self.attack<=12 and self.EffectWork:
                    win.blit(self.Effect,(self.x+95,self.y+10))       
            else:
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=5 and self.attack<=12 and self.EffectWork:
                    win.blit(self.Effect,(self.x-40,self.y+10))
            self.attack+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.attack+1>20:
                self.Attack=False
                self.EffectWork=False
                self.y=self.Base
                self.attack=0
                self.A25=False
                self.Direction(X)
                
        elif self.A26:
            self.Screen=self.SA26[self.attack//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)                
            win.blit(self.Screen,(self.x,self.y))
            self.attack+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.attack+1>20:
                self.Attack=False 
                self.y=self.Base
                self.attack=0
                self.A26=False
                self.Direction(X)
                
        elif self.A27:
            self.POWER=pygame.image.load("data/Power/p19.png")
            self.POWER=pygame.transform.scale(self.POWER,(100,100))
            self.Screen=self.SA27[self.attack//4]
            if self.right:
                if self.attack==5:
                   self.POWERX=self.x+100
                   self.POWERY=self.y+5
                if self.POWERX<1300 and self.attack>5 and self.POWERBLIT:
                    win.blit(self.POWER,(self.POWERX,self.POWERY))
                    self.POWERX+=15
                    self.attack=6
            else:
                if self.attack==5:
                   self.POWERX=self.x-100
                   self.POWERY=self.y+5
                if self.POWERX>0 and self.attack>5 and self.POWERBLIT:
                    win.blit(self.POWER,(self.POWERX,self.POWERY))
                    self.POWERX-=15
                    self.attack=6    
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)                
                win.blit(self.Screen,(self.x,self.y))
            else:
                win.blit(self.Screen,(self.x,self.y))
            self.attack+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.attack+1>24:
                self.Attack=False
                self.EffectWork=False
                self.y=self.Base
                self.attack=0
                self.A27=False
                self.Direction(X)
                self.POWERBLIT=True
                
        elif self.A28:
            self.Screen=self.SA28[self.attack//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)                
            win.blit(self.Screen,(self.x,self.y))
            self.attack+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.attack+1>20:
                self.Attack=False 
                self.y=self.Base
                self.attack=0
                self.A28=False
                self.Direction(X)
                
        elif self.A29:
            self.Screen=self.SA29[self.attack//4]
            self.Effect=pygame.image.load("data/Power/p1.png")
            self.Effect=pygame.transform.scale(self.Effect,(80,80))
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)        
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=5 and self.attack<=12 and self.EffectWork:
                    win.blit(self.Effect,(self.x+90,self.y))       
            else:
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=5 and self.attack<=12 and self.EffectWork:
                    win.blit(self.Effect,(self.x-40,self.y))
            self.attack+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.attack+1>24:
                self.Attack=False
                self.EffectWork=False
                self.y=self.Base
                self.attack=0
                self.A29=False
                self.Direction(X)
                
        elif self.A30:
            self.y=self.Base-50
            self.Screen=self.SA30[self.attack//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)                
            win.blit(self.Screen,(self.x,self.y))
            self.attack+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.attack+1>24:
                self.Attack=False 
                self.y=self.Base
                self.attack=0
                self.A30=False
                self.Direction(X)
                
        elif self.A31:
            self.Screen=self.SA31[self.attack//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)                
            win.blit(self.Screen,(self.x,self.y))
            self.attack+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.attack+1>24:
                self.Attack=False 
                self.y=self.Base
                self.attack=0
                self.A31=False
                self.Direction(X)
                
        elif self.A32:
            
            if self.attack==1:
                self.POWERY=100
            self.Screen=self.SA32[self.attack//4]
            self.POWER=pygame.image.load("data/Power/p28.png")
            self.POWER=pygame.transform.scale(self.POWER,(100,100))
            if self.right:
                self.POWERX=self.x+100
                self.Screen=pygame.transform.flip(self.Screen,1,0)                
                win.blit(self.Screen,(self.x,self.y))
                while self.POWERX<1300 and self.attack<24 and self.attack>16:
                    win.blit(self.POWER,(self.POWERX,self.POWERY))
                    self.POWERX+=75
                
                if self.attack>17 and self.POWERY<600:
                    self.attack=17
                    self.POWERY+=20
            else:
                win.blit(self.Screen,(self.x,self.y))
                self.POWERX=self.x-100 
                while self.POWERX>-100 and self.attack<24 and self.attack>16:
                    win.blit(self.POWER,(self.POWERX,self.POWERY))
                    self.POWERX-=75
                
                if self.attack>17 and self.POWERY<600:
                    self.attack=17
                    self.POWERY+=20
            self.attack+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.attack+1>24:
                self.Attack=False 
                self.y=self.Base
                self.attack=0
                self.POWERY=100
                self.A32=False
                self.Direction(X)
                
        elif self.A33:
            self.y=self.Base-70
            self.Screen=self.SA33[self.attack//4]
            self.Effect=pygame.image.load("data/Power/p4.png")
            self.Effect=pygame.transform.scale(self.Effect,(80,80))
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=12 and self.attack<=15 and self.EffectWork:
                    win.blit(self.Effect,(self.x+100,self.y+10))
            else:
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=12 and self.attack<=15 and self.EffectWork:
                    win.blit(self.Effect,(self.x-50,self.y+10))
            self.attack+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.attack+1>24:
                self.Attack=False
                self.EffectWork=False
                self.y=self.Base
                self.attack=0
                self.A33=False
                self.Direction(X)
                
        elif self.A34:
            if self.attack<12:
                self.y-=15
            self.Screen=self.SA34[self.attack//4]
            self.Effect=pygame.image.load("data/Power/p28.png")
            self.Effect=pygame.transform.scale(self.Effect,(80,80))
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=12 and self.attack<=15 and self.EffectWork:
                    win.blit(self.Effect,(self.x+80,self.y+10))
            else:
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=12 and self.attack<=15 and self.EffectWork:
                    win.blit(self.Effect,(self.x,self.y+10))
            self.attack+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.attack+1>24:
                self.Attack=False 
                self.y=self.Base
                self.attack=0
                self.A34=False
                self.Direction(X)
                
        elif self.A35:
            self.y=self.Base-60
            self.Screen=self.SA35[self.attack//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)                
            win.blit(self.Screen,(self.x,self.y))
            self.attack+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.attack+1>24:
                self.Attack=False 
                self.y=self.Base
                self.attack=0
                self.A35=False
                self.Direction(X)
                
        elif self.A36:
            if self.attack==1:
                self.y=self.Base+50
            self.y-=8
            self.Screen=self.SA36[self.attack//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)                
            win.blit(self.Screen,(self.x,self.y))
            self.attack+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.attack+1>24:
                self.Attack=False 
                self.y=self.Base
                self.attack=0
                self.A36=False
                self.Direction(X)
                
        elif self.A37:
            self.y=self.Base-140
            self.Screen=self.SA37[self.attack//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)                
            win.blit(self.Screen,(self.x,self.y))
            self.attack+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.attack+1>40:
                self.Attack=False 
                self.y=self.Base
                self.attack=0
                self.A37=False
                self.Direction(X)
                
        # HITS

        elif self.Z1:
            self.Screen=self.SZ1[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+79<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z1=False
                self.Direction(X)

        elif self.Z2:
            self.Screen=self.SZ2[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+96<1300:
                    self.x+=20
                
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z2=False
                self.Direction(X)

        elif self.Z3:
            self.Screen=self.SZ3[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+133<1300:
                    self.x+=20   
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z3=False
                self.Direction(X)
                

        elif self.Z4:
            self.Screen=self.SZ4[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+84<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z4=False
                self.Direction(X)

        elif self.Z5:
            self.Screen=self.SZ5[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+137<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z5=False
                self.Direction(X)
                

        elif self.Z6:
            self.y=self.Base+30
            self.Screen=self.SZ6[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+126<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z6=False
                self.Direction(X)

        elif self.Z7:
            self.y=self.Base+30
            self.Screen=self.SZ7[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+116<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z7=False
                self.Direction(X)

        elif self.Z8:
            self.Screen=self.SZ8[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=5
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+134<1300:
                    self.x+=5
            if self.y>100 and self.hit<20:
                self.y-=8
            if self.hit>20:
                self.y+=30
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>24:
                self.y=self.Base
                self.hit=0
                self.Z8=False
                self.Direction(X)
                
                

        elif self.Z9:
            self.Screen=self.SZ9[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+87<1300:
                    self.x+=20
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z9=False
                self.Direction(X)
                
                
        elif self.Z10:
            self.Screen=self.SZ10[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+84<1300:
                    self.x+=20
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z10=False
                self.Direction(X)

        elif self.Z11:
            self.Screen=self.SZ11[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+147<1300:
                    self.x+=20   
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z11=False
                self.Direction(X)

        elif self.Z12:
            self.Screen=self.SZ12[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+100<1300:
                    self.x+=20
                
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z12=False
                self.Direction(X)
        
        elif self.Z13:
            self.Screen=self.SZ13[self.hit//4]
            if self.right:
                if self.hit>8 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>8 and self.x+100<1300:
                    self.x+=15
                
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z13=False
                self.Direction(X)
                
        elif self.Z14:
            self.Screen=self.SZ14[self.hit//4]
            if self.right:
                if self.hit>4 and self.x>10:
                    self.x-=6
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>4 and self.x+95<1300:
                    self.x+=6
            if self.y>100 and self.hit<16:
                self.y-=5
            if self.hit>=16:
                self.y+=5
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>24:
                self.y=self.Base
                self.hit=0
                self.Z14=False
                self.Direction(X)
                
        elif self.Z0:
            if self.hit<20:
                self.y=self.Base+60
            elif self.hit==21:
                self.y=self.Base+30
            elif self.hit==25:
                self.y=self.Base+20
            elif self.hit==30:
                self.y=self.Base
            self.Screen=self.SZ0[self.hit//6]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>36:
                self.y=self.Base
                self.hit=0
                self.Z0=False
                self.Direction(X)
                
        else:
            self.Screen=self.Stand[self.stand//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.stand+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.stand+1 > 36:
                self.stand=20
                self.Direction(X)
        

            

#---------------------------------------------------------------------------------------------------------------------------------
class Saiyan_Gohan():
    font=pygame.font.SysFont('calibri',40,True,True)
    Name=font.render("Saiyan Gohan",1,(109,84,156))
    V=font.render("V",1,(109,84,156))
    A=font.render("/",1,(255,223,0))
    S=font.render("S",1,(109,84,156))
    BG=pygame.image.load("data/bg/H.png").convert_alpha()
    BG=pygame.transform.scale(BG,(1300,600))
    Logo=pygame.image.load("data/Select/A6.png").convert_alpha()
    Logo=pygame.transform.scale(Logo,(100,100))

    SE=[pygame.image.load("data/Effects/A5.png").convert_alpha(),pygame.image.load("data/Effects/A6.png").convert_alpha(),pygame.image.load("data/Effects/A7.png").convert_alpha(),pygame.image.load("data/Effects/A8.png").convert_alpha(),pygame.image.load("data/Effects/A9.png").convert_alpha(),pygame.image.load("data/Effects/A10.png").convert_alpha(),pygame.image.load("data/Effects/A11.png").convert_alpha()]
    Stand=[pygame.image.load("data/SaiyanTeenGohan/A1.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/A2.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/A3.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/A4.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/A5.png").convert_alpha()]
    SB3=[pygame.image.load("data/SaiyanTeenGohan/C1.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/C2.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/C3.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/C4.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/C5.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/C6.png").convert_alpha()]
    SB4=[pygame.image.load("data/SaiyanTeenGohan/D1.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/D2.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/D3.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/D3.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/D3.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/D3.png").convert_alpha()]
    SB5=[pygame.image.load("data/SaiyanTeenGohan/E1.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/E2.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/E3.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/E3.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/E3.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/E3.png").convert_alpha()]
    SB6=[pygame.image.load("data/SaiyanTeenGohan/F1.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/F2.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/F3.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/F3.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/F3.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/F3.png").convert_alpha()]
    SB7=[pygame.image.load("data/SaiyanTeenGohan/G1.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/G2.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/G3.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/G4.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/G5.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/G6.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/G7.png").convert_alpha()]
    SB8=[pygame.image.load("data/SaiyanTeenGohan/H1.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/H2.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/H3.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/H3.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/H3.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/H3.png").convert_alpha()]
    SB9=[pygame.image.load("data/SaiyanTeenGohan/I1.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/I2.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/I3.png").convert_alpha()]
    SB10=[pygame.image.load("data/SaiyanTeenGohan/J1.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/J2.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/J3.png").convert_alpha()]
    SB11=[pygame.image.load("data/SaiyanTeenGohan/K1.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/K2.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/K3.png").convert_alpha()]
    SB12=[pygame.image.load("data/SaiyanTeenGohan/L1.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/L2.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/L3.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/L4.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/L5.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/L6.png").convert_alpha()]
    SB13=[pygame.image.load("data/SaiyanTeenGohan/M1.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/M2.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/M3.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/M4.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/M5.png").convert_alpha()]
    SB14=[pygame.image.load("data/SaiyanTeenGohan/N1.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/N2.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/N3.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/N4.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/N5.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/N6.png").convert_alpha()]
    SB15=[pygame.image.load("data/SaiyanTeenGohan/O1.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/O2.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/O3.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/O4.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/O5.png").convert_alpha()]
    SB16=[pygame.image.load("data/SaiyanTeenGohan/P1.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/P2.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/P3.png").convert_alpha()]
    SB17=[pygame.image.load("data/SaiyanTeenGohan/Q1.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/Q2.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/Q3.png").convert_alpha()]
    SB18=[pygame.image.load("data/SaiyanTeenGohan/R1.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/R2.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/R3.png").convert_alpha()]
    SB19=[pygame.image.load("data/SaiyanTeenGohan/S1.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/S2.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/S3.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/S4.png").convert_alpha()]
    SB20=[pygame.image.load("data/SaiyanTeenGohan/T1.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/T2.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/T3.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/T4.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/T5.png").convert_alpha()]
    SB21=[pygame.image.load("data/SaiyanTeenGohan/U1.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/U2.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/U3.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/U4.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/U5.png").convert_alpha()]
    SB22=[pygame.image.load("data/SaiyanTeenGohan/V1.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/V2.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/V3.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/V4.png").convert_alpha()]
    SB23=[pygame.image.load("data/SaiyanTeenGohan/W1.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/W2.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/W3.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/W4.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/W5.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/W6.png").convert_alpha()]
    SB24=[pygame.image.load("data/SaiyanTeenGohan/X1.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/X2.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/X3.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/X4.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/X5.png").convert_alpha()]
    SB25=[pygame.image.load("data/SaiyanTeenGohan/Y1.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/Y2.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/Y3.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/Y4.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/Y5.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/Y6.png").convert_alpha()]
    SB26=[pygame.image.load("data/SaiyanTeenGohan/Z1.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/Z2.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/Z3.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/Z4.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/Z5.png").convert_alpha()]
    SB27=[pygame.image.load("data/SaiyanTeenGohan/AA1.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AA2.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AA3.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AA4.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AA5.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AA6.png").convert_alpha()]
    SB28=[pygame.image.load("data/SaiyanTeenGohan/AB1.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AD1.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AB2.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AB3.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AB4.png").convert_alpha()]
    SB29=[pygame.image.load("data/SaiyanTeenGohan/AC1.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AC2.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AC3.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AC4.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AC5.png").convert_alpha()]
    SB30=[pygame.image.load("data/SaiyanTeenGohan/AD1.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AD2.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AD3.png").convert_alpha()]
    SB31=[pygame.image.load("data/SaiyanTeenGohan/AE1.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AE2.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AE3.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AE4.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AE5.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AE6.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AE7.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AE8.png").convert_alpha()]
    SB32=[pygame.image.load("data/SaiyanTeenGohan/AF1.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AF2.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AF3.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AF4.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AF5.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AF6.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AF7.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AF8.png").convert_alpha()]
    SB33=[pygame.image.load("data/SaiyanTeenGohan/AG1.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AG2.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AG3.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AG4.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AG5.png").convert_alpha()]
    SB34=[pygame.image.load("data/SaiyanTeenGohan/AH1.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AH2.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AH3.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AH4.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AH5.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AH6.png").convert_alpha()]
    SB35=[pygame.image.load("data/SaiyanTeenGohan/AI1.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AI2.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AI3.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AI4.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AI5.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AI6.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AI7.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AI8.png").convert_alpha()]
    SB36=[pygame.image.load("data/SaiyanTeenGohan/AJ1.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AJ2.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AJ3.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AJ4.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AJ5.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AJ6.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AJ7.png").convert_alpha()]
    SB37=[pygame.image.load("data/SaiyanTeenGohan/AK1.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AK2.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AK3.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AK4.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AK5.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AK6.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AK7.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AK8.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AK9.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AK10.png").convert_alpha()]
    SB38=[pygame.image.load("data/SaiyanTeenGohan/AL1.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AL2.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AL3.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AL4.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AL5.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AL6.png").convert_alpha()]

    SZ0=[pygame.image.load("data/SaiyanTeenGohan/AZ1.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AZ2.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AZ3.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AZ4.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AZ5.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AZ6.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AZ7.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AZ7.png").convert_alpha()]
    SZ1=[pygame.image.load("data/SaiyanTeenGohan/AQ1.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AQ2.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AQ3.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AQ4.png").convert_alpha()]
    SZ2=[pygame.image.load("data/SaiyanTeenGohan/AR1.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AR2.png").convert_alpha()]
    SZ3=[pygame.image.load("data/SaiyanTeenGohan/AW3.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AW4.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AW1.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AW2.png").convert_alpha()]
    SZ4=[pygame.image.load("data/SaiyanTeenGohan/AN1.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AN2.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AN3.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AN4.png").convert_alpha()]
    SZ5=[pygame.image.load("data/SaiyanTeenGohan/AT1.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AT2.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AT3.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AT4.png").convert_alpha()]
    SZ6=[pygame.image.load("data/SaiyanTeenGohan/AU1.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AU2.png").convert_alpha()]
    SZ7=[pygame.image.load("data/SaiyanTeenGohan/AV1.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AV2.png").convert_alpha()]
    SZ8=[pygame.image.load("data/SaiyanTeenGohan/AX1.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AX2.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AW1.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AW2.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AY1.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AY2.png").convert_alpha()]
    SZ9=[pygame.image.load("data/SaiyanTeenGohan/AP1.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AP2.png").convert_alpha()]
    SZ10=[pygame.image.load("data/SaiyanTeenGohan/AS1.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AS2.png").convert_alpha()]
    SZ11=[pygame.image.load("data/SaiyanTeenGohan/AM1.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AM2.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AM3.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AM4.png").convert_alpha()]
    SZ12=[pygame.image.load("data/SaiyanTeenGohan/AO1.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AO2.png").convert_alpha()]
    SZ13=[pygame.image.load("data/SaiyanTeenGohan/AW3.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AW4.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AY3.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AY4.png").convert_alpha()]
    SZ14=[pygame.image.load("data/SaiyanTeenGohan/AX3.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AX3.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AX4.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AX4.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AY4.png").convert_alpha(),pygame.image.load("data/SaiyanTeenGohan/AY4.png").convert_alpha()]
    
    def __init__(self,x,y,right,logo):
        self.x=x
        self.Base=y
        self.y=y
        self.width=None
        self.height=None
        self.health=None
        self.right=right
        self.logo=logo
        self.SS=0
        self.count=0
        self.stand=0
        self.move=0
        self.hit=0
        self.attack=0
        self.Attack=False
        self.EffectWork=False
        self.Effect=None
        self.Screen=None
        self.SUPER=None
        self.POWERX=x
        self.POWERY=y
        self.POWER=None
        self.POWERBLIT=True

        
        self.B3L=False
        self.B3R=False
        self.B4=False
        self.B5=False
        self.B6=False
        self.B7=False
        self.B8=False
        self.B9L=False # It include A10
        self.B9R=False # It include A10
        self.B11R=False # It include A10
        self.B11L=False # It include A10
        self.B12=False
        self.B13=False
        self.B14=False
        self.B15=False
        self.B16=False
        self.B17=False
        self.B18=False
        self.B19=False
        self.B20=False
        self.B21=False
        self.B22=False
        self.B23=False
        self.B24=False
        self.B25=False
        self.B26=False
        self.B27=False
        self.B28=False
        self.B29=False
        self.B30=False
        self.B31=False
        self.B32=False
        self.B33=False
        self.B34=False
        self.B35=False
        self.B36=False
        self.B37=False
        self.B38=False

        
        
        self.Z0=False
        self.Z1=False
        self.Z2=False
        self.Z3=False
        self.Z4=False
        self.Z5=False
        self.Z6=False
        self.Z7=False
        self.Z8=False
        self.Z9=False
        self.Z10=False
        self.Z11=False
        self.Z12=False
        self.Z13=False
        self.Z14=False

        
    def Direction(self,X):
        if self.x>X.x:
            self.right=False
        elif self.x<X.x:
            self.right=True

    def Battelfeild(self,win):
        win.blit(self.BG,(0,0))
    def Computer(self,X):
        pass
        
    def Control(self,keys):
        if keys[pygame.K_RSHIFT] and keys[pygame.K_RIGHT]:
            if self.count==0:
                self.B9R=True
                
        # elif keys[pygame.K_RSHIFT] and keys[pygame.K_LEFT]:
        #     if self.count==0:
        #         self.B9L=True

        # elif keys[pygame.K_LSHIFT] and keys[pygame.K_RIGHT]:
        #     if self.count==0:
        #         self.B11R=True

        # elif keys[pygame.K_LSHIFT] and keys[pygame.K_LEFT]:
        #     if self.count==0:
        #         self.B11L=True
                
        # elif keys[pygame.K_LEFT]:
        #     if self.count==0:
        #         self.B3L=True
    
        # elif keys[pygame.K_RIGHT]:
        #     if self.count==0:
        #         self.B3R=True
            
        # elif keys[pygame.K_a]:
        #     if self.count==0:
        #         self.B4=True

        # elif keys[pygame.K_s]:
        #     if self.count==0:
        #         self.B5=True
            
        # elif keys[pygame.K_d]:
        #     if self.count==0:
        #         self.B6=True
            
        # elif keys[pygame.K_UP]:
        #     if self.count==0:
        #         self.B7=True

        # elif keys[pygame.K_DOWN]:
        #     if self.count==0:
        #         self.B8=True

        # elif keys[pygame.K_DOWN]:
        #     if self.count==0:
        #         self.B12=True
        
        # elif keys[pygame.K_SPACE]:
        #     self.B12=True

        elif keys[pygame.K_q]:
            self.B13=True
        elif keys[pygame.K_w]:
            self.B14=True
        elif keys[pygame.K_e]:
            self.B15=True
        elif keys[pygame.K_r]:
            self.B16=True
        elif keys[pygame.K_t]:
            self.B17=True
        elif keys[pygame.K_y]:
            self.B18=True
        elif keys[pygame.K_u]:
            self.B19=True
        elif keys[pygame.K_i]:
            self.B20=True
        elif keys[pygame.K_o]:
            self.B21=True
        elif keys[pygame.K_p]:
            self.B22=True
        elif keys[pygame.K_a]:
            self.B23=True
        elif keys[pygame.K_s]:
            self.B24=True
        elif keys[pygame.K_d]:
            self.B25=True
        elif keys[pygame.K_f]:
            self.B26=True
        elif keys[pygame.K_g]:
            self.B27=True
        elif keys[pygame.K_h]:
            self.B28=True
        elif keys[pygame.K_j]:
            self.B29=True
        elif keys[pygame.K_k]:
            self.B30=True
        elif keys[pygame.K_l]:
            self.B31=True
        elif keys[pygame.K_z]:
            self.B32=True
        elif keys[pygame.K_x]:
            self.B33=True
        elif keys[pygame.K_c]:
            self.B34=True
        elif keys[pygame.K_v]:
            self.B35=True
        elif keys[pygame.K_b]:
            self.B36=True
        elif keys[pygame.K_n]:
            self.B37=True
        elif keys[pygame.K_m]:
            self.B38=True
        
            
    def draw(self,win,X):
        if self.logo:
            win.blit(self.Logo,(0,0))
            pygame.draw.rect(win,(255,255,255),(0,0,100,100),1)
            win.blit(self.Name,(110,0))
            win.blit(self.V,(620,40))
            win.blit(self.A,(640,40))
            
            pygame.draw.rect(win,(0,0,0),(100,40,500,30))
            pygame.draw.rect(win,(109,84,156),(100,40,500,30))
            pygame.draw.rect(win,(255,255,255),(100,40,500,30),1)

            pygame.draw.rect(win,(0,0,0),(100,70,250,30))
            pygame.draw.rect(win,(255,223,0),(100,70,250,30))
            pygame.draw.rect(win,(255,255,255),(100,70,250,30),1)
            
        else:
            win.blit(self.Logo,(1200,0))
            pygame.draw.rect(win,(255,255,255),(1200,0,100,100),1)
            win.blit(self.Name,(960,0))
            win.blit(self.S,(660,40))

            pygame.draw.rect(win,(0,0,0),(702,40,500,30))
            pygame.draw.rect(win,(109,84,156),(702,40,500,30))
            pygame.draw.rect(win,(255,255,255),(702,40,500,30),1)

            pygame.draw.rect(win,(0,0,0),(952,70,250,30))
            pygame.draw.rect(win,(255,223,0),(952,70,250,30))
            pygame.draw.rect(win,(255,255,255),(952,70,250,30),1)
            
        
        if self.B3L:
            self.Screen=self.SB3[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            if self.x>10:
                self.x-=2
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+ 1> 24:
                self.count=0
                self.B3L=False
                self.Direction(X)

        elif self.B3R:
            self.Screen=self.SB3[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            if self.x+79<1300:
                self.x+=2
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+ 1> 24:
                self.count=0
                self.B3R=False
                self.Direction(X)

        elif self.B4:
            self.Screen=self.SB4[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.count=0
                self.B4=False
                self.Direction(X)

        elif self.B5:
            self.y=330
            self.Screen=self.SB5[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.count=0
                self.y=300
                self.B5=False
                self.Direction(X)

        elif self.B6:
            self.Screen=self.SB6[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.count=0
                self.B6=False
                self.Direction(X)

        elif self.B7:
            if self.right and 1300 -(X.x+X.width)>79: # 79 self.widht
                if (self.x+79)>X.x-40 and  self.x<X.x+X.width+10  and self.count>18 and self.x+79 < 1300:
                    self.x+=50
            else:
                if X.x>79 :# 79 self.widht
                   if self.x<(X.x+X.width+40)and self.x+79>X.x-10 and self.count>18 and self.x > 20:
                        self.x-=50
                    
            if self.count<12 and self.count>4:
                self.y-=25
            self.Screen=self.SB7[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                if self.x+79>1300:
                    self.x=self.x-(self.x+79-1300)
                if self.x<10:
                    self.x=10
                self.count=0
                self.y=300
                self.B7=False
                self.Direction(X)

        elif self.B8:
            if self.count>8:
                self.y=360
            self.Screen=self.SB8[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.y=300
                self.count=0
                self.B8=False
                self.Direction(X)

        elif self.B9R: 
            if self.right:
                if self.x+103<X.x-20 and self.count>=8: # SELF.WIDTH 103
                    self.x+=10
                    self.count=7
                self.Screen=self.SB9[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x+75<1300 and self.count>=8: # SELF.WIDTH 75
                    self.x+=10
                    self.count=7
                self.Screen=self.SB10[self.count//4]     
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>12:
                self.y=300
                self.count=0
                self.B9R=False
                self.Direction(X)

        elif self.B9L:
            if self.right:
                if self.x>10 and self.count>=8:
                    self.x-=10
                    self.count=7
                self.Screen=self.SB10[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x>X.x+X.width+20 and self.count>=8:
                    self.x-=10
                    self.count=7
                self.Screen=self.SB9[self.count//4]
                
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>12:
                self.y=300
                self.count=0
                self.B9L=False
                self.Direction(X)
        
        elif self.B11R:
            if self.right:
                if self.x+85<X.x-20 and self.count>=8: # 85
                    self.x+=10
                    self.count=7
                self.Screen=self.SB11[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x+77<1300 and self.count>=8: #77
                    self.x+=10
                    self.count=7
                self.Screen=self.SB10[self.count//4]     
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>12:
                    self.y=300
                    self.count=0
                    self.B11R=False
                    self.Direction(X) 
                


        elif self.B11L:
            if self.right:
                if self.x>10 and self.count>=8:
                    self.x-=10
                    self.count=7
                self.Screen=self.SB10[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x>X.x+X.width+20 and self.count>=8:
                    self.x-=10
                    self.count=7
                self.Screen=self.SB11[self.count//4]
                
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>12:
                    self.y=300
                    self.count=0
                    self.B11L=False
                    self.Direction(X)
                
        


        elif self.B12:
            self.SUPER=self.SE[self.SS//4]
            self.SUPER=pygame.transform.scale(self.SUPER,(300,280))
            self.Screen=self.SB12[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            win.blit(self.SUPER,(self.x-100,self.y-160))
            self.count+=1
            self.SS+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.SS+1>28:
                self.SS=0
            if self.count+1>24:
                self.y=self.Base
                self.count=0
                self.SS=0
                self.B12=False
                self.Direction(X)

        elif self.B13:
            self.Screen=self.SB13[self.attack//4]
            self.Effect=pygame.image.load("data/Power/p1.png")
            self.Effect=pygame.transform.scale(self.Effect,(80,80))
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=16 and self.attack<=20 and self.EffectWork:
                    win.blit(self.Effect,(self.x+50,self.y+10))
            else:
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=16 and self.attack<=20 and self.EffectWork:
                    win.blit(self.Effect,(self.x-40,self.y+10))
            self.attack+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height() 
            if self.attack+1>20:
                if self.right and self.x>10:
                    self.x-=5
                else:
                    if self.x+95<1300:
                        self.x+=5
                self.Attack=False
                self.y=self.Base
                self.attack=0
                self.B13=False
                self.EffectWork=False
                self.Direction(X)

        elif self.B14:
            self.Screen=self.SB14[self.attack//4]
            self.Effect=pygame.image.load("data/Power/p1.png")
            self.Effect=pygame.transform.scale(self.Effect,(80,80))
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=16 and self.attack<=20 and self.EffectWork:
                    win.blit(self.Effect,(self.x+50,self.y+10))
            else:
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=16 and self.attack<=20 and self.EffectWork:
                    win.blit(self.Effect,(self.x-40,self.y+10))
            self.attack+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height() 
            if self.attack+1>20:
                if self.right and self.x>10:
                    self.x-=5
                else:
                    if self.x+95<1300:
                        self.x+=5
                self.Attack=False
                self.y=self.Base
                self.attack=0
                self.B14=False
                self.EffectWork=False
                self.Direction(X)

        elif self.B15:
            self.Screen=self.SB15[self.attack//4]
            self.Effect=pygame.image.load("data/Power/p1.png")
            self.Effect=pygame.transform.scale(self.Effect,(80,80))
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=16 and self.attack<=20 and self.EffectWork:
                    win.blit(self.Effect,(self.x+50,self.y+10))
            else:
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=16 and self.attack<=20 and self.EffectWork:
                    win.blit(self.Effect,(self.x-40,self.y+10))
            self.attack+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height() 
            if self.attack+1>20:
                if self.right and self.x>10:
                    self.x-=5
                else:
                    if self.x+95<1300:
                        self.x+=5
                self.Attack=False
                self.y=self.Base
                self.attack=0
                self.B15=False
                self.EffectWork=False
                self.Direction(X)


        elif self.B16:
            self.y=self.Base+40
            self.Screen=self.SB16[self.attack//6]
            self.Effect=pygame.image.load("data/Power/p1.png")
            self.Effect=pygame.transform.scale(self.Effect,(80,80))
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=16 and self.attack<=20 and self.EffectWork:
                    win.blit(self.Effect,(self.x+50,self.y+10))
            else:
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=16 and self.attack<=20 and self.EffectWork:
                    win.blit(self.Effect,(self.x-40,self.y+10))
            self.attack+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height() 
            if self.attack+1>18:
                if self.right and self.x>10:
                    self.x-=5
                else:
                    if self.x+95<1300:
                        self.x+=5
                self.Attack=False
                self.y=self.Base
                self.attack=0
                self.B16=False
                self.EffectWork=False
                self.Direction(X)

        elif self.B17:
            self.y=self.Base+40
            self.Screen=self.SB17[self.attack//6]
            self.Effect=pygame.image.load("data/Power/p1.png")
            self.Effect=pygame.transform.scale(self.Effect,(80,80))
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=16 and self.attack<=20 and self.EffectWork:
                    win.blit(self.Effect,(self.x+50,self.y+10))
            else:
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=16 and self.attack<=20 and self.EffectWork:
                    win.blit(self.Effect,(self.x-40,self.y+10))
            self.attack+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height() 
            if self.attack+1>18:
                if self.right and self.x>10:
                    self.x-=5
                else:
                    if self.x+95<1300:
                        self.x+=5
                self.Attack=False
                self.y=self.Base
                self.attack=0
                self.B17=False
                self.EffectWork=False
                self.Direction(X)

        elif self.B18:
            self.Screen=self.SB18[self.attack//6]
            self.Effect=pygame.image.load("data/Power/p1.png")
            self.Effect=pygame.transform.scale(self.Effect,(80,80))
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=16 and self.attack<=20 and self.EffectWork:
                    win.blit(self.Effect,(self.x+50,self.y+10))
            else:
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=16 and self.attack<=20 and self.EffectWork:
                    win.blit(self.Effect,(self.x-40,self.y+10))
            self.attack+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height() 
            if self.attack+1>18:
                if self.right and self.x>10:
                    self.x-=5
                else:
                    if self.x+95<1300:
                        self.x+=5
                self.Attack=False
                self.y=self.Base
                self.attack=0
                self.B18=False
                self.EffectWork=False
                self.Direction(X)

        elif self.B19:
            if self.attack<=4:
                self.y-=15
            self.Screen=self.SB19[self.attack//4]
            self.Effect=pygame.image.load("data/Power/p1.png")
            self.Effect=pygame.transform.scale(self.Effect,(80,80))
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=16 and self.attack<=20 and self.EffectWork:
                    win.blit(self.Effect,(self.x+50,self.y+10))
            else:
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=16 and self.attack<=20 and self.EffectWork:
                    win.blit(self.Effect,(self.x-40,self.y+10))
            self.attack+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height() 
            if self.attack+1>16:
                if self.right and self.x>10:
                    self.x-=5
                else:
                    if self.x+95<1300:
                        self.x+=5
                self.Attack=False
                self.y=self.Base
                self.attack=0
                self.B19=False
                self.EffectWork=False
                self.Direction(X)

        elif self.B20:
            self.Screen=self.SB20[self.attack//4]
            self.Effect=pygame.image.load("data/Power/p1.png")
            self.Effect=pygame.transform.scale(self.Effect,(80,80))
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=16 and self.attack<=20 and self.EffectWork:
                    win.blit(self.Effect,(self.x+50,self.y+10))
            else:
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=16 and self.attack<=20 and self.EffectWork:
                    win.blit(self.Effect,(self.x-40,self.y+10))
            self.attack+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height() 
            if self.attack+1>20:
                if self.right and self.x>10:
                    self.x-=5
                else:
                    if self.x+95<1300:
                        self.x+=5
                self.Attack=False
                self.y=self.Base
                self.attack=0
                self.B20=False
                self.EffectWork=False
                self.Direction(X)

        elif self.B21:
            self.Screen=self.SB21[self.attack//4]
            self.Effect=pygame.image.load("data/Power/p1.png")
            self.Effect=pygame.transform.scale(self.Effect,(80,80))
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=16 and self.attack<=20 and self.EffectWork:
                    win.blit(self.Effect,(self.x+50,self.y+10))
            else:
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=16 and self.attack<=20 and self.EffectWork:
                    win.blit(self.Effect,(self.x-40,self.y+10))
            self.attack+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height() 
            if self.attack+1>20:
                if self.right and self.x>10:
                    self.x-=5
                else:
                    if self.x+95<1300:
                        self.x+=5
                self.Attack=False
                self.y=self.Base
                self.attack=0
                self.B21=False
                self.EffectWork=False
                self.Direction(X)

        elif self.B22:
            self.Screen=self.SB22[self.attack//4]
            self.Effect=pygame.image.load("data/Power/p1.png")
            self.Effect=pygame.transform.scale(self.Effect,(80,80))
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=16 and self.attack<=20 and self.EffectWork:
                    win.blit(self.Effect,(self.x+50,self.y+10))
            else:
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=16 and self.attack<=20 and self.EffectWork:
                    win.blit(self.Effect,(self.x-40,self.y+10))
            self.attack+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height() 
            if self.attack+1>16:
                if self.right and self.x>10:
                    self.x-=5
                else:
                    if self.x+95<1300:
                        self.x+=5
                self.Attack=False
                self.y=self.Base
                self.attack=0
                self.B22=False
                self.EffectWork=False
                self.Direction(X)

        elif self.B23:
            self.Screen=self.SB23[self.attack//4]
            self.Effect=pygame.image.load("data/Power/p1.png")
            self.Effect=pygame.transform.scale(self.Effect,(80,80))
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=16 and self.attack<=20 and self.EffectWork:
                    win.blit(self.Effect,(self.x+50,self.y+10))
            else:
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=16 and self.attack<=20 and self.EffectWork:
                    win.blit(self.Effect,(self.x-40,self.y+10))
            self.attack+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height() 
            if self.attack+1> 24:
                if self.right and self.x>10:
                    self.x-=5
                else:
                    if self.x+95<1300:
                        self.x+=5
                self.Attack=False
                self.y=self.Base
                self.attack=0
                self.B23=False
                self.EffectWork=False
                self.Direction(X)

        elif self.B24:
            self.Screen=self.SB24[self.attack//4]
            self.Effect=pygame.image.load("data/Power/p1.png")
            self.Effect=pygame.transform.scale(self.Effect,(80,80))
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=16 and self.attack<=20 and self.EffectWork:
                    win.blit(self.Effect,(self.x+50,self.y+10))
            else:
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=16 and self.attack<=20 and self.EffectWork:
                    win.blit(self.Effect,(self.x-40,self.y+10))
            self.attack+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height() 
            if self.attack+1> 20:
                if self.right and self.x>10:
                    self.x-=5
                else:
                    if self.x+95<1300:
                        self.x+=5
                self.Attack=False
                self.y=self.Base
                self.attack=0
                self.B24=False
                self.EffectWork=False
                self.Direction(X)

        elif self.B25:
            self.Screen=self.SB25[self.attack//4]
            self.Effect=pygame.image.load("data/Power/p1.png")
            self.Effect=pygame.transform.scale(self.Effect,(80,80))
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=16 and self.attack<=20 and self.EffectWork:
                    win.blit(self.Effect,(self.x+50,self.y+10))
            else:
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=16 and self.attack<=20 and self.EffectWork:
                    win.blit(self.Effect,(self.x-40,self.y+10))
            self.attack+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height() 
            if self.attack+1> 24:
                if self.right and self.x>10:
                    self.x-=5
                else:
                    if self.x+95<1300:
                        self.x+=5
                self.Attack=False
                self.y=self.Base
                self.attack=0
                self.B25=False
                self.EffectWork=False
                self.Direction(X)

        elif self.B26:
            self.Screen=self.SB26[self.attack//4]
            self.Effect=pygame.image.load("data/Power/p1.png")
            self.Effect=pygame.transform.scale(self.Effect,(80,80))
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=16 and self.attack<=20 and self.EffectWork:
                    win.blit(self.Effect,(self.x+50,self.y+10))
            else:
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=16 and self.attack<=20 and self.EffectWork:
                    win.blit(self.Effect,(self.x-40,self.y+10))
            self.attack+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height() 
            if self.attack+1> 20:
                if self.right and self.x>10:
                    self.x-=5
                else:
                    if self.x+95<1300:
                        self.x+=5
                self.Attack=False
                self.y=self.Base
                self.attack=0
                self.B26=False
                self.EffectWork=False
                self.Direction(X)

        elif self.B27:
            self.Screen=self.SB27[self.attack//4]
            self.Effect=pygame.image.load("data/Power/p1.png")
            self.Effect=pygame.transform.scale(self.Effect,(80,80))
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=16 and self.attack<=20 and self.EffectWork:
                    win.blit(self.Effect,(self.x+50,self.y+10))
            else:
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=16 and self.attack<=20 and self.EffectWork:
                    win.blit(self.Effect,(self.x-40,self.y+10))
            self.attack+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height() 
            if self.attack+1> 24:
                if self.right and self.x>10:
                    self.x-=5
                else:
                    if self.x+95<1300:
                        self.x+=5
                self.Attack=False
                self.y=self.Base
                self.attack=0
                self.B27=False
                self.EffectWork=False
                self.Direction(X)

        elif self.B28:
            self.Screen=self.SB28[self.attack//6]
            self.Effect=pygame.image.load("data/Power/p1.png")
            self.Effect=pygame.transform.scale(self.Effect,(80,80))
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=16 and self.attack<=20 and self.EffectWork:
                    win.blit(self.Effect,(self.x+50,self.y+10))
            else:
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=16 and self.attack<=20 and self.EffectWork:
                    win.blit(self.Effect,(self.x-40,self.y+10))
            self.attack+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height() 
            if self.attack+1> 24:
                if self.right and self.x>10:
                    self.x-=5
                else:
                    if self.x+95<1300:
                        self.x+=5
                self.Attack=False
                self.y=self.Base
                self.attack=0
                self.B28=False
                self.EffectWork=False
                self.Direction(X)

        elif self.B29:
            self.Screen=self.SB29[self.attack//4]
            self.Effect=pygame.image.load("data/Power/p1.png")
            self.Effect=pygame.transform.scale(self.Effect,(80,80))
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=16 and self.attack<=20 and self.EffectWork:
                    win.blit(self.Effect,(self.x+50,self.y+10))
            else:
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=16 and self.attack<=20 and self.EffectWork:
                    win.blit(self.Effect,(self.x-40,self.y+10))
            self.attack+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height() 
            if self.attack+1> 20:
                if self.right and self.x>10:
                    self.x-=5
                else:
                    if self.x+95<1300:
                        self.x+=5
                self.Attack=False
                self.y=self.Base
                self.attack=0
                self.B29=False
                self.EffectWork=False
                self.Direction(X)

        elif self.B30:
            self.Screen=self.SB30[self.attack//6]
            self.Effect=pygame.image.load("data/Power/p1.png")
            self.Effect=pygame.transform.scale(self.Effect,(80,80))
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=16 and self.attack<=20 and self.EffectWork:
                    win.blit(self.Effect,(self.x+50,self.y+10))
            else:
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=16 and self.attack<=20 and self.EffectWork:
                    win.blit(self.Effect,(self.x-40,self.y+10))
            self.attack+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height() 
            if self.attack+1> 18:
                if self.right and self.x>10:
                    self.x-=5
                else:
                    if self.x+95<1300:
                        self.x+=5
                self.Attack=False
                self.y=self.Base
                self.attack=0
                self.B30=False
                self.EffectWork=False
                self.Direction(X)

        elif self.B31:    
            self.Screen=self.SB31[self.attack//4]
            self.Effect=pygame.image.load("data/Power/p1.png")
            self.Effect=pygame.transform.scale(self.Effect,(80,80))
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=16 and self.attack<=20 and self.EffectWork:
                    win.blit(self.Effect,(self.x+50,self.y+10))
            else:
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=16 and self.attack<=20 and self.EffectWork:
                    win.blit(self.Effect,(self.x-40,self.y+10))
            self.attack+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height() 
            if self.attack+1> 32:
                if self.right and self.x>10:
                    self.x-=5
                else:
                    if self.x+95<1300:
                        self.x+=5
                self.Attack=False
                self.y=self.Base
                self.attack=0
                self.B31=False
                self.EffectWork=False
                self.Direction(X)

        elif self.B32:
            self.Screen=self.SB32[self.attack//4]
            self.Effect=pygame.image.load("data/Power/p1.png")
            self.Effect=pygame.transform.scale(self.Effect,(80,80))
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=16 and self.attack<=20 and self.EffectWork:
                    win.blit(self.Effect,(self.x+50,self.y+10))
            else:
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=16 and self.attack<=20 and self.EffectWork:
                    win.blit(self.Effect,(self.x-40,self.y+10))
            self.attack+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height() 
            if self.attack+1> 32:
                if self.right and self.x>10:
                    self.x-=5
                else:
                    if self.x+95<1300:
                        self.x+=5
                self.Attack=False
                self.y=self.Base
                self.attack=0
                self.B32=False
                self.EffectWork=False
                self.Direction(X)

        elif self.B33:
            self.Screen=self.SB33[self.attack//4]
            self.Effect=pygame.image.load("data/Power/p1.png")
            self.Effect=pygame.transform.scale(self.Effect,(80,80))
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=16 and self.attack<=20 and self.EffectWork:
                    win.blit(self.Effect,(self.x+50,self.y+10))
            else:
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=16 and self.attack<=20 and self.EffectWork:
                    win.blit(self.Effect,(self.x-40,self.y+10))
            self.attack+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height() 
            if self.attack+1> 20:
                if self.right and self.x>10:
                    self.x-=5
                else:
                    if self.x+95<1300:
                        self.x+=5
                self.Attack=False
                self.y=self.Base
                self.attack=0
                self.B33=False
                self.EffectWork=False
                self.Direction(X)

        elif self.B34:
            self.Screen=self.SB34[self.attack//4]
            self.Effect=pygame.image.load("data/Power/p1.png")
            self.Effect=pygame.transform.scale(self.Effect,(80,80))
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=16 and self.attack<=20 and self.EffectWork:
                    win.blit(self.Effect,(self.x+50,self.y+10))
            else:
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=16 and self.attack<=20 and self.EffectWork:
                    win.blit(self.Effect,(self.x-40,self.y+10))
            self.attack+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height() 
            if self.attack+1> 24:
                if self.right and self.x>10:
                    self.x-=5
                else:
                    if self.x+95<1300:
                        self.x+=5
                self.Attack=False
                self.y=self.Base
                self.attack=0
                self.B34=False
                self.EffectWork=False
                self.Direction(X)

        elif self.B35:
            self.Screen=self.SB35[self.attack//4]
            self.Effect=pygame.image.load("data/Power/p1.png")
            self.Effect=pygame.transform.scale(self.Effect,(80,80))
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=16 and self.attack<=20 and self.EffectWork:
                    win.blit(self.Effect,(self.x+50,self.y+10))
            else:
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=16 and self.attack<=20 and self.EffectWork:
                    win.blit(self.Effect,(self.x-40,self.y+10))
            self.attack+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height() 
            if self.attack+1> 32:
                if self.right and self.x>10:
                    self.x-=5
                else:
                    if self.x+95<1300:
                        self.x+=5
                self.Attack=False
                self.y=self.Base
                self.attack=0
                self.B35=False
                self.EffectWork=False
                self.Direction(X)

        elif self.B36:
            self.Screen=self.SB36[self.attack//4]
            self.Effect=pygame.image.load("data/Power/p1.png")
            self.Effect=pygame.transform.scale(self.Effect,(80,80))
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=16 and self.attack<=20 and self.EffectWork:
                    win.blit(self.Effect,(self.x+50,self.y+10))
            else:
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=16 and self.attack<=20 and self.EffectWork:
                    win.blit(self.Effect,(self.x-40,self.y+10))
            self.attack+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height() 
            if self.attack+1> 28:
                if self.right and self.x>10:
                    self.x-=5
                else:
                    if self.x+95<1300:
                        self.x+=5
                self.Attack=False
                self.y=self.Base
                self.attack=0
                self.B36=False
                self.EffectWork=False
                self.Direction(X)

        elif self.B37:
            self.Screen=self.SB37[self.attack//4]
            self.Effect=pygame.image.load("data/Power/p1.png")
            self.Effect=pygame.transform.scale(self.Effect,(80,80))
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=16 and self.attack<=20 and self.EffectWork:
                    win.blit(self.Effect,(self.x+50,self.y+10))
            else:
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=16 and self.attack<=20 and self.EffectWork:
                    win.blit(self.Effect,(self.x-40,self.y+10))
            self.attack+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height() 
            if self.attack+1> 40:
                if self.right and self.x>10:
                    self.x-=5
                else:
                    if self.x+95<1300:
                        self.x+=5
                self.Attack=False
                self.y=self.Base
                self.attack=0
                self.B37=False
                self.EffectWork=False
                self.Direction(X)

        elif self.B38:
            self.Screen=self.SB38[self.attack//4]
            self.Effect=pygame.image.load("data/Power/p1.png")
            self.Effect=pygame.transform.scale(self.Effect,(80,80))
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=16 and self.attack<=20 and self.EffectWork:
                    win.blit(self.Effect,(self.x+50,self.y+10))
            else:
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=16 and self.attack<=20 and self.EffectWork:
                    win.blit(self.Effect,(self.x-40,self.y+10))
            self.attack+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height() 
            if self.attack+1> 24:
                if self.right and self.x>10:
                    self.x-=5
                else:
                    if self.x+95<1300:
                        self.x+=5
                self.Attack=False
                self.y=self.Base
                self.attack=0
                self.B38=False
                self.EffectWork=False
                self.Direction(X)

        # HITS

        elif self.Z1:
            self.Screen=self.SZ1[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+79<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z1=False
                self.Direction(X)

        elif self.Z2:
            self.Screen=self.SZ2[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+69<1300:
                    self.x+=20
                
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z2=False
                self.Direction(X)

        elif self.Z3:
            self.Screen=self.SZ3[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+101<1300:
                    self.x+=20   
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z3=False
                self.Direction(X)
                

        elif self.Z4:
            self.Screen=self.SZ4[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+70<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z4=False
                self.Direction(X)

        elif self.Z5:
            self.Screen=self.SZ5[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+86<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z5=False
                self.Direction(X)
                

        elif self.Z6:
            self.y=self.Base+30
            self.Screen=self.SZ6[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+97<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z6=False
                self.Direction(X)

        elif self.Z7:
            self.y=self.Base+30
            self.Screen=self.SZ7[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+93<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z7=False
                self.Direction(X)

        elif self.Z8:
            self.Screen=self.SZ8[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=5
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+101<1300:
                    self.x+=5
            if self.y>100 and self.hit<20:
                self.y-=8
            if self.hit>20:
                self.y+=30
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>24:
                self.y=self.Base
                self.hit=0
                self.Z8=False
                self.Direction(X)
                
                

        elif self.Z9:
            self.Screen=self.SZ9[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+66<1300:
                    self.x+=20
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z9=False
                self.Direction(X)
                
                
        elif self.Z10:
            self.Screen=self.SZ10[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+75<1300:
                    self.x+=20
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z10=False
                self.Direction(X)

        elif self.Z11:
            self.Screen=self.SZ11[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+112<1300:
                    self.x+=20   
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z11=False
                self.Direction(X)

        elif self.Z12:
            self.Screen=self.SZ12[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+73<1300:
                    self.x+=20
                
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z12=False
                self.Direction(X)
        
        elif self.Z13:
            self.Screen=self.SZ13[self.hit//4]
            if self.right:
                if self.hit>8 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>8 and self.x+74<1300:
                    self.x+=15
                
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z13=False
                self.Direction(X)
                
        elif self.Z14:
            self.Screen=self.SZ14[self.hit//4]
            if self.right:
                if self.hit>4 and self.x>10:
                    self.x-=6
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>4 and self.x+71<1300:
                    self.x+=6
            if self.y>100 and self.hit<16:
                self.y-=5
            if self.hit>=16:
                self.y+=5
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>24:
                self.y=self.Base
                self.hit=0
                self.Z14=False
                self.Direction(X)
                
        elif self.Z0:
            if self.hit<20:
                self.y=self.Base+60
            elif self.hit==21:
                self.y=self.Base+30
            elif self.hit==25:
                self.y=self.Base+20
            elif self.hit==30:
                self.y=self.Base
            self.Screen=self.SZ0[self.hit//6]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>48:
                self.y=self.Base
                self.hit=0
                self.Z0=False
                self.Direction(X)


        else:
            self.Screen=self.Stand[self.stand//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.stand+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.stand+1 > 20:
                self.stand=0
                self.Direction(X)
#---------------------------------------------------------------------------------------------------------------------------------
class Krillin():
    font=pygame.font.SysFont('calibri',40,True,True)
    Name=font.render("Krillin",1,(214,86,42))
    V=font.render("V",1,(214,86,42))
    A=font.render("/",1,(255,223,0))
    S=font.render("S",1,(214,86,42))
    Logo=pygame.image.load("data/Select/A11.png").convert_alpha()
    Logo=pygame.transform.scale(Logo,(100,100))
    
    BG=pygame.image.load("data/bg/spaceimg.png").convert_alpha()
    BG=pygame.transform.scale(BG,(1300,600))

    #SE=[pygame.image.load("data/Effects/A1.png").convert_alpha(),pygame.image.load("data/Effects/A2.png").convert_alpha(),pygame.image.load("data/Effects/A3.png").convert_alpha(),pygame.image.load("data/Effects/A4.png").convert_alpha()]
    SE=[pygame.image.load("data/Effects/A5.png").convert_alpha(),pygame.image.load("data/Effects/A6.png").convert_alpha(),pygame.image.load("data/Effects/A7.png").convert_alpha(),pygame.image.load("data/Effects/A8.png").convert_alpha(),pygame.image.load("data/Effects/A9.png").convert_alpha(),pygame.image.load("data/Effects/A10.png").convert_alpha(),pygame.image.load("data/Effects/A11.png").convert_alpha()]
    Stand=[pygame.image.load("data/Krillin/A1.png").convert_alpha(),pygame.image.load("data/Krillin/A2.png").convert_alpha(),pygame.image.load("data/Krillin/A3.png").convert_alpha(),pygame.image.load("data/Krillin/A4.png").convert_alpha(),pygame.image.load("data/Krillin/A5.png").convert_alpha(),pygame.image.load("data/Krillin/A6.png").convert_alpha()]
    SC3=[pygame.image.load("data/Krillin/C1.png").convert_alpha(),pygame.image.load("data/Krillin/C2.png").convert_alpha(),pygame.image.load("data/Krillin/C3.png").convert_alpha(),pygame.image.load("data/Krillin/C4.png").convert_alpha(),pygame.image.load("data/Krillin/C5.png").convert_alpha(),pygame.image.load("data/Krillin/C6.png").convert_alpha()]
    SC4=[pygame.image.load("data/Krillin/D1.png").convert_alpha(),pygame.image.load("data/Krillin/D2.png").convert_alpha(),pygame.image.load("data/Krillin/D3.png").convert_alpha(),pygame.image.load("data/Krillin/D3.png").convert_alpha(),pygame.image.load("data/Krillin/D3.png").convert_alpha(),pygame.image.load("data/Krillin/D3.png").convert_alpha()]
    SC5=[pygame.image.load("data/Krillin/E1.png").convert_alpha(),pygame.image.load("data/Krillin/E2.png").convert_alpha(),pygame.image.load("data/Krillin/E3.png").convert_alpha(),pygame.image.load("data/Krillin/E3.png").convert_alpha(),pygame.image.load("data/Krillin/E3.png").convert_alpha(),pygame.image.load("data/Krillin/E3.png").convert_alpha()]
    SC6=[pygame.image.load("data/Krillin/F1.png").convert_alpha(),pygame.image.load("data/Krillin/F2.png").convert_alpha(),pygame.image.load("data/Krillin/F3.png").convert_alpha(),pygame.image.load("data/Krillin/F3.png").convert_alpha(),pygame.image.load("data/Krillin/F3.png").convert_alpha(),pygame.image.load("data/Krillin/F3.png").convert_alpha()]
    SC7=[pygame.image.load("data/Krillin/G1.png").convert_alpha(),pygame.image.load("data/Krillin/G2.png").convert_alpha(),pygame.image.load("data/Krillin/G3.png").convert_alpha(),pygame.image.load("data/Krillin/G4.png").convert_alpha(),pygame.image.load("data/Krillin/G5.png").convert_alpha(),pygame.image.load("data/Krillin/G6.png").convert_alpha(),pygame.image.load("data/Krillin/G7.png").convert_alpha(),pygame.image.load("data/Krillin/G8.png").convert_alpha()]
    SC8=[pygame.image.load("data/Krillin/H1.png").convert_alpha(),pygame.image.load("data/Krillin/H2.png").convert_alpha(),pygame.image.load("data/Krillin/H3.png").convert_alpha(),pygame.image.load("data/Krillin/H3.png").convert_alpha(),pygame.image.load("data/Krillin/H3.png").convert_alpha(),pygame.image.load("data/Krillin/H3.png").convert_alpha()]
    SC9=[pygame.image.load("data/Krillin/I1.png").convert_alpha(),pygame.image.load("data/Krillin/I2.png").convert_alpha(),pygame.image.load("data/Krillin/I3.png").convert_alpha()]
    SC10=[pygame.image.load("data/Krillin/J1.png").convert_alpha(),pygame.image.load("data/Krillin/J2.png").convert_alpha(),pygame.image.load("data/Krillin/J3.png").convert_alpha()]
    SC11=[pygame.image.load("data/Krillin/K1.png").convert_alpha(),pygame.image.load("data/Krillin/K2.png").convert_alpha(),pygame.image.load("data/Krillin/K3.png").convert_alpha(),pygame.image.load("data/Krillin/K4.png").convert_alpha()]
    SC12=[pygame.image.load("data/Krillin/L1.png").convert_alpha(),pygame.image.load("data/Krillin/L2.png").convert_alpha(),pygame.image.load("data/Krillin/L3.png").convert_alpha(),pygame.image.load("data/Krillin/L4.png").convert_alpha(),pygame.image.load("data/Krillin/L5.png").convert_alpha()]
    SC13=[pygame.image.load("data/Krillin/M1.png").convert_alpha(),pygame.image.load("data/Krillin/M2.png").convert_alpha(),pygame.image.load("data/Krillin/M3.png").convert_alpha(),pygame.image.load("data/Krillin/M4.png").convert_alpha()]
    SC14=[pygame.image.load("data/Krillin/N1.png").convert_alpha(),pygame.image.load("data/Krillin/N2.png").convert_alpha(),pygame.image.load("data/Krillin/N3.png").convert_alpha(),pygame.image.load("data/Krillin/N4.png").convert_alpha(),pygame.image.load("data/Krillin/N5.png").convert_alpha(),pygame.image.load("data/Krillin/N6.png").convert_alpha()]
    SC15=[pygame.image.load("data/Krillin/O1.png").convert_alpha(),pygame.image.load("data/Krillin/O2.png").convert_alpha(),pygame.image.load("data/Krillin/O3.png").convert_alpha(),pygame.image.load("data/Krillin/O4.png").convert_alpha(),pygame.image.load("data/Krillin/O5.png").convert_alpha(),pygame.image.load("data/Krillin/O6.png").convert_alpha()]
    SC16=[pygame.image.load("data/Krillin/P1.png").convert_alpha(),pygame.image.load("data/Krillin/P2.png").convert_alpha(),pygame.image.load("data/Krillin/P3.png").convert_alpha(),pygame.image.load("data/Krillin/P4.png").convert_alpha()]
    SC17=[pygame.image.load("data/Krillin/Q1.png").convert_alpha(),pygame.image.load("data/Krillin/Q2.png").convert_alpha(),pygame.image.load("data/Krillin/Q3.png").convert_alpha(),pygame.image.load("data/Krillin/Q4.png").convert_alpha(),pygame.image.load("data/Krillin/Q5.png").convert_alpha(),pygame.image.load("data/Krillin/Q6.png").convert_alpha()]
    SC18=[pygame.image.load("data/Krillin/R1.png").convert_alpha(),pygame.image.load("data/Krillin/R2.png").convert_alpha(),pygame.image.load("data/Krillin/R3.png").convert_alpha(),pygame.image.load("data/Krillin/R4.png").convert_alpha()]
    SC19=[pygame.image.load("data/Krillin/S1.png").convert_alpha(),pygame.image.load("data/Krillin/S2.png").convert_alpha(),pygame.image.load("data/Krillin/S3.png").convert_alpha(),pygame.image.load("data/Krillin/S4.png").convert_alpha(),pygame.image.load("data/Krillin/S5.png").convert_alpha(),pygame.image.load("data/Krillin/S6.png").convert_alpha()]
    SC20=[pygame.image.load("data/Krillin/T1.png").convert_alpha(),pygame.image.load("data/Krillin/T2.png").convert_alpha(),pygame.image.load("data/Krillin/T3.png").convert_alpha(),pygame.image.load("data/Krillin/T4.png").convert_alpha(),pygame.image.load("data/Krillin/T5.png").convert_alpha(),pygame.image.load("data/Krillin/T6.png").convert_alpha()]
    SC21=[pygame.image.load("data/Krillin/U1.png").convert_alpha(),pygame.image.load("data/Krillin/U2.png").convert_alpha(),pygame.image.load("data/Krillin/U3.png").convert_alpha(),pygame.image.load("data/Krillin/U4.png").convert_alpha()]
    SC22=[pygame.image.load("data/Krillin/V1.png").convert_alpha(),pygame.image.load("data/Krillin/V2.png").convert_alpha(),pygame.image.load("data/Krillin/V3.png").convert_alpha(),pygame.image.load("data/Krillin/V4.png").convert_alpha(),pygame.image.load("data/Krillin/V5.png").convert_alpha()]
    SC23=[pygame.image.load("data/Krillin/W1.png").convert_alpha(),pygame.image.load("data/Krillin/W2.png").convert_alpha(),pygame.image.load("data/Krillin/W3.png").convert_alpha(),pygame.image.load("data/Krillin/W4.png").convert_alpha(),pygame.image.load("data/Krillin/W5.png").convert_alpha(),pygame.image.load("data/Krillin/W6.png").convert_alpha()]
    SC24=[pygame.image.load("data/Krillin/X1.png").convert_alpha(),pygame.image.load("data/Krillin/X2.png").convert_alpha(),pygame.image.load("data/Krillin/X3.png").convert_alpha(),pygame.image.load("data/Krillin/X4.png").convert_alpha()]
    SC25=[pygame.image.load("data/Krillin/Y1.png").convert_alpha(),pygame.image.load("data/Krillin/Y2.png").convert_alpha(),pygame.image.load("data/Krillin/Y3.png").convert_alpha(),pygame.image.load("data/Krillin/Y4.png").convert_alpha(),pygame.image.load("data/Krillin/Y5.png").convert_alpha(),pygame.image.load("data/Krillin/Y6.png").convert_alpha()]
    SC26=[pygame.image.load("data/Krillin/Z1.png").convert_alpha(),pygame.image.load("data/Krillin/Z2.png").convert_alpha(),pygame.image.load("data/Krillin/Z3.png").convert_alpha(),pygame.image.load("data/Krillin/Z4.png").convert_alpha(),pygame.image.load("data/Krillin/Z5.png").convert_alpha(),pygame.image.load("data/Krillin/Z6.png").convert_alpha()]
    SC27=[pygame.image.load("data/Krillin/AA1.png").convert_alpha(),pygame.image.load("data/Krillin/AA2.png").convert_alpha(),pygame.image.load("data/Krillin/AA3.png").convert_alpha(),pygame.image.load("data/Krillin/AA4.png").convert_alpha(),pygame.image.load("data/Krillin/AA5.png").convert_alpha(),pygame.image.load("data/Krillin/AA6.png").convert_alpha()]
    SC28=[pygame.image.load("data/Krillin/AB1.png").convert_alpha(),pygame.image.load("data/Krillin/AB2.png").convert_alpha(),pygame.image.load("data/Krillin/AB3.png").convert_alpha(),pygame.image.load("data/Krillin/AB4.png").convert_alpha(),pygame.image.load("data/Krillin/AB5.png").convert_alpha(),pygame.image.load("data/Krillin/AB6.png").convert_alpha()]
    SC29=[pygame.image.load("data/Krillin/AC1.png").convert_alpha(),pygame.image.load("data/Krillin/AC2.png").convert_alpha(),pygame.image.load("data/Krillin/AC3.png").convert_alpha(),pygame.image.load("data/Krillin/AC4.png").convert_alpha(),pygame.image.load("data/Krillin/AC5.png").convert_alpha(),pygame.image.load("data/Krillin/AC6.png").convert_alpha(),pygame.image.load("data/Krillin/AC7.png").convert_alpha(),pygame.image.load("data/Krillin/AC8.png").convert_alpha(),pygame.image.load("data/Krillin/AC9.png").convert_alpha()]
    SC30=[pygame.image.load("data/Krillin/AD1.png").convert_alpha(),pygame.image.load("data/Krillin/AD2.png").convert_alpha(),pygame.image.load("data/Krillin/AD3.png").convert_alpha(),pygame.image.load("data/Krillin/AD4.png").convert_alpha(),pygame.image.load("data/Krillin/AD5.png").convert_alpha()]
    SC31=[pygame.image.load("data/Krillin/AE1.png").convert_alpha(),pygame.image.load("data/Krillin/AE2.png").convert_alpha(),pygame.image.load("data/Krillin/AE3.png").convert_alpha(),pygame.image.load("data/Krillin/AE4.png").convert_alpha(),pygame.image.load("data/Krillin/AE5.png").convert_alpha(),pygame.image.load("data/Krillin/AE6.png").convert_alpha()]
    SC32=[pygame.image.load("data/Krillin/AF1.png").convert_alpha(),pygame.image.load("data/Krillin/AF2.png").convert_alpha(),pygame.image.load("data/Krillin/AF3.png").convert_alpha(),pygame.image.load("data/Krillin/AF4.png").convert_alpha(),pygame.image.load("data/Krillin/AF5.png").convert_alpha(),pygame.image.load("data/Krillin/AF6.png").convert_alpha(),pygame.image.load("data/Krillin/AF7.png").convert_alpha(),pygame.image.load("data/Krillin/AF8.png").convert_alpha(),pygame.image.load("data/Krillin/AF9.png").convert_alpha(),pygame.image.load("data/Krillin/AF10.png").convert_alpha()]
    SC33=[pygame.image.load("data/Krillin/AG1.png").convert_alpha(),pygame.image.load("data/Krillin/AG2.png").convert_alpha(),pygame.image.load("data/Krillin/AG3.png").convert_alpha(),pygame.image.load("data/Krillin/AG4.png").convert_alpha(),pygame.image.load("data/Krillin/AG5.png").convert_alpha(),pygame.image.load("data/Krillin/AG6.png").convert_alpha()]
    SC34=[pygame.image.load("data/Krillin/AH1.png").convert_alpha(),pygame.image.load("data/Krillin/AH2.png").convert_alpha(),pygame.image.load("data/Krillin/AH3.png").convert_alpha(),pygame.image.load("data/Krillin/AH4.png").convert_alpha(),pygame.image.load("data/Krillin/AH5.png").convert_alpha(),pygame.image.load("data/Krillin/AH6.png").convert_alpha()]
    SC35=[pygame.image.load("data/Krillin/AI1.png").convert_alpha(),pygame.image.load("data/Krillin/AI2.png").convert_alpha(),pygame.image.load("data/Krillin/AI3.png").convert_alpha(),pygame.image.load("data/Krillin/AI4.png").convert_alpha(),pygame.image.load("data/Krillin/AI5.png").convert_alpha(),pygame.image.load("data/Krillin/AI6.png").convert_alpha(),pygame.image.load("data/Krillin/AI7.png").convert_alpha(),pygame.image.load("data/Krillin/AI8.png").convert_alpha()]
    SC36=[pygame.image.load("data/Krillin/AJ1.png").convert_alpha(),pygame.image.load("data/Krillin/AJ2.png").convert_alpha(),pygame.image.load("data/Krillin/AJ3.png").convert_alpha(),pygame.image.load("data/Krillin/AJ4.png").convert_alpha(),pygame.image.load("data/Krillin/AJ5.png").convert_alpha(),pygame.image.load("data/Krillin/AJ6.png").convert_alpha(),pygame.image.load("data/Krillin/AJ7.png").convert_alpha()]
    SC37=[pygame.image.load("data/Krillin/AK1.png").convert_alpha(),pygame.image.load("data/Krillin/AK2.png").convert_alpha(),pygame.image.load("data/Krillin/AK3.png").convert_alpha(),pygame.image.load("data/Krillin/AK4.png").convert_alpha(),pygame.image.load("data/Krillin/AK5.png").convert_alpha()]
    SC38=[pygame.image.load("data/Krillin/AL1.png").convert_alpha(),pygame.image.load("data/Krillin/AL2.png").convert_alpha(),pygame.image.load("data/Krillin/AL3.png").convert_alpha(),pygame.image.load("data/Krillin/AL4.png").convert_alpha()]

    SZ0=[pygame.image.load("data/Krillin/AZ1.png").convert_alpha(),pygame.image.load("data/Krillin/AZ2.png").convert_alpha(),pygame.image.load("data/Krillin/AZ3.png").convert_alpha(),pygame.image.load("data/Krillin/AZ4.png").convert_alpha(),pygame.image.load("data/Krillin/AZ5.png").convert_alpha(),pygame.image.load("data/Krillin/AZ6.png").convert_alpha(),pygame.image.load("data/Krillin/AZ7.png").convert_alpha(),pygame.image.load("data/Krillin/AZ7.png").convert_alpha()]
    SZ1=[pygame.image.load("data/Krillin/AQ1.png").convert_alpha(),pygame.image.load("data/Krillin/AQ2.png").convert_alpha(),pygame.image.load("data/Krillin/AQ3.png").convert_alpha(),pygame.image.load("data/Krillin/AQ4.png").convert_alpha()]
    SZ2=[pygame.image.load("data/Krillin/AR1.png").convert_alpha(),pygame.image.load("data/Krillin/AR2.png").convert_alpha()]
    SZ3=[pygame.image.load("data/Krillin/AW3.png").convert_alpha(),pygame.image.load("data/Krillin/AW4.png").convert_alpha(),pygame.image.load("data/Krillin/AW1.png").convert_alpha(),pygame.image.load("data/Krillin/AW2.png").convert_alpha()]
    SZ4=[pygame.image.load("data/Krillin/AN1.png").convert_alpha(),pygame.image.load("data/Krillin/AN2.png").convert_alpha(),pygame.image.load("data/Krillin/AN3.png").convert_alpha(),pygame.image.load("data/Krillin/AN4.png").convert_alpha()]
    SZ5=[pygame.image.load("data/Krillin/AT1.png").convert_alpha(),pygame.image.load("data/Krillin/AT2.png").convert_alpha(),pygame.image.load("data/Krillin/AT3.png").convert_alpha(),pygame.image.load("data/Krillin/AT4.png").convert_alpha()]
    SZ6=[pygame.image.load("data/Krillin/AU1.png").convert_alpha(),pygame.image.load("data/Krillin/AU2.png").convert_alpha()]
    SZ7=[pygame.image.load("data/Krillin/AV1.png").convert_alpha(),pygame.image.load("data/Krillin/AV2.png").convert_alpha()]
    SZ8=[pygame.image.load("data/Krillin/AX1.png").convert_alpha(),pygame.image.load("data/Krillin/AX2.png").convert_alpha(),pygame.image.load("data/Krillin/AW1.png").convert_alpha(),pygame.image.load("data/Krillin/AW2.png").convert_alpha(),pygame.image.load("data/Krillin/AY1.png").convert_alpha(),pygame.image.load("data/Krillin/AY2.png").convert_alpha()]
    SZ9=[pygame.image.load("data/Krillin/AP1.png").convert_alpha(),pygame.image.load("data/Krillin/AP2.png").convert_alpha()]
    SZ10=[pygame.image.load("data/Krillin/AS1.png").convert_alpha(),pygame.image.load("data/Krillin/AS2.png").convert_alpha()]
    SZ11=[pygame.image.load("data/Krillin/AM1.png").convert_alpha(),pygame.image.load("data/Krillin/AM2.png").convert_alpha(),pygame.image.load("data/Krillin/AM3.png").convert_alpha(),pygame.image.load("data/Krillin/AM4.png").convert_alpha()]
    SZ12=[pygame.image.load("data/Krillin/AO1.png").convert_alpha(),pygame.image.load("data/Krillin/AO2.png").convert_alpha()]
    SZ13=[pygame.image.load("data/Krillin/AW3.png").convert_alpha(),pygame.image.load("data/Krillin/AW4.png").convert_alpha(),pygame.image.load("data/Krillin/AY3.png").convert_alpha(),pygame.image.load("data/Krillin/AY4.png").convert_alpha()]
    SZ14=[pygame.image.load("data/Krillin/AX3.png").convert_alpha(),pygame.image.load("data/Krillin/AX3.png").convert_alpha(),pygame.image.load("data/Krillin/AX4.png").convert_alpha(),pygame.image.load("data/Krillin/AX4.png").convert_alpha(),pygame.image.load("data/Krillin/AY4.png").convert_alpha(),pygame.image.load("data/Krillin/AY4.png").convert_alpha()]
    
    def __init__(self,x,y,right,logo):
        self.x=x
        self.Base=y
        self.y=y
        self.width=None
        self.height=None
        self.health=None
        self.right=right
        self.logo=logo
        self.SS=0
        self.count=0
        self.stand=0
        self.move=0
        self.hit=0
        self.attack=0
        self.Attack=False
        self.EffectWork=False
        self.Effect=None
        self.Screen=None
        self.SUPER=None
        self.POWERX=x
        self.POWERY=y
        self.POWER=None
        self.POWERBLIT=True

        self.C3L=False
        self.C3R=False
        self.C4=False
        self.C5=False
        self.C6=False
        self.C7=False
        self.C8=False
        self.C9L=False # It include C10
        self.C9R=False # It include C10
        self.C11R=False # It include C10
        self.C11L=False # It include C10
        self.C12=False
        self.C13=False
        self.C14=False
        self.C15=False
        self.C16=False
        self.C17=False
        self.C18=False
        self.C19=False
        self.C20=False
        self.C21=False
        self.C22=False
        self.C23=False
        self.C24=False
        self.C25=False
        self.C26=False
        self.C27=False
        self.C28=False
        self.C29=False
        self.C30=False
        self.C31=False
        self.C32=False
        self.C33=False
        self.C34=False
        self.C35=False
        self.C36=False
        self.C37=False
        self.C38=False

        #HIT
        self.Z0=False
        self.Z1=False
        self.Z2=False
        self.Z3=False
        self.Z4=False
        self.Z5=False
        self.Z6=False
        self.Z7=False
        self.Z8=False
        self.Z9=False
        self.Z10=False
        self.Z11=False
        self.Z12=False
        self.Z13=False
        self.Z14=False
    def Direction(self,X):
        if self.x>X.x:
            self.right=False
        elif self.x<X.x:
            self.right=True
            
    def Battelfeild(self,win):
        win.blit(self.BG,(0,0))

    def Computer(self,X):
        pass
    def Control(self,keys):
        if keys[pygame.K_RSHIFT] and keys[pygame.K_RIGHT]:
            if self.count==0:
                self.C9R=True
                
        # elif keys[pygame.K_RSHIFT] and keys[pygame.K_LEFT]:
        #     if self.count==0:
        #         self.C9L=True

        # elif keys[pygame.K_LSHIFT] and keys[pygame.K_RIGHT]:
        #     if self.count==0:
        #         self.C11R=True

        # elif keys[pygame.K_LSHIFT] and keys[pygame.K_LEFT]:
        #     if self.count==0:
        #         self.C11L=True
                
        # elif keys[pygame.K_LEFT]:
        #     if self.count==0:
        #         self.C3L=True
    
        # elif keys[pygame.K_RIGHT]:
        #     if self.count==0:
        #         self.C3R=True
            
        # elif keys[pygame.K_a]:
        #     if self.count==0:
        #         self.C4=True

        # elif keys[pygame.K_s]:
        #     if self.count==0:
        #         self.C5=True
            
        # elif keys[pygame.K_d]:
        #     if self.count==0:
        #         self.C6=True
            
        # elif keys[pygame.K_UP]:
        #     if self.count==0:
        #         self.C7=True

        # elif keys[pygame.K_DOWN]:
        #     if self.count==0:
        #         self.C8=True

        # elif keys[pygame.K_DOWN]:
        #     if self.count==0:
        #         self.C12=True
        
        # elif keys[pygame.K_SPACE]:
        #     self.C12=True
        
        elif keys[pygame.K_q]:
            self.C13=True
        elif keys[pygame.K_w]:
            self.C14=True
        elif keys[pygame.K_e]:
            self.C15=True
        elif keys[pygame.K_r]:
            self.C16=True
        elif keys[pygame.K_t]:
            self.C17=True
        elif keys[pygame.K_y]:
            self.C18=True
        elif keys[pygame.K_u]:
            self.C19=True
        elif keys[pygame.K_i]:
            self.C20=True
        elif keys[pygame.K_o]:
            self.C21=True
        elif keys[pygame.K_p]:
            self.C22=True
        elif keys[pygame.K_a]:
            self.C23=True
        elif keys[pygame.K_s]:
            self.C24=True
        elif keys[pygame.K_d]:
            self.C25=True
        elif keys[pygame.K_f]:
            self.C26=True
        elif keys[pygame.K_g]:
            self.C27=True
        elif keys[pygame.K_h]:
            self.C28=True
        elif keys[pygame.K_j]:
            self.C29=True
        elif keys[pygame.K_k]:
            self.C30=True
        elif keys[pygame.K_l]:
            self.C31=True
        elif keys[pygame.K_z]:
            self.C32=True
        elif keys[pygame.K_x]:
            self.C33=True
        elif keys[pygame.K_c]:
            self.C34=True
        elif keys[pygame.K_v]:
            self.C35=True
        elif keys[pygame.K_b]:
            self.C36=True
        elif keys[pygame.K_n]:
            self.C37=True
        elif keys[pygame.K_m]:
            self.C38=True
        
        
        
    def draw(self,win,X):

        if self.logo:
            win.blit(self.Logo,(0,0))
            pygame.draw.rect(win,(255,255,255),(0,0,100,100),1)
            win.blit(self.Name,(110,0))
            win.blit(self.V,(620,40))
            win.blit(self.A,(640,40))

            pygame.draw.rect(win,(0,0,0),(100,40,500,30))
            pygame.draw.rect(win,(214,86,42),(100,40,500,30))
            pygame.draw.rect(win,(255,255,255),(100,40,500,30),1)
            
            pygame.draw.rect(win,(0,0,0),(100,70,250,30))
            pygame.draw.rect(win,(255,223,0),(100,70,250,30))
            pygame.draw.rect(win,(255,255,255),(100,70,250,30),1)
        else:
            win.blit(self.Logo,(1200,0))
            pygame.draw.rect(win,(255,255,255),(1200,0,100,100),1)
            win.blit(self.Name,(1100,0))
            win.blit(self.S,(660,40))

            pygame.draw.rect(win,(0,0,0),(702,40,500,30))
            pygame.draw.rect(win,(214,86,42),(702,40,500,30))
            pygame.draw.rect(win,(255,255,255),(702,40,500,30),1)

            pygame.draw.rect(win,(0,0,0),(952,70,250,30))
            pygame.draw.rect(win,(255,223,0),(952,70,250,30))
            pygame.draw.rect(win,(255,255,255),(952,70,250,30),1)
            
        if self.C3L:
            self.Screen=self.SC3[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            if self.x>10:
                self.x-=2
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+ 1> 24:
                self.count=0
                self.C3L=False
                self.Direction(X)

        elif self.C3R:
            self.Screen=self.SC3[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            if self.x+69<1300:
                self.x+=2
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+ 1> 24:
                self.count=0
                self.C3R=False
                self.Direction(X)

        elif self.C4:
            self.Screen=self.SC4[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.count=0
                self.C4=False
                self.Direction(X)

        elif self.C5:
            self.y=330
            self.Screen=self.SC5[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.count=0
                self.y=300
                self.C5=False
                self.Direction(X)

        elif self.C6:
            self.Screen=self.SC6[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.count=0
                self.C6=False
                self.Direction(X)

        elif self.C7:
            if self.right and 1300 -(X.x+X.width)>69: # 69 self.widht
                if (self.x+69)>X.x-40 and  self.x<X.x+X.width+10  and self.count>18 and self.x+69 < 1300:
                    self.x+=50
            else:
                if X.x>69 :# 69 self.widht
                   if self.x<(X.x+X.width+40)and self.x+69>X.x-10 and self.count>18 and self.x > 20:
                        self.x-=50
                    
            if self.count<12 and self.count>4:
                self.y-=25
            self.Screen=self.SC7[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>32:
                if self.x+69>1300:
                    self.x=self.x-(self.x+69-1300)
                if self.x<10:
                    self.x=10
                self.count=0
                self.y=300
                self.C7=False
                self.Direction(X)

        elif self.C8:
            if self.count>8:
                self.y=360
            self.Screen=self.SC8[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.y=300
                self.count=0
                self.C8=False
                self.Direction(X)

        elif self.C9R: 
            if self.right:
                if self.x+111<X.x-20 and self.count>=8: #SELF.WIDTH 111
                    self.x+=10
                    self.count=7
                self.Screen=self.SC9[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x+77<1300 and self.count>=8: # SELF.WIDTH 77
                    self.x+=10
                    self.count=7
                self.Screen=self.SC10[self.count//4]     
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>12:
                self.y=300
                self.count=0
                self.C9R=False
                self.Direction(X)

        elif self.C9L:
            if self.right:
                if self.x>10 and self.count>=8:
                    self.x-=10
                    self.count=7
                self.Screen=self.SC10[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x>X.x+X.width+20 and self.count>=8:
                    self.x-=10
                    self.count=7
                self.Screen=self.SC9[self.count//4]
                
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>12:
                self.y=300
                self.count=0
                self.C9L=False
                self.Direction(X)
        
        elif self.C11R:
            if self.right:
                if self.x+117<X.x-20 and self.count>=8: #SELF.WIDTH 117
                    self.x+=10
                    self.count=7
                self.Screen=self.SC11[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x+77<1300 and self.count>=8: # SELF.WIDHT 77
                    self.x+=10
                    self.count=7
                self.Screen=self.SC10[self.count//4]     
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>12:
                    self.y=300
                    self.count=0
                    self.C11R=False
                    self.Direction(X) 
                


        elif self.C11L:
            if self.right:
                if self.x>10 and self.count>=8:
                    self.x-=10
                    self.count=7
                self.Screen=self.SC10[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x>X.x+X.width+20 and self.count>=8:
                    self.x-=10
                    self.count=7
                self.Screen=self.SC11[self.count//4]
                
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>12:
                    self.y=300
                    self.count=0
                    self.C11L=False
                    self.Direction(X)
                
        


        elif self.C12:
            self.SUPER=self.SE[self.SS//4]
            self.SUPER=pygame.transform.scale(self.SUPER,(300,280))
            self.Screen=self.SC12[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            win.blit(self.SUPER,(self.x-100,self.y-160))
            self.count+=1
            self.SS+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.SS+1>28:
                self.SS=0
            if self.count+1>20:
                self.y=self.Base
                self.count=0
                self.SS=0
                self.C12=False
                self.Direction(X)
        
        elif self.C13:
            self.Screen=self.SC13[self.attack//4]
            self.Effect=pygame.image.load("data/Power/p1.png")
            self.Effect=pygame.transform.scale(self.Effect,(80,80))
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)        
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=5 and self.attack<=12 and self.EffectWork:
                    win.blit(self.Effect,(self.x+90,self.y))       
            else:
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=5 and self.attack<=12 and self.EffectWork:
                    win.blit(self.Effect,(self.x-40,self.y))
            self.attack+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.attack+1>16:
                self.Attack=False
                self.EffectWork=False
                self.y=self.Base
                self.attack=0
                self.C13=False
                self.Direction(X)

        elif self.C14:
            self.Screen=self.SC14[self.attack//4]
            self.Effect=pygame.image.load("data/Power/p1.png")
            self.Effect=pygame.transform.scale(self.Effect,(80,80))
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)        
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=5 and self.attack<=12 and self.EffectWork:
                    win.blit(self.Effect,(self.x+90,self.y))       
            else:
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=5 and self.attack<=12 and self.EffectWork:
                    win.blit(self.Effect,(self.x-40,self.y))
            self.attack+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.attack+1>24:
                self.Attack=False
                self.EffectWork=False
                self.y=self.Base
                self.attack=0
                self.C14=False
                self.Direction(X)

        elif self.C15:
            self.Screen=self.SC15[self.attack//4]
            self.Effect=pygame.image.load("data/Power/p1.png")
            self.Effect=pygame.transform.scale(self.Effect,(80,80))
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)        
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=5 and self.attack<=12 and self.EffectWork:
                    win.blit(self.Effect,(self.x+90,self.y))       
            else:
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=5 and self.attack<=12 and self.EffectWork:
                    win.blit(self.Effect,(self.x-40,self.y))
            self.attack+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.attack+1>24:
                self.Attack=False
                self.EffectWork=False
                self.y=self.Base
                self.attack=0
                self.C15=False
                self.Direction(X)

        elif self.C16:
            self.Screen=self.SC16[self.attack//4]
            self.Effect=pygame.image.load("data/Power/p1.png")
            self.Effect=pygame.transform.scale(self.Effect,(80,80))
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)        
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=5 and self.attack<=12 and self.EffectWork:
                    win.blit(self.Effect,(self.x+90,self.y))       
            else:
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=5 and self.attack<=12 and self.EffectWork:
                    win.blit(self.Effect,(self.x-40,self.y))
            self.attack+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.attack+1>16:
                self.Attack=False
                self.EffectWork=False
                self.y=self.Base
                self.attack=0
                self.C16=False
                self.Direction(X)

        elif self.C17:
            self.Screen=self.SC17[self.attack//4]
            self.Effect=pygame.image.load("data/Power/p1.png")
            self.Effect=pygame.transform.scale(self.Effect,(80,80))
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)        
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=5 and self.attack<=12 and self.EffectWork:
                    win.blit(self.Effect,(self.x+90,self.y))       
            else:
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=5 and self.attack<=12 and self.EffectWork:
                    win.blit(self.Effect,(self.x-40,self.y))
            self.attack+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.attack+1>24:
                self.Attack=False
                self.EffectWork=False
                self.y=self.Base
                self.attack=0
                self.C17=False
                self.Direction(X)

        elif self.C18:
            self.Screen=self.SC18[self.attack//4]
            self.Effect=pygame.image.load("data/Power/p1.png")
            self.Effect=pygame.transform.scale(self.Effect,(80,80))
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)        
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=5 and self.attack<=12 and self.EffectWork:
                    win.blit(self.Effect,(self.x+90,self.y))       
            else:
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=5 and self.attack<=12 and self.EffectWork:
                    win.blit(self.Effect,(self.x-40,self.y))
            self.attack+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.attack+1>16:
                self.Attack=False
                self.EffectWork=False
                self.y=self.Base
                self.attack=0
                self.C18=False
                self.Direction(X)

        elif self.C19:
            self.Screen=self.SC19[self.attack//4]
            self.Effect=pygame.image.load("data/Power/p1.png")
            self.Effect=pygame.transform.scale(self.Effect,(80,80))
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)        
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=5 and self.attack<=12 and self.EffectWork:
                    win.blit(self.Effect,(self.x+90,self.y))       
            else:
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=5 and self.attack<=12 and self.EffectWork:
                    win.blit(self.Effect,(self.x-40,self.y))
            self.attack+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.attack+1>24:
                self.Attack=False
                self.EffectWork=False
                self.y=self.Base
                self.attack=0
                self.C19=False
                self.Direction(X)

        elif self.C20:
            self.Screen=self.SC20[self.attack//4]
            self.Effect=pygame.image.load("data/Power/p1.png")
            self.Effect=pygame.transform.scale(self.Effect,(80,80))
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)        
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=5 and self.attack<=12 and self.EffectWork:
                    win.blit(self.Effect,(self.x+90,self.y))       
            else:
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=5 and self.attack<=12 and self.EffectWork:
                    win.blit(self.Effect,(self.x-40,self.y))
            self.attack+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.attack+1>24:
                self.Attack=False
                self.EffectWork=False
                self.y=self.Base
                self.attack=0
                self.C20=False
                self.Direction(X)

        elif self.C21:
            self.Screen=self.SC21[self.attack//4]
            self.Effect=pygame.image.load("data/Power/p1.png")
            self.Effect=pygame.transform.scale(self.Effect,(80,80))
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)        
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=5 and self.attack<=12 and self.EffectWork:
                    win.blit(self.Effect,(self.x+90,self.y))       
            else:
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=5 and self.attack<=12 and self.EffectWork:
                    win.blit(self.Effect,(self.x-40,self.y))
            self.attack+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.attack+1>16:
                self.Attack=False
                self.EffectWork=False
                self.y=self.Base
                self.attack=0
                self.C21=False
                self.Direction(X)

        elif self.C22:
            self.Screen=self.SC22[self.attack//4]
            self.Effect=pygame.image.load("data/Power/p1.png")
            self.Effect=pygame.transform.scale(self.Effect,(80,80))
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)        
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=5 and self.attack<=12 and self.EffectWork:
                    win.blit(self.Effect,(self.x+90,self.y))       
            else:
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=5 and self.attack<=12 and self.EffectWork:
                    win.blit(self.Effect,(self.x-40,self.y))
            self.attack+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.attack+1>20:
                self.Attack=False
                self.EffectWork=False
                self.y=self.Base
                self.attack=0
                self.C22=False
                self.Direction(X)

        elif self.C23:
            self.Screen=self.SC23[self.attack//4]
            self.Effect=pygame.image.load("data/Power/p1.png")
            self.Effect=pygame.transform.scale(self.Effect,(80,80))
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)        
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=5 and self.attack<=12 and self.EffectWork:
                    win.blit(self.Effect,(self.x+90,self.y))       
            else:
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=5 and self.attack<=12 and self.EffectWork:
                    win.blit(self.Effect,(self.x-40,self.y))
            self.attack+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.attack+1>24:
                self.Attack=False
                self.EffectWork=False
                self.y=self.Base
                self.attack=0
                self.C23=False
                self.Direction(X)

        elif self.C24:
            self.Screen=self.SC24[self.attack//4]
            self.Effect=pygame.image.load("data/Power/p1.png")
            self.Effect=pygame.transform.scale(self.Effect,(80,80))
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)        
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=5 and self.attack<=12 and self.EffectWork:
                    win.blit(self.Effect,(self.x+90,self.y))       
            else:
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=5 and self.attack<=12 and self.EffectWork:
                    win.blit(self.Effect,(self.x-40,self.y))
            self.attack+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.attack+1>16:
                self.Attack=False
                self.EffectWork=False
                self.y=self.Base
                self.attack=0
                self.C24=False
                self.Direction(X)

        elif self.C25:
            self.Screen=self.SC25[self.attack//4]
            self.Effect=pygame.image.load("data/Power/p1.png")
            self.Effect=pygame.transform.scale(self.Effect,(80,80))
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)        
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=5 and self.attack<=12 and self.EffectWork:
                    win.blit(self.Effect,(self.x+90,self.y))       
            else:
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=5 and self.attack<=12 and self.EffectWork:
                    win.blit(self.Effect,(self.x-40,self.y))
            self.attack+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.attack+1>24:
                self.Attack=False
                self.EffectWork=False
                self.y=self.Base
                self.attack=0
                self.C25=False
                self.Direction(X)

        elif self.C26:
            self.Screen=self.SC26[self.attack//4]
            self.Effect=pygame.image.load("data/Power/p1.png")
            self.Effect=pygame.transform.scale(self.Effect,(80,80))
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)        
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=5 and self.attack<=12 and self.EffectWork:
                    win.blit(self.Effect,(self.x+90,self.y))       
            else:
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=5 and self.attack<=12 and self.EffectWork:
                    win.blit(self.Effect,(self.x-40,self.y))
            self.attack+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.attack+1>24:
                self.Attack=False
                self.EffectWork=False
                self.y=self.Base
                self.attack=0
                self.C26=False
                self.Direction(X)

        elif self.C27:
            self.Screen=self.SC27[self.attack//4]
            self.Effect=pygame.image.load("data/Power/p1.png")
            self.Effect=pygame.transform.scale(self.Effect,(80,80))
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)        
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=5 and self.attack<=12 and self.EffectWork:
                    win.blit(self.Effect,(self.x+90,self.y))       
            else:
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=5 and self.attack<=12 and self.EffectWork:
                    win.blit(self.Effect,(self.x-40,self.y))
            self.attack+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.attack+1>24:
                self.Attack=False
                self.EffectWork=False
                self.y=self.Base
                self.attack=0
                self.C27=False
                self.Direction(X)

        elif self.C28:
            self.Screen=self.SC28[self.attack//4]
            self.Effect=pygame.image.load("data/Power/p1.png")
            self.Effect=pygame.transform.scale(self.Effect,(80,80))
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)        
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=5 and self.attack<=12 and self.EffectWork:
                    win.blit(self.Effect,(self.x+90,self.y))       
            else:
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=5 and self.attack<=12 and self.EffectWork:
                    win.blit(self.Effect,(self.x-40,self.y))
            self.attack+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.attack+1>24:
                self.Attack=False
                self.EffectWork=False
                self.y=self.Base
                self.attack=0
                self.C28=False
                self.Direction(X)

        elif self.C29:
            self.Screen=self.SC29[self.attack//4]
            self.Effect=pygame.image.load("data/Power/p1.png")
            self.Effect=pygame.transform.scale(self.Effect,(80,80))
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)        
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=5 and self.attack<=12 and self.EffectWork:
                    win.blit(self.Effect,(self.x+90,self.y))       
            else:
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=5 and self.attack<=12 and self.EffectWork:
                    win.blit(self.Effect,(self.x-40,self.y))
            self.attack+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.attack+1>36:
                self.Attack=False
                self.EffectWork=False
                self.y=self.Base
                self.attack=0
                self.C29=False
                self.Direction(X)

        elif self.C30:
            self.Screen=self.SC30[self.attack//4]
            self.Effect=pygame.image.load("data/Power/p1.png")
            self.Effect=pygame.transform.scale(self.Effect,(80,80))
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)        
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=5 and self.attack<=12 and self.EffectWork:
                    win.blit(self.Effect,(self.x+90,self.y))       
            else:
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=5 and self.attack<=12 and self.EffectWork:
                    win.blit(self.Effect,(self.x-40,self.y))
            self.attack+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.attack+1>20:
                self.Attack=False
                self.EffectWork=False
                self.y=self.Base
                self.attack=0
                self.C30=False
                self.Direction(X)

        elif self.C31:
            self.Screen=self.SC31[self.attack//4]
            self.Effect=pygame.image.load("data/Power/p1.png")
            self.Effect=pygame.transform.scale(self.Effect,(80,80))
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)        
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=5 and self.attack<=12 and self.EffectWork:
                    win.blit(self.Effect,(self.x+90,self.y))       
            else:
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=5 and self.attack<=12 and self.EffectWork:
                    win.blit(self.Effect,(self.x-40,self.y))
            self.attack+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.attack+1>24:
                self.Attack=False
                self.EffectWork=False
                self.y=self.Base
                self.attack=0
                self.C31=False
                self.Direction(X)

        elif self.C32:
            self.Screen=self.SC32[self.attack//4]
            self.Effect=pygame.image.load("data/Power/p1.png")
            self.Effect=pygame.transform.scale(self.Effect,(80,80))
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)        
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=5 and self.attack<=12 and self.EffectWork:
                    win.blit(self.Effect,(self.x+90,self.y))       
            else:
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=5 and self.attack<=12 and self.EffectWork:
                    win.blit(self.Effect,(self.x-40,self.y))
            self.attack+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.attack+1>40:
                self.Attack=False
                self.EffectWork=False
                self.y=self.Base
                self.attack=0
                self.C32=False
                self.Direction(X)

        elif self.C33:
            self.Screen=self.SC33[self.attack//4]
            self.Effect=pygame.image.load("data/Power/p1.png")
            self.Effect=pygame.transform.scale(self.Effect,(80,80))
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)        
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=5 and self.attack<=12 and self.EffectWork:
                    win.blit(self.Effect,(self.x+90,self.y))       
            else:
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=5 and self.attack<=12 and self.EffectWork:
                    win.blit(self.Effect,(self.x-40,self.y))
            self.attack+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.attack+1>24:
                self.Attack=False
                self.EffectWork=False
                self.y=self.Base
                self.attack=0
                self.C33=False
                self.Direction(X)

        elif self.C34:
            self.Screen=self.SC34[self.attack//4]
            self.Effect=pygame.image.load("data/Power/p1.png")
            self.Effect=pygame.transform.scale(self.Effect,(80,80))
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)        
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=5 and self.attack<=12 and self.EffectWork:
                    win.blit(self.Effect,(self.x+90,self.y))       
            else:
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=5 and self.attack<=12 and self.EffectWork:
                    win.blit(self.Effect,(self.x-40,self.y))
            self.attack+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.attack+1>24:
                self.Attack=False
                self.EffectWork=False
                self.y=self.Base
                self.attack=0
                self.C34=False
                self.Direction(X)

        elif self.C35:
            self.Screen=self.SC35[self.attack//4]
            self.Effect=pygame.image.load("data/Power/p1.png")
            self.Effect=pygame.transform.scale(self.Effect,(80,80))
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)        
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=5 and self.attack<=12 and self.EffectWork:
                    win.blit(self.Effect,(self.x+90,self.y))       
            else:
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=5 and self.attack<=12 and self.EffectWork:
                    win.blit(self.Effect,(self.x-40,self.y))
            self.attack+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.attack+1>32:
                self.Attack=False
                self.EffectWork=False
                self.y=self.Base
                self.attack=0
                self.C35=False
                self.Direction(X)

        elif self.C36:
            self.Screen=self.SC36[self.attack//4]
            self.Effect=pygame.image.load("data/Power/p1.png")
            self.Effect=pygame.transform.scale(self.Effect,(80,80))
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)        
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=5 and self.attack<=12 and self.EffectWork:
                    win.blit(self.Effect,(self.x+90,self.y))       
            else:
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=5 and self.attack<=12 and self.EffectWork:
                    win.blit(self.Effect,(self.x-40,self.y))
            self.attack+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.attack+1>28:
                self.Attack=False
                self.EffectWork=False
                self.y=self.Base
                self.attack=0
                self.C36=False
                self.Direction(X)

        elif self.C37:
            self.Screen=self.SC37[self.attack//4]
            self.Effect=pygame.image.load("data/Power/p1.png")
            self.Effect=pygame.transform.scale(self.Effect,(80,80))
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)        
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=5 and self.attack<=12 and self.EffectWork:
                    win.blit(self.Effect,(self.x+90,self.y))       
            else:
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=5 and self.attack<=12 and self.EffectWork:
                    win.blit(self.Effect,(self.x-40,self.y))
            self.attack+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.attack+1>20:
                self.Attack=False
                self.EffectWork=False
                self.y=self.Base
                self.attack=0
                self.C37=False
                self.Direction(X)

        elif self.C38:
            self.Screen=self.SC38[self.attack//4]
            self.Effect=pygame.image.load("data/Power/p1.png")
            self.Effect=pygame.transform.scale(self.Effect,(80,80))
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)        
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=5 and self.attack<=12 and self.EffectWork:
                    win.blit(self.Effect,(self.x+90,self.y))       
            else:
                win.blit(self.Screen,(self.x,self.y))
                if self.attack>=5 and self.attack<=12 and self.EffectWork:
                    win.blit(self.Effect,(self.x-40,self.y))
            self.attack+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.attack+1>16:
                self.Attack=False
                self.EffectWork=False
                self.y=self.Base
                self.attack=0
                self.C38=False
                self.Direction(X)

        elif self.Z1:
            self.Screen=self.SZ1[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+80<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z1=False
                self.Direction(X)

        elif self.Z2:
            self.Screen=self.SZ2[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+84<1300:
                    self.x+=20
                
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z2=False
                self.Direction(X)

        elif self.Z3:
            self.Screen=self.SZ3[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+101<1300:
                    self.x+=20   
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z3=False
                self.Direction(X)
                

        elif self.Z4:
            self.Screen=self.SZ4[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+70<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z4=False
                self.Direction(X)

        elif self.Z5:
            self.Screen=self.SZ5[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+90<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z5=False
                self.Direction(X)
                

        elif self.Z6:
            self.y=self.Base+30
            self.Screen=self.SZ6[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+90<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z6=False
                self.Direction(X)

        elif self.Z7:
            self.y=self.Base+30
            self.Screen=self.SZ7[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+81<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z7=False
                self.Direction(X)

        elif self.Z8:
            self.Screen=self.SZ8[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=5
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+102<1300:
                    self.x+=5
            if self.y>100 and self.hit<20:
                self.y-=8
            if self.hit>20:
                self.y+=30
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>24:
                self.y=self.Base
                self.hit=0
                self.Z8=False
                self.Direction(X)
                
                

        elif self.Z9:
            self.Screen=self.SZ9[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+54<1300:
                    self.x+=20
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z9=False
                self.Direction(X)
                
                
        elif self.Z10:
            self.Screen=self.SZ10[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+70<1300:
                    self.x+=20
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z10=False
                self.Direction(X)

        elif self.Z11:
            self.Screen=self.SZ11[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+90<1300:
                    self.x+=20   
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z11=False
                self.Direction(X)

        elif self.Z12:
            self.Screen=self.SZ12[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+73<1300:
                    self.x+=20
                
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z12=False
                self.Direction(X)
        
        elif self.Z13:
            self.Screen=self.SZ13[self.hit//4]
            if self.right:
                if self.hit>8 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>8 and self.x+76<1300:
                    self.x+=15
                
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z13=False
                self.Direction(X)
                
        elif self.Z14:
            self.Screen=self.SZ14[self.hit//4]
            if self.right:
                if self.hit>4 and self.x>10:
                    self.x-=6
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>4 and self.x+74<1300:
                    self.x+=6
            if self.y>100 and self.hit<16:
                self.y-=5
            if self.hit>=16:
                self.y+=5
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>24:
                self.y=self.Base
                self.hit=0
                self.Z14=False
                self.Direction(X)
                
        elif self.Z0:
            if self.hit<20:
                self.y=self.Base+60
            elif self.hit==21:
                self.y=self.Base+30
            elif self.hit==25:
                self.y=self.Base+20
            elif self.hit==30:
                self.y=self.Base
            self.Screen=self.SZ0[self.hit//6]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>48:
                self.y=self.Base
                self.hit=0
                self.Z0=False
                self.Direction(X)
        
        else:
            self.Screen=self.Stand[self.stand//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.stand+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.stand+1 > 24:
                self.stand=0
                self.Direction(X)

#---------------------------------------------------------------------------------------------------------------------------------
class Goku_God():
    BG=pygame.image.load("data/bg/spaceimg.png").convert_alpha()
    BG=pygame.transform.scale(BG,(1300,600))
    font=pygame.font.SysFont('calibri',40,True,True)
    Name=font.render("Goku God",1,(252,36,84))
    V=font.render("V",1,(252,36,84))
    A=font.render("/",1,(255,223,0))
    S=font.render("S",1,(252,36,84))
    Logo=pygame.image.load("data/Select/A16.png").convert_alpha()
    Logo=pygame.transform.scale(Logo,(100,100))
    
    SE=[pygame.image.load("data/Effects/A1.png").convert_alpha(),pygame.image.load("data/Effects/A2.png").convert_alpha(),pygame.image.load("data/Effects/A3.png").convert_alpha(),pygame.image.load("data/Effects/A4.png").convert_alpha()]    
    Stand=[pygame.image.load("data/Goku_God/A3.png").convert_alpha(),pygame.image.load("data/Goku_God/A4.png").convert_alpha(),pygame.image.load("data/Goku_God/A5.png").convert_alpha(),pygame.image.load("data/Goku_God/A6.png").convert_alpha(),pygame.image.load("data/Goku_God/A7.png").convert_alpha()]
    SD3=[pygame.image.load("data/Goku_God/C1.png").convert_alpha(),pygame.image.load("data/Goku_God/C2.png").convert_alpha(),pygame.image.load("data/Goku_God/C3.png").convert_alpha(),pygame.image.load("data/Goku_God/C4.png").convert_alpha(),pygame.image.load("data/Goku_God/C5.png").convert_alpha(),pygame.image.load("data/Goku_God/C6.png").convert_alpha()]
    SD4=[pygame.image.load("data/Goku_God/D1.png").convert_alpha(),pygame.image.load("data/Goku_God/D2.png").convert_alpha(),pygame.image.load("data/Goku_God/D3.png").convert_alpha(),pygame.image.load("data/Goku_God/D3.png").convert_alpha(),pygame.image.load("data/Goku_God/D3.png").convert_alpha(),pygame.image.load("data/Goku_God/D3.png").convert_alpha()]
    SD5=[pygame.image.load("data/Goku_God/E1.png").convert_alpha(),pygame.image.load("data/Goku_God/E2.png").convert_alpha(),pygame.image.load("data/Goku_God/E3.png").convert_alpha(),pygame.image.load("data/Goku_God/E3.png").convert_alpha(),pygame.image.load("data/Goku_God/E3.png").convert_alpha(),pygame.image.load("data/Goku_God/E3.png").convert_alpha()]
    SD6=[pygame.image.load("data/Goku_God/F1.png").convert_alpha(),pygame.image.load("data/Goku_God/F2.png").convert_alpha(),pygame.image.load("data/Goku_God/F3.png").convert_alpha(),pygame.image.load("data/Goku_God/F3.png").convert_alpha(),pygame.image.load("data/Goku_God/F3.png").convert_alpha(),pygame.image.load("data/Goku_God/F3.png").convert_alpha()]
    SD7=[pygame.image.load("data/Goku_God/G1.png").convert_alpha(),pygame.image.load("data/Goku_God/G2.png").convert_alpha(),pygame.image.load("data/Goku_God/G3.png").convert_alpha(),pygame.image.load("data/Goku_God/G4.png").convert_alpha(),pygame.image.load("data/Goku_God/G5.png").convert_alpha(),pygame.image.load("data/Goku_God/G6.png").convert_alpha(),pygame.image.load("data/Goku_God/G7.png").convert_alpha(),pygame.image.load("data/Goku_God/G8.png").convert_alpha()]
    SD8=[pygame.image.load("data/Goku_God/H1.png").convert_alpha(),pygame.image.load("data/Goku_God/H2.png").convert_alpha(),pygame.image.load("data/Goku_God/H3.png").convert_alpha(),pygame.image.load("data/Goku_God/H3.png").convert_alpha(),pygame.image.load("data/Goku_God/H3.png").convert_alpha(),pygame.image.load("data/Goku_God/H3.png").convert_alpha()]
    SD9=[pygame.image.load("data/Goku_God/I1.png").convert_alpha(),pygame.image.load("data/Goku_God/I2.png").convert_alpha(),pygame.image.load("data/Goku_God/I3.png").convert_alpha(),pygame.image.load("data/Goku_God/I3.png").convert_alpha()]
    SD10=[pygame.image.load("data/Goku_God/J1.png").convert_alpha(),pygame.image.load("data/Goku_God/J2.png").convert_alpha(),pygame.image.load("data/Goku_God/J3.png").convert_alpha(),pygame.image.load("data/Goku_God/J4.png").convert_alpha()]
    SD11=[pygame.image.load("data/Goku_God/K1.png").convert_alpha(),pygame.image.load("data/Goku_God/K2.png").convert_alpha(),pygame.image.load("data/Goku_God/K3.png").convert_alpha(),pygame.image.load("data/Goku_God/K4.png").convert_alpha()]
    SD12=[pygame.image.load("data/Goku_God/L1.png").convert_alpha(),pygame.image.load("data/Goku_God/L2.png").convert_alpha(),pygame.image.load("data/Goku_God/L3.png").convert_alpha(),pygame.image.load("data/Goku_God/L4.png").convert_alpha(),pygame.image.load("data/Goku_God/L5.png").convert_alpha()]
    SD13=[pygame.image.load("data/Goku_God/M1.png").convert_alpha(),pygame.image.load("data/Goku_God/M2.png").convert_alpha(),pygame.image.load("data/Goku_God/M3.png").convert_alpha(),pygame.image.load("data/Goku_God/M4.png").convert_alpha()]
    SD14=[pygame.image.load("data/Goku_God/N1.png").convert_alpha(),pygame.image.load("data/Goku_God/N2.png").convert_alpha(),pygame.image.load("data/Goku_God/N3.png").convert_alpha(),pygame.image.load("data/Goku_God/N4.png").convert_alpha(),pygame.image.load("data/Goku_God/N5.png").convert_alpha(),pygame.image.load("data/Goku_God/N6.png").convert_alpha()]
    SD15=[pygame.image.load("data/Goku_God/O1.png").convert_alpha(),pygame.image.load("data/Goku_God/O2.png").convert_alpha(),pygame.image.load("data/Goku_God/O3.png").convert_alpha(),pygame.image.load("data/Goku_God/O4.png").convert_alpha(),pygame.image.load("data/Goku_God/O5.png").convert_alpha(),pygame.image.load("data/Goku_God/O6.png").convert_alpha()]
    SD16=[pygame.image.load("data/Goku_God/P1.png").convert_alpha(),pygame.image.load("data/Goku_God/P2.png").convert_alpha(),pygame.image.load("data/Goku_God/P3.png").convert_alpha(),pygame.image.load("data/Goku_God/P4.png").convert_alpha(),pygame.image.load("data/Goku_God/P5.png").convert_alpha(),pygame.image.load("data/Goku_God/P6.png").convert_alpha()]
    SD17=[pygame.image.load("data/Goku_God/Q1.png").convert_alpha(),pygame.image.load("data/Goku_God/Q2.png").convert_alpha(),pygame.image.load("data/Goku_God/Q3.png").convert_alpha(),pygame.image.load("data/Goku_God/Q4.png").convert_alpha(),pygame.image.load("data/Goku_God/Q5.png").convert_alpha(),pygame.image.load("data/Goku_God/Q6.png").convert_alpha()]
    SD18=[pygame.image.load("data/Goku_God/R1.png").convert_alpha(),pygame.image.load("data/Goku_God/R2.png").convert_alpha(),pygame.image.load("data/Goku_God/R3.png").convert_alpha(),pygame.image.load("data/Goku_God/R4.png").convert_alpha()]
    SD19=[pygame.image.load("data/Goku_God/S1.png").convert_alpha(),pygame.image.load("data/Goku_God/S2.png").convert_alpha(),pygame.image.load("data/Goku_God/S3.png").convert_alpha(),pygame.image.load("data/Goku_God/S4.png").convert_alpha(),pygame.image.load("data/Goku_God/S5.png").convert_alpha(),pygame.image.load("data/Goku_God/S6.png").convert_alpha()]
    SD20=[pygame.image.load("data/Goku_God/T1.png").convert_alpha(),pygame.image.load("data/Goku_God/T2.png").convert_alpha(),pygame.image.load("data/Goku_God/T3.png").convert_alpha(),pygame.image.load("data/Goku_God/T4.png").convert_alpha(),pygame.image.load("data/Goku_God/T5.png").convert_alpha(),pygame.image.load("data/Goku_God/T6.png").convert_alpha()]
    SD21=[pygame.image.load("data/Goku_God/U1.png").convert_alpha(),pygame.image.load("data/Goku_God/U2.png").convert_alpha(),pygame.image.load("data/Goku_God/U3.png").convert_alpha(),pygame.image.load("data/Goku_God/U4.png").convert_alpha()]
    SD22=[pygame.image.load("data/Goku_God/V1.png").convert_alpha(),pygame.image.load("data/Goku_God/V2.png").convert_alpha(),pygame.image.load("data/Goku_God/V3.png").convert_alpha(),pygame.image.load("data/Goku_God/V4.png").convert_alpha(),pygame.image.load("data/Goku_God/V5.png").convert_alpha(),pygame.image.load("data/Goku_God/V6.png").convert_alpha()]
    SD23=[pygame.image.load("data/Goku_God/W1.png").convert_alpha(),pygame.image.load("data/Goku_God/W2.png").convert_alpha(),pygame.image.load("data/Goku_God/W3.png").convert_alpha(),pygame.image.load("data/Goku_God/W4.png").convert_alpha(),pygame.image.load("data/Goku_God/W5.png").convert_alpha()]
    SD24=[pygame.image.load("data/Goku_God/X1.png").convert_alpha(),pygame.image.load("data/Goku_God/X2.png").convert_alpha(),pygame.image.load("data/Goku_God/X3.png").convert_alpha(),pygame.image.load("data/Goku_God/X4.png").convert_alpha(),pygame.image.load("data/Goku_God/X5.png").convert_alpha(),pygame.image.load("data/Goku_God/X6.png").convert_alpha()]
    SD25=[pygame.image.load("data/Goku_God/Y1.png").convert_alpha(),pygame.image.load("data/Goku_God/Y2.png").convert_alpha(),pygame.image.load("data/Goku_God/Y3.png").convert_alpha(),pygame.image.load("data/Goku_God/Y4.png").convert_alpha(),pygame.image.load("data/Goku_God/Y5.png").convert_alpha(),pygame.image.load("data/Goku_God/Y6.png").convert_alpha()]
    SD26=[pygame.image.load("data/Goku_God/Z1.png").convert_alpha(),pygame.image.load("data/Goku_God/Z2.png").convert_alpha(),pygame.image.load("data/Goku_God/Z3.png").convert_alpha(),pygame.image.load("data/Goku_God/Z4.png").convert_alpha(),pygame.image.load("data/Goku_God/Z5.png").convert_alpha(),pygame.image.load("data/Goku_God/Z6.png").convert_alpha(),pygame.image.load("data/Goku_God/Z7.png").convert_alpha()]
    SD27=[pygame.image.load("data/Goku_God/AA1.png").convert_alpha(),pygame.image.load("data/Goku_God/AA2.png").convert_alpha(),pygame.image.load("data/Goku_God/AA3.png").convert_alpha(),pygame.image.load("data/Goku_God/AA4.png").convert_alpha(),pygame.image.load("data/Goku_God/AA5.png").convert_alpha(),pygame.image.load("data/Goku_God/AA6.png").convert_alpha(),pygame.image.load("data/Goku_God/AA7.png").convert_alpha()]
    SD28=[pygame.image.load("data/Goku_God/AB1.png").convert_alpha(),pygame.image.load("data/Goku_God/AB2.png").convert_alpha(),pygame.image.load("data/Goku_God/AB3.png").convert_alpha(),pygame.image.load("data/Goku_God/AB4.png").convert_alpha(),pygame.image.load("data/Goku_God/AB5.png").convert_alpha()]
    SD29=[pygame.image.load("data/Goku_God/AC1.png").convert_alpha(),pygame.image.load("data/Goku_God/AC2.png").convert_alpha(),pygame.image.load("data/Goku_God/AC3.png").convert_alpha(),pygame.image.load("data/Goku_God/AC4.png").convert_alpha(),pygame.image.load("data/Goku_God/AC5.png").convert_alpha(),pygame.image.load("data/Goku_God/AC6.png").convert_alpha()]
    SD30=[pygame.image.load("data/Goku_God/AD1.png").convert_alpha(),pygame.image.load("data/Goku_God/AD2.png").convert_alpha(),pygame.image.load("data/Goku_God/AD3.png").convert_alpha(),pygame.image.load("data/Goku_God/AD4.png").convert_alpha(),pygame.image.load("data/Goku_God/AD5.png").convert_alpha(),pygame.image.load("data/Goku_God/AD6.png").convert_alpha()]
    SD31=[pygame.image.load("data/Goku_God/AE1.png").convert_alpha(),pygame.image.load("data/Goku_God/AE2.png").convert_alpha(),pygame.image.load("data/Goku_God/AE3.png").convert_alpha(),pygame.image.load("data/Goku_God/AE4.png").convert_alpha(),pygame.image.load("data/Goku_God/AE5.png").convert_alpha(),pygame.image.load("data/Goku_God/AE6.png").convert_alpha()]
    SD32=[pygame.image.load("data/Goku_God/AF1.png").convert_alpha(),pygame.image.load("data/Goku_God/AF2.png").convert_alpha(),pygame.image.load("data/Goku_God/AF3.png").convert_alpha(),pygame.image.load("data/Goku_God/AF4.png").convert_alpha(),pygame.image.load("data/Goku_God/AF5.png").convert_alpha(),pygame.image.load("data/Goku_God/AF6.png").convert_alpha(),pygame.image.load("data/Goku_God/AF7.png").convert_alpha(),pygame.image.load("data/Goku_God/AF8.png").convert_alpha(),pygame.image.load("data/Goku_God/AF9.png").convert_alpha()]
    SD33=[pygame.image.load("data/Goku_God/AG1.png").convert_alpha(),pygame.image.load("data/Goku_God/AG2.png").convert_alpha(),pygame.image.load("data/Goku_God/AG3.png").convert_alpha(),pygame.image.load("data/Goku_God/AG4.png").convert_alpha(),pygame.image.load("data/Goku_God/AG5.png").convert_alpha(),pygame.image.load("data/Goku_God/AG6.png").convert_alpha()]
    SD34=[pygame.image.load("data/Goku_God/AH1.png").convert_alpha(),pygame.image.load("data/Goku_God/AH2.png").convert_alpha(),pygame.image.load("data/Goku_God/AH3.png").convert_alpha(),pygame.image.load("data/Goku_God/AH4.png").convert_alpha(),pygame.image.load("data/Goku_God/AH5.png").convert_alpha(),pygame.image.load("data/Goku_God/AH6.png").convert_alpha(),pygame.image.load("data/Goku_God/AH7.png").convert_alpha()]
    SD35=[pygame.image.load("data/Goku_God/AI1.png").convert_alpha(),pygame.image.load("data/Goku_God/AI2.png").convert_alpha(),pygame.image.load("data/Goku_God/AI3.png").convert_alpha(),pygame.image.load("data/Goku_God/AI4.png").convert_alpha(),pygame.image.load("data/Goku_God/AI5.png").convert_alpha()]
    SD36=[pygame.image.load("data/Goku_God/AJ1.png").convert_alpha(),pygame.image.load("data/Goku_God/AJ2.png").convert_alpha(),pygame.image.load("data/Goku_God/AJ3.png").convert_alpha(),pygame.image.load("data/Goku_God/AJ4.png").convert_alpha(),pygame.image.load("data/Goku_God/AJ5.png").convert_alpha(),pygame.image.load("data/Goku_God/AJ6.png").convert_alpha(),pygame.image.load("data/Goku_God/AJ7.png").convert_alpha()]
    SD37=[pygame.image.load("data/Goku_God/AK1.png").convert_alpha(),pygame.image.load("data/Goku_God/AK2.png").convert_alpha(),pygame.image.load("data/Goku_God/AK3.png").convert_alpha()]
    SD38=[pygame.image.load("data/Goku_God/AL1.png").convert_alpha(),pygame.image.load("data/Goku_God/AL2.png").convert_alpha(),pygame.image.load("data/Goku_God/AL3.png").convert_alpha(),pygame.image.load("data/Goku_God/AL4.png").convert_alpha()]

    SZ0=[pygame.image.load("data/Goku_God/AZ1.png").convert_alpha(),pygame.image.load("data/Goku_God/AZ2.png").convert_alpha(),pygame.image.load("data/Goku_God/AZ3.png").convert_alpha(),pygame.image.load("data/Goku_God/AZ4.png").convert_alpha(),pygame.image.load("data/Goku_God/AZ5.png").convert_alpha(),pygame.image.load("data/Goku_God/AZ6.png").convert_alpha(),pygame.image.load("data/Goku_God/AZ7.png").convert_alpha(),pygame.image.load("data/Goku_God/AZ7.png").convert_alpha()]
    SZ1=[pygame.image.load("data/Goku_God/AQ1.png").convert_alpha(),pygame.image.load("data/Goku_God/AQ2.png").convert_alpha(),pygame.image.load("data/Goku_God/AQ3.png").convert_alpha(),pygame.image.load("data/Goku_God/AQ4.png").convert_alpha()]
    SZ2=[pygame.image.load("data/Goku_God/AR1.png").convert_alpha(),pygame.image.load("data/Goku_God/AR2.png").convert_alpha()]
    SZ3=[pygame.image.load("data/Goku_God/AW3.png").convert_alpha(),pygame.image.load("data/Goku_God/AW4.png").convert_alpha(),pygame.image.load("data/Goku_God/AW1.png").convert_alpha(),pygame.image.load("data/Goku_God/AW2.png").convert_alpha()]
    SZ4=[pygame.image.load("data/Goku_God/AN1.png").convert_alpha(),pygame.image.load("data/Goku_God/AN2.png").convert_alpha(),pygame.image.load("data/Goku_God/AN3.png").convert_alpha(),pygame.image.load("data/Goku_God/AN4.png").convert_alpha()]
    SZ5=[pygame.image.load("data/Goku_God/AT1.png").convert_alpha(),pygame.image.load("data/Goku_God/AT2.png").convert_alpha(),pygame.image.load("data/Goku_God/AT3.png").convert_alpha(),pygame.image.load("data/Goku_God/AT4.png").convert_alpha()]
    SZ6=[pygame.image.load("data/Goku_God/AU1.png").convert_alpha(),pygame.image.load("data/Goku_God/AU2.png").convert_alpha()]
    SZ7=[pygame.image.load("data/Goku_God/AV1.png").convert_alpha(),pygame.image.load("data/Goku_God/AV2.png").convert_alpha()]
    SZ8=[pygame.image.load("data/Goku_God/AX1.png").convert_alpha(),pygame.image.load("data/Goku_God/AX2.png").convert_alpha(),pygame.image.load("data/Goku_God/AW1.png").convert_alpha(),pygame.image.load("data/Goku_God/AW2.png").convert_alpha(),pygame.image.load("data/Goku_God/AY1.png").convert_alpha(),pygame.image.load("data/Goku_God/AY2.png").convert_alpha()]
    SZ9=[pygame.image.load("data/Goku_God/AP1.png").convert_alpha(),pygame.image.load("data/Goku_God/AP2.png").convert_alpha()]
    SZ10=[pygame.image.load("data/Goku_God/AS1.png").convert_alpha(),pygame.image.load("data/Goku_God/AS2.png").convert_alpha()]
    SZ11=[pygame.image.load("data/Goku_God/AM1.png").convert_alpha(),pygame.image.load("data/Goku_God/AM2.png").convert_alpha(),pygame.image.load("data/Goku_God/AM3.png").convert_alpha(),pygame.image.load("data/Goku_God/AM4.png").convert_alpha()]
    SZ12=[pygame.image.load("data/Goku_God/AO1.png").convert_alpha(),pygame.image.load("data/Goku_God/AO2.png").convert_alpha()]
    SZ13=[pygame.image.load("data/Goku_God/AW3.png").convert_alpha(),pygame.image.load("data/Goku_God/AW4.png").convert_alpha(),pygame.image.load("data/Goku_God/AY3.png").convert_alpha(),pygame.image.load("data/Goku_God/AY4.png").convert_alpha()]
    SZ14=[pygame.image.load("data/Goku_God/AX3.png").convert_alpha(),pygame.image.load("data/Goku_God/AX3.png").convert_alpha(),pygame.image.load("data/Goku_God/AX4.png").convert_alpha(),pygame.image.load("data/Goku_God/AX4.png").convert_alpha(),pygame.image.load("data/Goku_God/AY4.png").convert_alpha(),pygame.image.load("data/Goku_God/AY4.png").convert_alpha()]
    
    def __init__(self,x,y,right,logo):
        self.x=x
        self.Base=y
        self.y=y
        self.width=None
        self.height=None
        self.health=None
        self.right=right
        self.logo=logo
        self.SS=0
        self.count=0
        self.stand=0
        self.move=0
        self.hit=0
        self.attack=0
        self.Attack=False
        self.EffectWork=False
        self.Effect=None
        self.Screen=None
        self.SUPER=None
        self.POWERX=x
        self.POWERY=y
        self.POWER=None
        self.POWERBLIT=True

        self.D3L=False
        self.D3R=False
        self.D4=False
        self.D5=False
        self.D6=False
        self.D7=False
        self.D8=False
        self.D9L=False # It include D10
        self.D9R=False # It include D10
        self.D11R=False # It include D10
        self.D11L=False # It include D10
        self.D12=False
        self.D13=False
        self.D14=False
        self.D15=False
        self.D16=False
        self.D17=False
        self.D18=False
        self.D19=False
        self.D20=False
        self.D21=False
        self.D22=False
        self.D23=False
        self.D24=False
        self.D25=False
        self.D26=False
        self.D27=False
        self.D28=False
        self.D29=False
        self.D30=False
        self.D31=False
        self.D32=False
        self.D33=False
        self.D34=False
        self.D35=False
        self.D36=False
        self.D37=False
        self.D38=False
        
        #hit
        self.Z0=False
        self.Z1=False
        self.Z2=False
        self.Z3=False
        self.Z4=False
        self.Z5=False
        self.Z6=False
        self.Z7=False
        self.Z8=False
        self.Z9=False
        self.Z10=False
        self.Z11=False
        self.Z12=False
        self.Z13=False
        self.Z14=False
    def Direction(self,X):
        if self.x>X.x:
            self.right=False
        elif self.x<X.x:
            self.right=True
        
    def Battelfeild(self,win):
        win.blit(self.BG,(0,0))
    def Computer(self,X):
        pass
    def Control(self,keys):
        if keys[pygame.K_RSHIFT] and keys[pygame.K_RIGHT]:
            if self.count==0:
                self.D9R=True
                
        elif keys[pygame.K_RSHIFT] and keys[pygame.K_LEFT]:
            if self.count==0:
                self.D9L=True

        elif keys[pygame.K_LSHIFT] and keys[pygame.K_RIGHT]:
            if self.count==0:
                self.D11R=True

        elif keys[pygame.K_LSHIFT] and keys[pygame.K_LEFT]:
            if self.count==0:
                self.D11L=True
                
        elif keys[pygame.K_LEFT]:
            if self.count==0:
                self.D3L=True
    
        elif keys[pygame.K_RIGHT]:
            if self.count==0:
                self.D3R=True
            
        elif keys[pygame.K_a]:
            if self.count==0:
                self.D4=True

        elif keys[pygame.K_s]:
            if self.count==0:
                self.D5=True
            
        elif keys[pygame.K_d]:
            if self.count==0:
                self.D6=True
            
        elif keys[pygame.K_UP]:
            if self.count==0:
                self.D7=True

        elif keys[pygame.K_DOWN]:
            if self.count==0:
                self.D8=True

        elif keys[pygame.K_DOWN]:
            if self.count==0:
                self.D12=True
        
        elif keys[pygame.K_SPACE]:
            self.D12=True
            
    def draw(self,win,X):
        if self.logo:
            win.blit(self.Logo,(0,0))
            pygame.draw.rect(win,(255,255,255),(0,0,100,100),1)
            win.blit(self.Name,(110,0))
            win.blit(self.V,(620,40))
            win.blit(self.A,(640,40))

            pygame.draw.rect(win,(0,0,0),(100,40,500,30))
            pygame.draw.rect(win,(252,36,84),(100,40,500,30))
            pygame.draw.rect(win,(225,255,255),(100,40,500,30),1)

            pygame.draw.rect(win,(0,0,0),(100,70,250,30))
            pygame.draw.rect(win,(255,223,0),(100,70,250,30))
            pygame.draw.rect(win,(255,255,255),(100,70,250,30),1)
        else:
            win.blit(self.Logo,(1200,0))
            pygame.draw.rect(win,(255,223,0),(1200,0,100,100),1)
            win.blit(self.Name,(1020,0))
            win.blit(self.S,(660,40))

            pygame.draw.rect(win,(0,0,0),(702,40,500,30))
            pygame.draw.rect(win,(252,36,84),(702,40,500,30))
            pygame.draw.rect(win,(255,255,255),(702,40,500,30),1)

            pygame.draw.rect(win,(0,0,0),(952,70,250,30))
            pygame.draw.rect(win,(255,223,0),(952,70,250,30))
            pygame.draw.rect(win,(255,255,255),(952,70,250,30),1)
            
        if self.D3L:
            self.Screen=self.SD3[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            if self.x>10:
                self.x-=2
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+ 1> 24:
                self.count=0
                self.D3L=False
                self.Direction(X)

        elif self.D3R:
            self.Screen=self.SD3[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            if self.x+106<1300:
                self.x+=2
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+ 1> 24:
                self.count=0
                self.D3R=False
                self.Direction(X)

        elif self.D4:
            self.Screen=self.SD4[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.count=0
                self.D4=False
                self.Direction(X)

        elif self.D5:
            self.y=330
            self.Screen=self.SD5[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.count=0
                self.y=300
                self.D5=False
                self.Direction(X)

        elif self.D6:
            self.Screen=self.SD6[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.count=0
                self.D6=False
                self.Direction(X)

        elif self.D7:
            if self.right and 1300 -(X.x+X.width)>106: # 106 self.widht
                if (self.x+106)>X.x-40 and  self.x<X.x+X.width+10  and self.count>18 and self.x+106 < 1300:
                    self.x+=50
            else:
                if X.x>106 :# 106 self.widht
                   if self.x<(X.x+X.width+40)and self.x+106>X.x-10 and self.count>18 and self.x > 20:
                        self.x-=50
                        
            if self.count<12 and self.count>4:
                self.y-=25
            self.Screen=self.SD7[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>32:
                self.count=0
                if self.x+106>1300:
                    self.x=self.x-(self.x+106-1300)
                if self.x<10:
                    self.x=10
                self.y=300
                self.D7=False
                self.Direction(X)

        elif self.D8:
            if self.count>8:
                self.y=360
            self.Screen=self.SD8[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.y=300
                self.count=0
                self.D8=False
                self.Direction(X)

        elif self.D9R: 
            if self.right:
                if self.x+143<X.x-20 and self.count>=8: #SELF.WIDHT 143
                    self.x+=10
                    self.count=7
                self.Screen=self.SD9[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x+106<1300 and self.count>=8: # SELF.WIDHT 106
                    self.x+=10
                    self.count=7
                self.Screen=self.SD10[self.count//4]     
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>16:
                self.y=300
                self.count=0
                self.D9R=False
                self.Direction(X)

        elif self.D9L:
            if self.right:
                if self.x>10 and self.count>=8:
                    self.x-=10
                    self.count=7
                self.Screen=self.SD10[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x>X.x+X.width+20 and self.count>=8:
                    self.x-=10
                    self.count=7
                self.Screen=self.SD9[self.count//4]
                
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>16:
                self.y=300
                self.count=0
                self.D9L=False
                self.Direction(X)
        
        elif self.D11R:
            if self.right:
                if self.x+165<X.x-20 and self.count>=8: # SELF.WIDTH 165
                    self.x+=10
                    self.count=7
                self.Screen=self.SD11[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x+106<1300 and self.count>=8: # SELF.WIDTH 106
                    self.x+=10
                    self.count=7
                self.Screen=self.SD10[self.count//4]     
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>16:
                    self.y=300
                    self.count=0
                    self.D11R=False
                    self.Direction(X) 
                


        elif self.D11L:
            if self.right:
                if self.x>10 and self.count>=8:
                    self.x-=10
                    self.count=7
                self.Screen=self.SD10[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x>X.x+X.width+20 and self.count>=8:
                    self.x-=10
                    self.count=7
                self.Screen=self.SD11[self.count//4]
                
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>16:
                    self.y=300
                    self.count=0
                    self.D11L=False
                    self.Direction(X)
                
        


        elif self.D12:
            self.SUPER=self.SE[self.SS//4]
            self.SUPER=pygame.transform.scale(self.SUPER,(300,280))
            self.Screen=self.SD12[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            win.blit(self.SUPER,(self.x-100,self.y-160))
            self.count+=1
            self.SS+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.SS+1>16:
                self.SS=0
            if self.count+1>20:
                self.y=self.Base
                self.count=0
                self.SS=0
                self.D12=False
                self.Direction(X)

        #======================= HITS =========================

        elif self.Z1:
            self.Screen=self.SZ1[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+100<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z1=False
                self.Direction(X)

        elif self.Z2:
            self.Screen=self.SZ2[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+95<1300:
                    self.x+=20
                
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z2=False
                self.Direction(X)

        elif self.Z3:
            self.Screen=self.SZ3[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+142<1300:
                    self.x+=20   
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z3=False
                self.Direction(X)
                

        elif self.Z4:
            self.Screen=self.SZ4[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+80<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z4=False
                self.Direction(X)

        elif self.Z5:
            self.Screen=self.SZ5[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+120<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z5=False
                self.Direction(X)
                

        elif self.Z6:
            self.y=self.Base+30
            self.Screen=self.SZ6[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+126<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z6=False
                self.Direction(X)

        elif self.Z7:
            self.y=self.Base+30
            self.Screen=self.SZ7[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+111<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z7=False
                self.Direction(X)

        elif self.Z8:
            self.Screen=self.SZ8[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=5
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+142<1300:
                    self.x+=5
            if self.y>100 and self.hit<20:
                self.y-=8
            if self.hit>20:
                self.y+=30
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>24:
                self.y=self.Base
                self.hit=0
                self.Z8=False
                self.Direction(X)
                
                

        elif self.Z9:
            self.Screen=self.SZ9[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+75<1300:
                    self.x+=20
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z9=False
                self.Direction(X)
                
                
        elif self.Z10:
            self.Screen=self.SZ10[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+85<1300:
                    self.x+=20
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z10=False
                self.Direction(X)

        elif self.Z11:
            self.Screen=self.SZ11[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+117<1300:
                    self.x+=20   
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z11=False
                self.Direction(X)

        elif self.Z12:
            self.Screen=self.SZ12[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+100<1300:
                    self.x+=20
                
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z12=False
                self.Direction(X)
        
        elif self.Z13:
            self.Screen=self.SZ13[self.hit//4]
            if self.right:
                if self.hit>8 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>8 and self.x+100<1300:
                    self.x+=15
                
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z13=False
                self.Direction(X)
                
        elif self.Z14:
            self.Screen=self.SZ14[self.hit//4]
            if self.right:
                if self.hit>4 and self.x>10:
                    self.x-=6
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>4 and self.x+94<1300:
                    self.x+=6
            if self.y>100 and self.hit<16:
                self.y-=5
            if self.hit>=16:
                self.y+=5
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>24:
                self.y=self.Base
                self.hit=0
                self.Z14=False
                self.Direction(X)
                
        elif self.Z0:
            if self.hit<20:
                self.y=self.Base+60
            elif self.hit==21:
                self.y=self.Base+30
            elif self.hit==25:
                self.y=self.Base+20
            elif self.hit==30:
                self.y=self.Base
            self.Screen=self.SZ0[self.hit//6]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>48:
                self.y=self.Base
                self.hit=0
                self.Z0=False
                self.Direction(X)

        else:
            self.Screen=self.Stand[self.stand//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.stand+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.stand+1 > 20:
                self.stand=0
                self.Direction(X)

#---------------------------------------------------------------------------------------------------------------------------------
class Captain_Ginyu():
    BG=pygame.image.load("data/bg/spaceimg.png").convert_alpha()
    BG=pygame.transform.scale(BG,(1300,600))
    font=pygame.font.SysFont('calibri',40,True,True)
    Name=font.render("Captain Ginyu",1,(218,178,246))
    V=font.render("V",1,(218,178,246))
    A=font.render("/",1,(255,223,0))
    S=font.render("S",1,(218,178,246))
    Logo=pygame.image.load("data/Select/A21.png").convert_alpha()
    Logo=pygame.transform.scale(Logo,(100,100))
    SE=[pygame.image.load("data/Effects/A5.png").convert_alpha(),pygame.image.load("data/Effects/A6.png").convert_alpha(),pygame.image.load("data/Effects/A7.png").convert_alpha(),pygame.image.load("data/Effects/A8.png").convert_alpha(),pygame.image.load("data/Effects/A9.png").convert_alpha(),pygame.image.load("data/Effects/A10.png").convert_alpha(),pygame.image.load("data/Effects/A11.png").convert_alpha()]
    Stand=[pygame.image.load("data/Captain_Ginyu/A1.png").convert_alpha(),pygame.image.load("data/Captain_Ginyu/A2.png").convert_alpha(),pygame.image.load("data/Captain_Ginyu/A3.png").convert_alpha(),pygame.image.load("data/Captain_Ginyu/A4.png").convert_alpha()]
    SE3=[pygame.image.load("data/Captain_Ginyu/C1.png").convert_alpha(),pygame.image.load("data/Captain_Ginyu/C2.png").convert_alpha(),pygame.image.load("data/Captain_Ginyu/C3.png").convert_alpha(),pygame.image.load("data/Captain_Ginyu/C4.png").convert_alpha(),pygame.image.load("data/Captain_Ginyu/C5.png").convert_alpha(),pygame.image.load("data/Captain_Ginyu/C6.png").convert_alpha()]
    SE4=[pygame.image.load("data/Captain_Ginyu/D1.png").convert_alpha(),pygame.image.load("data/Captain_Ginyu/D2.png").convert_alpha(),pygame.image.load("data/Captain_Ginyu/D3.png").convert_alpha(),pygame.image.load("data/Captain_Ginyu/D3.png").convert_alpha(),pygame.image.load("data/Captain_Ginyu/D3.png").convert_alpha(),pygame.image.load("data/Captain_Ginyu/D3.png").convert_alpha()]
    SE5=[pygame.image.load("data/Captain_Ginyu/E1.png").convert_alpha(),pygame.image.load("data/Captain_Ginyu/E2.png").convert_alpha(),pygame.image.load("data/Captain_Ginyu/E3.png").convert_alpha(),pygame.image.load("data/Captain_Ginyu/E3.png").convert_alpha(),pygame.image.load("data/Captain_Ginyu/E3.png").convert_alpha(),pygame.image.load("data/Captain_Ginyu/E3.png").convert_alpha()]
    SE6=[pygame.image.load("data/Captain_Ginyu/F1.png").convert_alpha(),pygame.image.load("data/Captain_Ginyu/F2.png").convert_alpha(),pygame.image.load("data/Captain_Ginyu/F3.png").convert_alpha(),pygame.image.load("data/Captain_Ginyu/F3.png").convert_alpha(),pygame.image.load("data/Captain_Ginyu/F3.png").convert_alpha(),pygame.image.load("data/Captain_Ginyu/F3.png").convert_alpha()]
    SE7=[pygame.image.load("data/Captain_Ginyu/G1.png").convert_alpha(),pygame.image.load("data/Captain_Ginyu/G2.png").convert_alpha(),pygame.image.load("data/Captain_Ginyu/G3.png").convert_alpha(),pygame.image.load("data/Captain_Ginyu/G4.png").convert_alpha(),pygame.image.load("data/Captain_Ginyu/G5.png").convert_alpha(),pygame.image.load("data/Captain_Ginyu/G6.png").convert_alpha(),pygame.image.load("data/Captain_Ginyu/G7.png").convert_alpha(),pygame.image.load("data/Captain_Ginyu/G8.png").convert_alpha()]
    SE8=[pygame.image.load("data/Captain_Ginyu/H1.png").convert_alpha(),pygame.image.load("data/Captain_Ginyu/H2.png").convert_alpha(),pygame.image.load("data/Captain_Ginyu/H3.png").convert_alpha(),pygame.image.load("data/Captain_Ginyu/H3.png").convert_alpha(),pygame.image.load("data/Captain_Ginyu/H3.png").convert_alpha(),pygame.image.load("data/Captain_Ginyu/H3.png").convert_alpha()]
    SE9=[pygame.image.load("data/Captain_Ginyu/I1.png").convert_alpha(),pygame.image.load("data/Captain_Ginyu/I2.png").convert_alpha(),pygame.image.load("data/Captain_Ginyu/I3.png").convert_alpha(),pygame.image.load("data/Captain_Ginyu/I4.png").convert_alpha()]
    SE10=[pygame.image.load("data/Captain_Ginyu/J1.png").convert_alpha(),pygame.image.load("data/Captain_Ginyu/J2.png").convert_alpha(),pygame.image.load("data/Captain_Ginyu/J3.png").convert_alpha(),pygame.image.load("data/Captain_Ginyu/J4.png").convert_alpha()]
    SE11=[pygame.image.load("data/Captain_Ginyu/K1.png").convert_alpha(),pygame.image.load("data/Captain_Ginyu/K2.png").convert_alpha(),pygame.image.load("data/Captain_Ginyu/K3.png").convert_alpha(),pygame.image.load("data/Captain_Ginyu/K4.png").convert_alpha()]
    SE12=[pygame.image.load("data/Captain_Ginyu/L1.png").convert_alpha(),pygame.image.load("data/Captain_Ginyu/L2.png").convert_alpha(),pygame.image.load("data/Captain_Ginyu/L3.png").convert_alpha(),pygame.image.load("data/Captain_Ginyu/L4.png").convert_alpha()]
    SE13=[]
    SE13=[]
    SE13=[]
    SE13=[]
    SE13=[]
    SE13=[]
    SE13=[]
    SE13=[]
    SE13=[]
    SE13=[]
    SE13=[]
    SE13=[]
    SE13=[]
    SE13=[]
    SE13=[]
    SE13=[]
    SE13=[]
    SE13=[]
    SE13=[]
    SE13=[]
    SE13=[]
    SE13=[]
    SE13=[]
    SE13=[]
    
    SZ0=[pygame.image.load("data/Captain_Ginyu/AZ1.png").convert_alpha(),pygame.image.load("data/Captain_Ginyu/AZ2.png").convert_alpha(),pygame.image.load("data/Captain_Ginyu/AZ3.png").convert_alpha(),pygame.image.load("data/Captain_Ginyu/AZ4.png").convert_alpha(),pygame.image.load("data/Captain_Ginyu/AZ5.png").convert_alpha(),pygame.image.load("data/Captain_Ginyu/AZ6.png").convert_alpha(),pygame.image.load("data/Captain_Ginyu/AZ7.png").convert_alpha(),pygame.image.load("data/Captain_Ginyu/AZ7.png").convert_alpha()]
    SZ1=[pygame.image.load("data/Captain_Ginyu/AQ1.png").convert_alpha(),pygame.image.load("data/Captain_Ginyu/AQ2.png").convert_alpha(),pygame.image.load("data/Captain_Ginyu/AQ3.png").convert_alpha(),pygame.image.load("data/Captain_Ginyu/AQ4.png").convert_alpha()]
    SZ2=[pygame.image.load("data/Captain_Ginyu/AR1.png").convert_alpha(),pygame.image.load("data/Captain_Ginyu/AR2.png").convert_alpha()]
    SZ3=[pygame.image.load("data/Captain_Ginyu/AW3.png").convert_alpha(),pygame.image.load("data/Captain_Ginyu/AW4.png").convert_alpha(),pygame.image.load("data/Captain_Ginyu/AW1.png").convert_alpha(),pygame.image.load("data/Captain_Ginyu/AW2.png").convert_alpha()]
    SZ4=[pygame.image.load("data/Captain_Ginyu/AN1.png").convert_alpha(),pygame.image.load("data/Captain_Ginyu/AN2.png").convert_alpha(),pygame.image.load("data/Captain_Ginyu/AN3.png").convert_alpha(),pygame.image.load("data/Captain_Ginyu/AN4.png").convert_alpha()]
    SZ5=[pygame.image.load("data/Captain_Ginyu/AT1.png").convert_alpha(),pygame.image.load("data/Captain_Ginyu/AT2.png").convert_alpha(),pygame.image.load("data/Captain_Ginyu/AT3.png").convert_alpha(),pygame.image.load("data/Captain_Ginyu/AT4.png").convert_alpha()]
    SZ6=[pygame.image.load("data/Captain_Ginyu/AU1.png").convert_alpha(),pygame.image.load("data/Captain_Ginyu/AU2.png").convert_alpha()]
    SZ7=[pygame.image.load("data/Captain_Ginyu/AV1.png").convert_alpha(),pygame.image.load("data/Captain_Ginyu/AV2.png").convert_alpha()]
    SZ8=[pygame.image.load("data/Captain_Ginyu/AX1.png").convert_alpha(),pygame.image.load("data/Captain_Ginyu/AX2.png").convert_alpha(),pygame.image.load("data/Captain_Ginyu/AW1.png").convert_alpha(),pygame.image.load("data/Captain_Ginyu/AW2.png").convert_alpha(),pygame.image.load("data/Captain_Ginyu/AY1.png").convert_alpha(),pygame.image.load("data/Captain_Ginyu/AY2.png").convert_alpha()]
    SZ9=[pygame.image.load("data/Captain_Ginyu/AP1.png").convert_alpha(),pygame.image.load("data/Captain_Ginyu/AP2.png").convert_alpha()]
    SZ10=[pygame.image.load("data/Captain_Ginyu/AS1.png").convert_alpha(),pygame.image.load("data/Captain_Ginyu/AS2.png").convert_alpha()]
    SZ11=[pygame.image.load("data/Captain_Ginyu/AM1.png").convert_alpha(),pygame.image.load("data/Captain_Ginyu/AM2.png").convert_alpha(),pygame.image.load("data/Captain_Ginyu/AM3.png").convert_alpha(),pygame.image.load("data/Captain_Ginyu/AM4.png").convert_alpha()]
    SZ12=[pygame.image.load("data/Captain_Ginyu/AO1.png").convert_alpha(),pygame.image.load("data/Captain_Ginyu/AO2.png").convert_alpha()]
    SZ13=[pygame.image.load("data/Captain_Ginyu/AW3.png").convert_alpha(),pygame.image.load("data/Captain_Ginyu/AW4.png").convert_alpha(),pygame.image.load("data/Captain_Ginyu/AY3.png").convert_alpha(),pygame.image.load("data/Captain_Ginyu/AY4.png").convert_alpha()]
    SZ14=[pygame.image.load("data/Captain_Ginyu/AX3.png").convert_alpha(),pygame.image.load("data/Captain_Ginyu/AX3.png").convert_alpha(),pygame.image.load("data/Captain_Ginyu/AX4.png").convert_alpha(),pygame.image.load("data/Captain_Ginyu/AX4.png").convert_alpha(),pygame.image.load("data/Captain_Ginyu/AY4.png").convert_alpha(),pygame.image.load("data/Captain_Ginyu/AY4.png").convert_alpha()]
    
    def __init__(self,x,y,right,logo):
        self.x=x
        self.Base=y
        self.y=y
        self.width=None
        self.height=None
        self.health=None
        self.right=right
        self.logo=logo
        self.SS=0
        self.count=0
        self.stand=0
        self.move=0
        self.hit=0
        self.attack=0
        self.Attack=False
        self.EffectWork=False
        self.Effect=None
        self.Screen=None
        self.SUPER=None
        self.POWERX=x
        self.POWERY=y
        self.POWER=None
        self.POWERBLIT=True

        
        self.E3L=False
        self.E3R=False
        self.E4=False
        self.E5=False
        self.E6=False
        self.E7=False
        self.E8=False
        self.E9L=False # It include D10
        self.E9R=False # It include D10
        self.E11R=False # It include D10
        self.E11L=False # It include D10
        self.E12=False
        self.E13=False
        self.E14=False
        self.E15=False
        self.E16=False
        self.E17=False
        self.E18=False
        self.E19=False
        self.E20=False
        self.E21=False
        self.E22=False
        self.E23=False
        self.E24=False
        self.E25=False
        self.E26=False
        self.E27=False
        self.E28=False
        self.E29=False
        self.E30=False
        self.E31=False
        self.E32=False
        self.E33=False
        self.E34=False
        self.E35=False
        self.E36=False
        self.E37=False
        self.E38=False

        self.Z0=False
        self.Z1=False
        self.Z2=False
        self.Z3=False
        self.Z4=False
        self.Z5=False
        self.Z6=False
        self.Z7=False
        self.Z8=False
        self.Z9=False
        self.Z10=False
        self.Z11=False
        self.Z12=False
        self.Z13=False
        self.Z14=False

    def Direction(self,X):
        if self.x>X.x:
            self.right=False
        elif self.x<X.x:
            self.right=True
            
    def Battelfeild(self,win):
        win.blit(self.BG,(0,0))
    def Computer(self,X):
        pass
    def Control(self,keys):
        if keys[pygame.K_RSHIFT] and keys[pygame.K_RIGHT]:
            if self.count==0:
                self.E9R=True
                
        elif keys[pygame.K_RSHIFT] and keys[pygame.K_LEFT]:
            if self.count==0:
                self.E9L=True

        elif keys[pygame.K_LSHIFT] and keys[pygame.K_RIGHT]:
            if self.count==0:
                self.E11R=True

        elif keys[pygame.K_LSHIFT] and keys[pygame.K_LEFT]:
            if self.count==0:
                self.E11L=True
                
        elif keys[pygame.K_LEFT]:
            if self.count==0:
                self.E3L=True
    
        elif keys[pygame.K_RIGHT]:
            if self.count==0:
                self.E3R=True
            
        elif keys[pygame.K_a]:
            if self.count==0:
                self.E4=True

        elif keys[pygame.K_s]:
            if self.count==0:
                self.E5=True
            
        elif keys[pygame.K_d]:
            if self.count==0:
                self.E6=True
            
        elif keys[pygame.K_UP]:
            if self.count==0:
                self.E7=True

        elif keys[pygame.K_DOWN]:
            if self.count==0:
                self.E8=True

        elif keys[pygame.K_DOWN]:
            if self.count==0:
                self.E12=True
        
        elif keys[pygame.K_SPACE]:
            self.E12=True

    def draw(self,win,X):
        if self.logo:
            win.blit(self.Logo,(0,0))
            pygame.draw.rect(win,(255,255,255),(0,0,100,100),1)
            win.blit(self.Name,(110,0))
            win.blit(self.V,(620,40))
            win.blit(self.A,(640,40))

            pygame.draw.rect(win,(0,0,0),(100,40,500,30))
            pygame.draw.rect(win,(218,178,246),(100,40,500,30))
            pygame.draw.rect(win,(255,255,255),(100,40,500,30),1)

            pygame.draw.rect(win,(0,0,0),(100,70,250,30))
            pygame.draw.rect(win,(255,223,0),(100,70,250,30))
            pygame.draw.rect(win,(255,255,255),(100,70,250,30),1)
        else:
            win.blit(self.Logo,(1200,0))
            pygame.draw.rect(win,(255,255,255),(1200,0,100,100),1)
            win.blit(self.Name,(960,0))
            win.blit(self.S,(660,40))

            pygame.draw.rect(win,(0,0,0),(702,40,500,30))
            pygame.draw.rect(win,(218,178,246),(702,40,500,30))
            pygame.draw.rect(win,(255,255,255),(702,40,500,30),1)

            pygame.draw.rect(win,(0,0,0),(952,70,250,30))
            pygame.draw.rect(win,(255,223,0),(952,70,250,30))
            pygame.draw.rect(win,(255,255,255),(952,70,250,30),1)
            
            
        if self.E3L:
            self.Screen=self.SE3[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            if self.x>10:
                self.x-=2
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+ 1> 24:
                self.count=0
                self.E3L=False
                self.Direction(X)

        elif self.E3R:
            self.Screen=self.SE3[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            if self.x+157<1300:
                self.x+=2
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+ 1> 24:
                self.count=0
                self.E3R=False
                self.Direction(X)

        elif self.E4:
            self.Screen=self.SE4[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.count=0
                self.E4=False
                self.Direction(X)

        elif self.E5:
            self.y=330
            self.Screen=self.SE5[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.count=0
                self.y=300
                self.E5=False
                self.Direction(X)

        elif self.E6:
            self.Screen=self.SE6[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.count=0
                self.E6=False
                self.Direction(X)

        elif self.E7:
            if self.right and 1300 -(X.x+X.width)>157: # 157 self.widht
                if (self.x+157)>X.x-40 and  self.x<X.x+X.width+10  and self.count>18 and self.x+157 < 1300:
                    self.x+=50
            else:
                if X.x>157 :# 157 self.widht
                   if self.x<(X.x+X.width+40)and self.x+157>X.x-10 and self.count>18 and self.x > 20:
                        self.x-=50
                        
            if self.count<12 and self.count>4:
                self.y-=25
            self.Screen=self.SE7[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>32:
                if self.x+157>1300:
                    self.x=self.x-(self.x+157-1300)
                if self.x<10:
                    self.x=10
                self.count=0
                self.y=300
                self.E7=False
                self.Direction(X)

        elif self.E8:
            if self.count>8:
                self.y=360
            self.Screen=self.SE8[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.y=300
                self.count=0
                self.E8=False
                self.Direction(X)

        elif self.E9R: 
            if self.right:
                if self.x+196<X.x-20 and self.count>=8: #self.widht 196
                    self.x+=10
                    self.count=7
                self.Screen=self.SE9[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x+136<1300 and self.count>=8: # self.width 136
                    self.x+=10
                    self.count=7
                self.Screen=self.SE10[self.count//4]     
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>16:
                self.y=300
                self.count=0
                self.E9R=False
                self.Direction(X)

        elif self.E9L:
            if self.right:
                if self.x>10 and self.count>=8:
                    self.x-=10
                    self.count=7
                self.Screen=self.SE10[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x>X.x+X.width+20 and self.count>=8:
                    self.x-=10
                    self.count=7
                self.Screen=self.SE9[self.count//4]
                
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>16:
                self.y=300
                self.count=0
                self.E9L=False
                self.Direction(X)
        
        elif self.E11R:
            if self.right:
                if self.x+166<X.x-20 and self.count>=8: # SELF.WIDTH 166
                    self.x+=10
                    self.count=7
                self.Screen=self.SE11[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x+136<1300 and self.count>=8: # SELF.WIDTH 136
                    self.x+=10
                    self.count=7
                self.Screen=self.SE10[self.count//4]     
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>16:
                    self.y=300
                    self.count=0
                    self.E11R=False
                    self.Direction(X) 
                


        elif self.E11L:
            if self.right:
                if self.x>10 and self.count>=8:
                    self.x-=10
                    self.count=7
                self.Screen=self.SE10[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x>X.x+X.width+20 and self.count>=8:
                    self.x-=10
                    self.count=7
                self.Screen=self.SE11[self.count//4]
                
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>16:
                    self.y=300
                    self.count=0
                    self.E11L=False
                    self.Direction(X)
                
        


        elif self.E12:
            self.SUPER=self.SE[self.SS//4]
            self.SUPER=pygame.transform.scale(self.SUPER,(300,280))
            self.Screen=self.SE12[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            win.blit(self.SUPER,(self.x-100,self.y-160))
            self.count+=1
            self.SS+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.SS+1>28:
                self.SS=0
            if self.count+1>16:
                self.y=self.Base
                self.count=0
                self.SS=0
                self.E12=False
                self.Direction(X)

        # hits        
        elif self.Z1:
            self.Screen=self.SZ1[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+142<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z1=False
                self.Direction(X)

        elif self.Z2:
            self.Screen=self.SZ2[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+154<1300:
                    self.x+=20
                
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z2=False
                self.Direction(X)

        elif self.Z3:
            self.Screen=self.SZ3[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+165<1300:
                    self.x+=20   
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z3=False
                self.Direction(X)
                

        elif self.Z4:
            self.Screen=self.SZ4[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+140<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z4=False
                self.Direction(X)

        elif self.Z5:
            self.Screen=self.SZ5[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+155<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z5=False
                self.Direction(X)
                

        elif self.Z6:
            self.y=self.Base+30
            self.Screen=self.SZ6[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+164<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z6=False
                self.Direction(X)

        elif self.Z7:
            self.y=self.Base+30
            self.Screen=self.SZ7[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+126<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z7=False
                self.Direction(X)

        elif self.Z8:
            self.Screen=self.SZ8[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=5
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+165<1300:
                    self.x+=5
            if self.y>100 and self.hit<20:
                self.y-=8
            if self.hit>20:
                self.y+=30
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>24:
                self.y=self.Base
                self.hit=0
                self.Z8=False
                self.Direction(X)
                
                

        elif self.Z9:
            self.Screen=self.SZ9[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+116<1300:
                    self.x+=20
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z9=False
                self.Direction(X)
                
                
        elif self.Z10:
            self.Screen=self.SZ10[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+100<1300:
                    self.x+=20
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z10=False
                self.Direction(X)

        elif self.Z11:
            self.Screen=self.SZ11[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+150<1300:
                    self.x+=20   
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z11=False
                self.Direction(X)

        elif self.Z12:
            self.Screen=self.SZ12[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+140<1300:
                    self.x+=20
                
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z12=False
                self.Direction(X)
        
        elif self.Z13:
            self.Screen=self.SZ13[self.hit//4]
            if self.right:
                if self.hit>8 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>8 and self.x+127<1300:
                    self.x+=15
                
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z13=False
                self.Direction(X)
                
        elif self.Z14:
            self.Screen=self.SZ14[self.hit//4]
            if self.right:
                if self.hit>4 and self.x>10:
                    self.x-=6
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>4 and self.x+141<1300:
                    self.x+=6
            if self.y>100 and self.hit<16:
                self.y-=5
            if self.hit>=16:
                self.y+=5
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>24:
                self.y=self.Base
                self.hit=0
                self.Z14=False
                self.Direction(X)
                
        elif self.Z0:
            if self.hit<20:
                self.y=self.Base+60
            elif self.hit==21:
                self.y=self.Base+30
            elif self.hit==25:
                self.y=self.Base+20
            elif self.hit==30:
                self.y=self.Base
            self.Screen=self.SZ0[self.hit//6]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>48:
                self.y=self.Base
                self.hit=0
                self.Z0=False
                self.Direction(X)

        else:
            self.Screen=self.Stand[self.stand//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.stand+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.stand+1 > 16:
                self.stand=0
                self.Direction(X)

#---------------------------------------------------------------------------------------------------------------------------------
class Saiyan_Adult_Gohan():
    BG=pygame.image.load("data/bg/spaceimg.png").convert_alpha()
    BG=pygame.transform.scale(BG,(1300,600))
    font=pygame.font.SysFont('calibri',40,True,True)
    Name=font.render("Saiyan Adult Gohan",1,(200,165,5))
    V=font.render("V",1,(200,165,5))
    A=font.render("/",1,(255,223,0))
    S=font.render("S",1,(200,165,5))
    Logo=pygame.image.load("data/Select/A2.png").convert_alpha()
    Logo=pygame.transform.scale(Logo,(100,100))

    SE=[pygame.image.load("data/Effects/A1.png").convert_alpha(),pygame.image.load("data/Effects/A2.png").convert_alpha(),pygame.image.load("data/Effects/A3.png").convert_alpha(),pygame.image.load("data/Effects/A4.png").convert_alpha()]
    #SE=[pygame.image.load("data/Effects/A5.png").convert_alpha(),pygame.image.load("data/Effects/A6.png").convert_alpha(),pygame.image.load("data/Effects/A7.png").convert_alpha(),pygame.image.load("data/Effects/A8.png").convert_alpha(),pygame.image.load("data/Effects/A9.png").convert_alpha(),pygame.image.load("data/Effects/A10.png").convert_alpha(),pygame.image.load("data/Effects/A11.png").convert_alpha()]
    Stand=[pygame.image.load("data/SaiyanAdultGohan/A1.png").convert_alpha(),pygame.image.load("data/SaiyanAdultGohan/A2.png").convert_alpha(),pygame.image.load("data/SaiyanAdultGohan/A3.png").convert_alpha(),pygame.image.load("data/SaiyanAdultGohan/A4.png").convert_alpha()]
    SF3=[pygame.image.load("data/SaiyanAdultGohan/C1.png").convert_alpha(),pygame.image.load("data/SaiyanAdultGohan/C2.png").convert_alpha(),pygame.image.load("data/SaiyanAdultGohan/C3.png").convert_alpha(),pygame.image.load("data/SaiyanAdultGohan/C4.png").convert_alpha(),pygame.image.load("data/SaiyanAdultGohan/C5.png").convert_alpha()]
    SF4=[pygame.image.load("data/SaiyanAdultGohan/D1.png").convert_alpha(),pygame.image.load("data/SaiyanAdultGohan/D2.png").convert_alpha(),pygame.image.load("data/SaiyanAdultGohan/D3.png").convert_alpha(),pygame.image.load("data/SaiyanAdultGohan/D3.png").convert_alpha(),pygame.image.load("data/SaiyanAdultGohan/D3.png").convert_alpha(),pygame.image.load("data/SaiyanAdultGohan/D3.png").convert_alpha()]
    SF5=[pygame.image.load("data/SaiyanAdultGohan/E1.png").convert_alpha(),pygame.image.load("data/SaiyanAdultGohan/E2.png").convert_alpha(),pygame.image.load("data/SaiyanAdultGohan/E3.png").convert_alpha(),pygame.image.load("data/SaiyanAdultGohan/E3.png").convert_alpha(),pygame.image.load("data/SaiyanAdultGohan/E3.png").convert_alpha(),pygame.image.load("data/SaiyanAdultGohan/E3.png").convert_alpha()]
    SF6=[pygame.image.load("data/SaiyanAdultGohan/F1.png").convert_alpha(),pygame.image.load("data/SaiyanAdultGohan/F2.png").convert_alpha(),pygame.image.load("data/SaiyanAdultGohan/F3.png").convert_alpha(),pygame.image.load("data/SaiyanAdultGohan/F3.png").convert_alpha(),pygame.image.load("data/SaiyanAdultGohan/F3.png").convert_alpha(),pygame.image.load("data/SaiyanAdultGohan/F3.png").convert_alpha()]
    SF7=[pygame.image.load("data/SaiyanAdultGohan/G1.png").convert_alpha(),pygame.image.load("data/SaiyanAdultGohan/G2.png").convert_alpha(),pygame.image.load("data/SaiyanAdultGohan/G3.png").convert_alpha(),pygame.image.load("data/SaiyanAdultGohan/G4.png").convert_alpha(),pygame.image.load("data/SaiyanAdultGohan/G5.png").convert_alpha(),pygame.image.load("data/SaiyanAdultGohan/G6.png").convert_alpha()]
    SF8=[pygame.image.load("data/SaiyanAdultGohan/H1.png").convert_alpha(),pygame.image.load("data/SaiyanAdultGohan/H2.png").convert_alpha(),pygame.image.load("data/SaiyanAdultGohan/H3.png").convert_alpha(),pygame.image.load("data/SaiyanAdultGohan/H3.png").convert_alpha(),pygame.image.load("data/SaiyanAdultGohan/H3.png").convert_alpha(),pygame.image.load("data/SaiyanAdultGohan/H3.png").convert_alpha()]
    SF9=[pygame.image.load("data/SaiyanAdultGohan/I1.png").convert_alpha(),pygame.image.load("data/SaiyanAdultGohan/I2.png").convert_alpha(),pygame.image.load("data/SaiyanAdultGohan/I3.png").convert_alpha()]
    SF10=[pygame.image.load("data/SaiyanAdultGohan/J1.png").convert_alpha(),pygame.image.load("data/SaiyanAdultGohan/J2.png").convert_alpha()]
    SF11=[pygame.image.load("data/SaiyanAdultGohan/K1.png").convert_alpha(),pygame.image.load("data/SaiyanAdultGohan/K2.png").convert_alpha(),pygame.image.load("data/SaiyanAdultGohan/K3.png").convert_alpha(),pygame.image.load("data/SaiyanAdultGohan/K4.png").convert_alpha()]
    SF12=[pygame.image.load("data/SaiyanAdultGohan/L1.png").convert_alpha(),pygame.image.load("data/SaiyanAdultGohan/L2.png").convert_alpha(),pygame.image.load("data/SaiyanAdultGohan/L3.png").convert_alpha(),pygame.image.load("data/SaiyanAdultGohan/L4.png").convert_alpha(),pygame.image.load("data/SaiyanAdultGohan/L5.png").convert_alpha(),pygame.image.load("data/SaiyanAdultGohan/L6.png").convert_alpha()]

    SZ0=[pygame.image.load("data/SaiyanAdultGohan/AZ1.png").convert_alpha(),pygame.image.load("data/SaiyanAdultGohan/AZ2.png").convert_alpha(),pygame.image.load("data/SaiyanAdultGohan/AZ3.png").convert_alpha(),pygame.image.load("data/SaiyanAdultGohan/AZ4.png").convert_alpha(),pygame.image.load("data/SaiyanAdultGohan/AZ5.png").convert_alpha(),pygame.image.load("data/SaiyanAdultGohan/AZ6.png").convert_alpha(),pygame.image.load("data/SaiyanAdultGohan/AZ6.png").convert_alpha()]
    SZ1=[pygame.image.load("data/SaiyanAdultGohan/AQ1.png").convert_alpha(),pygame.image.load("data/SaiyanAdultGohan/AQ2.png").convert_alpha(),pygame.image.load("data/SaiyanAdultGohan/AQ3.png").convert_alpha(),pygame.image.load("data/SaiyanAdultGohan/AQ4.png").convert_alpha()]
    SZ2=[pygame.image.load("data/SaiyanAdultGohan/AR1.png").convert_alpha(),pygame.image.load("data/SaiyanAdultGohan/AR2.png").convert_alpha()]
    SZ3=[pygame.image.load("data/SaiyanAdultGohan/AW3.png").convert_alpha(),pygame.image.load("data/SaiyanAdultGohan/AW4.png").convert_alpha(),pygame.image.load("data/SaiyanAdultGohan/AW1.png").convert_alpha(),pygame.image.load("data/SaiyanAdultGohan/AW2.png").convert_alpha()]
    SZ4=[pygame.image.load("data/SaiyanAdultGohan/AN1.png").convert_alpha(),pygame.image.load("data/SaiyanAdultGohan/AN2.png").convert_alpha(),pygame.image.load("data/SaiyanAdultGohan/AN3.png").convert_alpha(),pygame.image.load("data/SaiyanAdultGohan/AN4.png").convert_alpha()]
    SZ5=[pygame.image.load("data/SaiyanAdultGohan/AT1.png").convert_alpha(),pygame.image.load("data/SaiyanAdultGohan/AT2.png").convert_alpha(),pygame.image.load("data/SaiyanAdultGohan/AT3.png").convert_alpha(),pygame.image.load("data/SaiyanAdultGohan/AT4.png").convert_alpha()]
    SZ6=[pygame.image.load("data/SaiyanAdultGohan/AU1.png").convert_alpha(),pygame.image.load("data/SaiyanAdultGohan/AU2.png").convert_alpha()]
    SZ7=[pygame.image.load("data/SaiyanAdultGohan/AV1.png").convert_alpha(),pygame.image.load("data/SaiyanAdultGohan/AV2.png").convert_alpha()]
    SZ8=[pygame.image.load("data/SaiyanAdultGohan/AX1.png").convert_alpha(),pygame.image.load("data/SaiyanAdultGohan/AX2.png").convert_alpha(),pygame.image.load("data/SaiyanAdultGohan/AW1.png").convert_alpha(),pygame.image.load("data/SaiyanAdultGohan/AW2.png").convert_alpha(),pygame.image.load("data/SaiyanAdultGohan/AY1.png").convert_alpha(),pygame.image.load("data/SaiyanAdultGohan/AY2.png").convert_alpha()]
    SZ9=[pygame.image.load("data/SaiyanAdultGohan/AP1.png").convert_alpha(),pygame.image.load("data/SaiyanAdultGohan/AP2.png").convert_alpha()]
    SZ10=[pygame.image.load("data/SaiyanAdultGohan/AS1.png").convert_alpha(),pygame.image.load("data/SaiyanAdultGohan/AS2.png").convert_alpha()]
    SZ11=[pygame.image.load("data/SaiyanAdultGohan/AM1.png").convert_alpha(),pygame.image.load("data/SaiyanAdultGohan/AM2.png").convert_alpha(),pygame.image.load("data/SaiyanAdultGohan/AM3.png").convert_alpha(),pygame.image.load("data/SaiyanAdultGohan/AM4.png").convert_alpha()]
    SZ12=[pygame.image.load("data/SaiyanAdultGohan/AO1.png").convert_alpha(),pygame.image.load("data/SaiyanAdultGohan/AO2.png").convert_alpha()]
    SZ13=[pygame.image.load("data/SaiyanAdultGohan/AW3.png").convert_alpha(),pygame.image.load("data/SaiyanAdultGohan/AW4.png").convert_alpha(),pygame.image.load("data/SaiyanAdultGohan/AY3.png").convert_alpha(),pygame.image.load("data/SaiyanAdultGohan/AY4.png").convert_alpha()]
    SZ14=[pygame.image.load("data/SaiyanAdultGohan/AX3.png").convert_alpha(),pygame.image.load("data/SaiyanAdultGohan/AX3.png").convert_alpha(),pygame.image.load("data/SaiyanAdultGohan/AX4.png").convert_alpha(),pygame.image.load("data/SaiyanAdultGohan/AX4.png").convert_alpha(),pygame.image.load("data/SaiyanAdultGohan/AY4.png").convert_alpha(),pygame.image.load("data/SaiyanAdultGohan/AY4.png").convert_alpha()]
    
    def __init__(self,x,y,right,logo):
        self.x=x
        self.Base=y
        self.y=y
        self.width=None
        self.height=None
        self.health=None
        self.right=right
        self.logo=logo
        self.SS=0
        self.count=0
        self.stand=0
        self.move=0
        self.hit=0
        self.attack=0
        self.Attack=False
        self.EffectWork=False
        self.Effect=None
        self.Screen=None
        self.SUPER=None
        self.POWERX=x
        self.POWERY=y
        self.POWER=None
        self.POWERBLIT=True

        self.F3L=False
        self.F3R=False
        self.F4=False
        self.F5=False
        self.F6=False
        self.F7=False
        self.F8=False
        self.F9L=False # It include D10
        self.F9R=False # It include D10
        self.F11R=False # It include D10
        self.F11L=False # It include D10
        self.F12=False
        self.F13=False
        self.F14=False
        self.F15=False
        self.F16=False
        self.F17=False
        self.F18=False
        self.F19=False
        self.F20=False
        self.F21=False
        self.F22=False
        self.F23=False
        self.F24=False
        self.F25=False
        self.F26=False
        self.F27=False
        self.F28=False
        self.F29=False
        self.F30=False
        self.F31=False
        self.F32=False
        self.F33=False
        self.F34=False
        self.F35=False
        self.F36=False
        self.F37=False
        self.F38=False

        #HIT
        self.Z0=False
        self.Z1=False
        self.Z2=False
        self.Z3=False
        self.Z4=False
        self.Z5=False
        self.Z6=False
        self.Z7=False
        self.Z8=False
        self.Z9=False
        self.Z10=False
        self.Z11=False
        self.Z12=False
        self.Z13=False
        self.Z14=False

    def Direction(self,X):
        if self.x>X.x:
            self.right=False
        elif self.x<X.x:
            self.right=True

            
    def Battelfeild(self,win):
        win.blit(self.BG,(0,0))
    def Computer(self,X):
        pass
    def Control(self,keys):
        if keys[pygame.K_RSHIFT] and keys[pygame.K_RIGHT]:
            if self.count==0:
                self.F9R=True
                
        elif keys[pygame.K_RSHIFT] and keys[pygame.K_LEFT]:
            if self.count==0:
                self.F9L=True

        elif keys[pygame.K_LSHIFT] and keys[pygame.K_RIGHT]:
            if self.count==0:
                self.F11R=True

        elif keys[pygame.K_LSHIFT] and keys[pygame.K_LEFT]:
            if self.count==0:
                self.F11L=True
                
        elif keys[pygame.K_LEFT]:
            if self.count==0:
                self.F3L=True
    
        elif keys[pygame.K_RIGHT]:
            if self.count==0:
                self.F3R=True
            
        elif keys[pygame.K_a]:
            if self.count==0:
                self.F4=True

        elif keys[pygame.K_s]:
            if self.count==0:
                self.F5=True
            
        elif keys[pygame.K_d]:
            if self.count==0:
                self.F6=True
            
        elif keys[pygame.K_UP]:
            if self.count==0:
                self.F7=True

        elif keys[pygame.K_DOWN]:
            if self.count==0:
                self.F8=True

        elif keys[pygame.K_DOWN]:
            if self.count==0:
                self.F12=True
        
        elif keys[pygame.K_SPACE]:
            self.F12=True
            
    def draw(self,win,X):
        if self.logo:
            win.blit(self.Logo,(0,0))
            pygame.draw.rect(win,(255,255,255),(0,0,100,100),1)
            win.blit(self.Name,(110,0))
            win.blit(self.V,(620,40))
            win.blit(self.A,(640,40))

            pygame.draw.rect(win,(0,0,0),(100,40,500,30))
            pygame.draw.rect(win,(200,165,5),(100,40,500,30))
            pygame.draw.rect(win,(255,255,255),(100,40,500,30),1)
            
            pygame.draw.rect(win,(0,0,0),(100,70,250,30))
            pygame.draw.rect(win,(255,223,0),(100,70,250,30))
            pygame.draw.rect(win,(255,255,255),(100,70,250,30),1)
        else:
            win.blit(self.Logo,(1200,0))
            pygame.draw.rect(win,(255,255,255),(1200,0,100,100),1)
            win.blit(self.Name,(860,0))
            win.blit(self.S,(660,40))

            pygame.draw.rect(win,(0,0,0),(702,40,500,30))
            pygame.draw.rect(win,(200,165,5),(702,40,500,30))
            pygame.draw.rect(win,(255,255,255),(702,40,500,30),1)

            pygame.draw.rect(win,(0,0,0),(952,70,250,30))
            pygame.draw.rect(win,(255,223,0),(952,70,250,30))
            pygame.draw.rect(win,(255,255,255),(952,70,250,30),1)
            
        if self.F3L:
            self.Screen=self.SF3[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            if self.x>10:
                self.x-=2
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+ 1> 20:
                self.count=0
                self.F3L=False
                self.Direction(X)

        elif self.F3R:
            self.Screen=self.SF3[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            if self.x+97<1300:
                self.x+=2
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+ 1> 20:
                self.count=0
                self.F3R=False
                self.Direction(X)

        elif self.F4:
            self.Screen=self.SF4[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.count=0
                self.F4=False
                self.Direction(X)

        elif self.F5:
            self.y=330
            self.Screen=self.SF5[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.count=0
                self.y=300
                self.F5=False
                self.Direction(X)

        elif self.F6:
            self.Screen=self.SF6[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.count=0
                self.F6=False
                self.Direction(X)

        elif self.F7:
            if self.right and 1300 -(X.x+X.width)>97: # 97 self.widht
                if (self.x+97)>X.x-40 and  self.x<X.x+X.width+10  and self.count>18 and self.x+97 < 1300:
                    self.x+=50
            else:
                if X.x>97 :# 97 self.widht
                   if self.x<(X.x+X.width+40)and self.x+97>X.x-10 and self.count>18 and self.x > 20:
                        self.x-=50
                        
            if self.count<12 and self.count>4:
                self.y-=25
            self.Screen=self.SF7[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                if self.x+97>1300:
                    self.x=self.x-(self.x+97-1300)
                if self.x<10:
                    self.x=10
                self.count=0
                self.y=300
                self.F7=False
                self.Direction(X)


        elif self.F8:
            if self.count>8:
                self.y=360
            self.Screen=self.SF8[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.y=300
                self.count=0
                self.F8=False
                self.Direction(X)
                

        elif self.F9R: 
            if self.right:
                if self.x+135<X.x-20 and self.count>=8: #self.widht 135
                    self.x+=10
                    self.count=7
                self.Screen=self.SF9[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x+106<1300 and self.count>=4: # self.width 106
                    self.x+=10
                    self.count=3
                self.Screen=self.SF10[self.count//4]     
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.right:
                if self.count+1>12:
                    self.y=300
                    self.count=0
                    self.F9R=False
                    self.Direction(X)
            else:
                if self.count+1>8:
                    self.y=300
                    self.count=0
                    self.F9R=False
                    self.Direction(X)
    
            
        elif self.F9L:
            if self.right:
                if self.x>10 and self.count>=4:
                    self.x-=10
                    self.count=3
                self.Screen=self.SF10[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x>X.x+X.width+20 and self.count>=8:
                    self.x-=10
                    self.count=7
                self.Screen=self.SF9[self.count//4]
                
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.right:
                if self.count+1>8:
                    self.y=300
                    self.count=0
                    self.F9L=False
                    self.Direction(X)
            else:
                if self.count+1>12:
                    self.y=300
                    self.count=0
                    self.F9L=False
                    self.Direction(X)
                
            
        
        elif self.F11R:
            if self.right:
                if self.x+130<X.x-20 and self.count>=8: # SELF.WIDTH 130
                    self.x+=10
                    self.count=7
                self.Screen=self.SF11[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x+106<1300 and self.count>=4: # SELF.WIDTH 106
                    self.x+=10
                    self.count=3
                self.Screen=self.SF10[self.count//4]     
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.right:
                if self.count+1>16:
                        self.y=300
                        self.count=0
                        self.F11R=False
                        self.Direction(X)
            else:
                if self.count+1>8:
                        self.y=300
                        self.count=0
                        self.F11R=False
                        self.Direction(X)
                


        elif self.F11L:
            if self.right:
                if self.x>10 and self.count>=4:
                    self.x-=10
                    self.count=3
                self.Screen=self.SF10[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x>X.x+X.width+20 and self.count>=8:
                    self.x-=10
                    self.count=7
                self.Screen=self.SF11[self.count//4]
                
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.right:
                if self.count+1>8:
                    self.y=300
                    self.count=0
                    self.F11L=False
                    self.Direction(X)
            else:
                if self.count+1>16:
                    self.y=300
                    self.count=0
                    self.F11L=False
                    self.Direction(X)
                

        elif self.F12:
            self.SUPER=self.SE[self.SS//4]
            self.SUPER=pygame.transform.scale(self.SUPER,(300,280))
            self.Screen=self.SF12[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            win.blit(self.SUPER,(self.x-100,self.y-160))
            self.count+=1
            self.SS+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.SS+1>28:
                self.SS=0
            if self.count+1>16:
                self.y=self.Base
                self.count=0
                self.SS=0
                self.F12=False
                self.Direction(X)
        

        # hits        
        elif self.Z1:
            self.Screen=self.SZ1[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+77<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z1=False
                self.Direction(X)

        elif self.Z2:
            self.Screen=self.SZ2[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+95<1300:
                    self.x+=20
                
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z2=False
                self.Direction(X)

        elif self.Z3:
            self.Screen=self.SZ3[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+132<1300:
                    self.x+=20   
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z3=False
                self.Direction(X)
                

        elif self.Z4:
            self.Screen=self.SZ4[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+85<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z4=False
                self.Direction(X)

        elif self.Z5:
            self.Screen=self.SZ5[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+136<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z5=False
                self.Direction(X)
                

        elif self.Z6:
            self.y=self.Base+30
            self.Screen=self.SZ6[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+125<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z6=False
                self.Direction(X)

        elif self.Z7:
            self.y=self.Base+30
            self.Screen=self.SZ7[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+115<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z7=False
                self.Direction(X)

        elif self.Z8:
            self.Screen=self.SZ8[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=5
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+132<1300:
                    self.x+=5
            if self.y>100 and self.hit<20:
                self.y-=8
            if self.hit>20:
                self.y+=30
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>24:
                self.y=self.Base
                self.hit=0
                self.Z8=False
                self.Direction(X)
                
                

        elif self.Z9:
            self.Screen=self.SZ9[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+76<1300:
                    self.x+=20
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z9=False
                self.Direction(X)
                
                
        elif self.Z10:
            self.Screen=self.SZ10[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+85<1300:
                    self.x+=20
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z10=False
                self.Direction(X)

        elif self.Z11:
            self.Screen=self.SZ11[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+146<1300:
                    self.x+=20   
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z11=False
                self.Direction(X)

        elif self.Z12:
            self.Screen=self.SZ12[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+100<1300:
                    self.x+=20
                
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z12=False
                self.Direction(X)
        
        elif self.Z13:
            self.Screen=self.SZ13[self.hit//4]
            if self.right:
                if self.hit>8 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>8 and self.x+98<1300:
                    self.x+=15
                
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z13=False
                self.Direction(X)
                
        elif self.Z14:
            self.Screen=self.SZ14[self.hit//4]
            if self.right:
                if self.hit>4 and self.x>10:
                    self.x-=6
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>4 and self.x+92<1300:
                    self.x+=6
            if self.y>100 and self.hit<16:
                self.y-=5
            if self.hit>=16:
                self.y+=5
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>24:
                self.y=self.Base
                self.hit=0
                self.Z14=False
                self.Direction(X)
                
        elif self.Z0:
            if self.hit<20:
                self.y=self.Base+60
            elif self.hit==21:
                self.y=self.Base+30
            self.Screen=self.SZ0[self.hit//6]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>36:
                self.y=self.Base
                self.hit=0
                self.Z0=False
                self.Direction(X)


        else:
            self.Screen=self.Stand[self.stand//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.stand+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.stand+1 > 16:
                self.stand=0
                self.Direction(X)

#---------------------------------------------------------------------------------------------------------------------------------
class Raditz():
    BG=pygame.image.load("data/bg/spaceimg.png").convert_alpha()
    BG=pygame.transform.scale(BG,(1300,600))
    font=pygame.font.SysFont('calibri',40,True,True)
    Name=font.render("Raditz",1,(184,93,27))
    V=font.render("V",1,(184,93,27))
    A=font.render("/",1,(255,223,0))
    S=font.render("S",1,(184,93,27))
    Logo=pygame.image.load("data/Select/A7.png").convert_alpha()
    Logo=pygame.transform.scale(Logo,(100,100)) 
    SE=[pygame.image.load("data/Effects/A5.png").convert_alpha(),pygame.image.load("data/Effects/A6.png").convert_alpha(),pygame.image.load("data/Effects/A7.png").convert_alpha(),pygame.image.load("data/Effects/A8.png").convert_alpha(),pygame.image.load("data/Effects/A9.png").convert_alpha(),pygame.image.load("data/Effects/A10.png").convert_alpha(),pygame.image.load("data/Effects/A11.png").convert_alpha()]
    Stand=[pygame.image.load("data/Raditz/A1.png").convert_alpha(),pygame.image.load("data/Raditz/A2.png").convert_alpha(),pygame.image.load("data/Raditz/A3.png").convert_alpha(),pygame.image.load("data/Raditz/A4.png").convert_alpha(),pygame.image.load("data/Raditz/A5.png").convert_alpha(),pygame.image.load("data/Raditz/A6.png").convert_alpha()]
    SG3=[pygame.image.load("data/Raditz/C1.png").convert_alpha(),pygame.image.load("data/Raditz/C2.png").convert_alpha(),pygame.image.load("data/Raditz/C3.png").convert_alpha(),pygame.image.load("data/Raditz/C4.png").convert_alpha(),pygame.image.load("data/Raditz/C5.png").convert_alpha(),pygame.image.load("data/Raditz/C6.png").convert_alpha()]
    SG4=[pygame.image.load("data/Raditz/D1.png").convert_alpha(),pygame.image.load("data/Raditz/D2.png").convert_alpha(),pygame.image.load("data/Raditz/D3.png").convert_alpha(),pygame.image.load("data/Raditz/D3.png").convert_alpha(),pygame.image.load("data/Raditz/D3.png").convert_alpha(),pygame.image.load("data/Raditz/D3.png").convert_alpha()]
    SG5=[pygame.image.load("data/Raditz/E1.png").convert_alpha(),pygame.image.load("data/Raditz/E2.png").convert_alpha(),pygame.image.load("data/Raditz/E3.png").convert_alpha(),pygame.image.load("data/Raditz/E3.png").convert_alpha(),pygame.image.load("data/Raditz/E3.png").convert_alpha(),pygame.image.load("data/Raditz/E3.png").convert_alpha()]
    SG6=[pygame.image.load("data/Raditz/F1.png").convert_alpha(),pygame.image.load("data/Raditz/F2.png").convert_alpha(),pygame.image.load("data/Raditz/F3.png").convert_alpha(),pygame.image.load("data/Raditz/F3.png").convert_alpha(),pygame.image.load("data/Raditz/F3.png").convert_alpha(),pygame.image.load("data/Raditz/F3.png").convert_alpha()]
    SG7=[pygame.image.load("data/Raditz/G1.png").convert_alpha(),pygame.image.load("data/Raditz/G2.png").convert_alpha(),pygame.image.load("data/Raditz/G3.png").convert_alpha(),pygame.image.load("data/Raditz/G4.png").convert_alpha(),pygame.image.load("data/Raditz/G5.png").convert_alpha(),pygame.image.load("data/Raditz/G6.png").convert_alpha(),pygame.image.load("data/Raditz/G7.png").convert_alpha()]
    SG8=[pygame.image.load("data/Raditz/H1.png").convert_alpha(),pygame.image.load("data/Raditz/H2.png").convert_alpha(),pygame.image.load("data/Raditz/H3.png").convert_alpha(),pygame.image.load("data/Raditz/H3.png").convert_alpha(),pygame.image.load("data/Raditz/H3.png").convert_alpha(),pygame.image.load("data/Raditz/H3.png").convert_alpha()]
    SG9=[pygame.image.load("data/Raditz/I1.png").convert_alpha(),pygame.image.load("data/Raditz/I2.png").convert_alpha(),pygame.image.load("data/Raditz/I3.png").convert_alpha()]
    SG10=[pygame.image.load("data/Raditz/J1.png").convert_alpha(),pygame.image.load("data/Raditz/J2.png").convert_alpha(),pygame.image.load("data/Raditz/J3.png").convert_alpha()]
    SG11=[pygame.image.load("data/Raditz/K1.png").convert_alpha(),pygame.image.load("data/Raditz/K2.png").convert_alpha(),pygame.image.load("data/Raditz/K3.png").convert_alpha()]
    SG12=[pygame.image.load("data/Raditz/L1.png").convert_alpha(),pygame.image.load("data/Raditz/L2.png").convert_alpha(),pygame.image.load("data/Raditz/L3.png").convert_alpha(),pygame.image.load("data/Raditz/L4.png").convert_alpha()]

    SZ0=[pygame.image.load("data/Raditz/AZ1.png").convert_alpha(),pygame.image.load("data/Raditz/AZ2.png").convert_alpha(),pygame.image.load("data/Raditz/AZ3.png").convert_alpha(),pygame.image.load("data/Raditz/AZ4.png").convert_alpha(),pygame.image.load("data/Raditz/AZ5.png").convert_alpha(),pygame.image.load("data/Raditz/AZ6.png").convert_alpha(),pygame.image.load("data/Raditz/AZ7.png").convert_alpha(),pygame.image.load("data/Raditz/AZ7.png").convert_alpha()]
    SZ1=[pygame.image.load("data/Raditz/AQ1.png").convert_alpha(),pygame.image.load("data/Raditz/AQ2.png").convert_alpha(),pygame.image.load("data/Raditz/AQ3.png").convert_alpha(),pygame.image.load("data/Raditz/AQ4.png").convert_alpha()]
    SZ2=[pygame.image.load("data/Raditz/AR1.png").convert_alpha(),pygame.image.load("data/Raditz/AR2.png").convert_alpha()]
    SZ3=[pygame.image.load("data/Raditz/AW3.png").convert_alpha(),pygame.image.load("data/Raditz/AW4.png").convert_alpha(),pygame.image.load("data/Raditz/AW1.png").convert_alpha(),pygame.image.load("data/Raditz/AW2.png").convert_alpha()]
    SZ4=[pygame.image.load("data/Raditz/AN1.png").convert_alpha(),pygame.image.load("data/Raditz/AN2.png").convert_alpha(),pygame.image.load("data/Raditz/AN3.png").convert_alpha(),pygame.image.load("data/Raditz/AN4.png").convert_alpha()]
    SZ5=[pygame.image.load("data/Raditz/AT1.png").convert_alpha(),pygame.image.load("data/Raditz/AT2.png").convert_alpha(),pygame.image.load("data/Raditz/AT3.png").convert_alpha(),pygame.image.load("data/Raditz/AT4.png").convert_alpha()]
    SZ6=[pygame.image.load("data/Raditz/AU1.png").convert_alpha(),pygame.image.load("data/Raditz/AU2.png").convert_alpha()]
    SZ7=[pygame.image.load("data/Raditz/AV1.png").convert_alpha(),pygame.image.load("data/Raditz/AV2.png").convert_alpha()]
    SZ8=[pygame.image.load("data/Raditz/AX1.png").convert_alpha(),pygame.image.load("data/Raditz/AX2.png").convert_alpha(),pygame.image.load("data/Raditz/AW1.png").convert_alpha(),pygame.image.load("data/Raditz/AW2.png").convert_alpha(),pygame.image.load("data/Raditz/AY1.png").convert_alpha(),pygame.image.load("data/Raditz/AY2.png").convert_alpha()]
    SZ9=[pygame.image.load("data/Raditz/AP1.png").convert_alpha(),pygame.image.load("data/Raditz/AP2.png").convert_alpha()]
    SZ10=[pygame.image.load("data/Raditz/AS1.png").convert_alpha(),pygame.image.load("data/Raditz/AS2.png").convert_alpha()]
    SZ11=[pygame.image.load("data/Raditz/AM1.png").convert_alpha(),pygame.image.load("data/Raditz/AM2.png").convert_alpha(),pygame.image.load("data/Raditz/AM3.png").convert_alpha(),pygame.image.load("data/Raditz/AM4.png").convert_alpha()]
    SZ12=[pygame.image.load("data/Raditz/AO1.png").convert_alpha(),pygame.image.load("data/Raditz/AO2.png").convert_alpha()]
    SZ13=[pygame.image.load("data/Raditz/AW3.png").convert_alpha(),pygame.image.load("data/Raditz/AW4.png").convert_alpha(),pygame.image.load("data/Raditz/AY3.png").convert_alpha(),pygame.image.load("data/Raditz/AY4.png").convert_alpha()]
    SZ14=[pygame.image.load("data/Raditz/AX3.png").convert_alpha(),pygame.image.load("data/Raditz/AX3.png").convert_alpha(),pygame.image.load("data/Raditz/AX4.png").convert_alpha(),pygame.image.load("data/Raditz/AX4.png").convert_alpha(),pygame.image.load("data/Raditz/AY4.png").convert_alpha(),pygame.image.load("data/Raditz/AY4.png").convert_alpha()]
    
    def __init__(self,x,y,right,logo):
        self.x=x
        self.Base=y
        self.y=y
        self.width=None
        self.height=None
        self.health=None
        self.right=right
        self.logo=logo
        self.SS=0
        self.count=0
        self.stand=0
        self.move=0
        self.hit=0
        self.attack=0
        self.Attack=False
        self.EffectWork=False
        self.Effect=None
        self.Screen=None
        self.SUPER=None
        self.POWERX=x
        self.POWERY=y
        self.POWER=None
        self.POWERBLIT=True

        self.G3L=False
        self.G3R=False
        self.G4=False
        self.G5=False
        self.G6=False
        self.G7=False
        self.G8=False
        self.G9L=False # It include D10
        self.G9R=False # It include D10
        self.G11R=False # It include D10
        self.G11L=False # It include D10
        self.G12=False
        self.G13=False
        self.G14=False
        self.G15=False
        self.G16=False
        self.G17=False
        self.G18=False
        self.G19=False
        self.G20=False
        self.G21=False
        self.G22=False
        self.G23=False
        self.G24=False
        self.G25=False
        self.G26=False
        self.G27=False
        self.G28=False
        self.G29=False
        self.G30=False
        self.G31=False
        self.G32=False
        self.G33=False
        self.G34=False
        self.G35=False
        self.G36=False
        self.G37=False
        self.G38=False

        self.Z0=False
        self.Z1=False
        self.Z2=False
        self.Z3=False
        self.Z4=False
        self.Z5=False
        self.Z6=False
        self.Z7=False
        self.Z8=False
        self.Z9=False
        self.Z10=False
        self.Z11=False
        self.Z12=False
        self.Z13=False
        self.Z14=False
        
    def Direction(self,X):
        if self.x>X.x:
            self.right=False
        elif self.x<X.x:
            self.right=True
            
    def Battelfeild(self,win):
        win.blit(self.BG,(0,0))
    def Computer(self,X):
        pass
        
    def Control(self,keys):
        if keys[pygame.K_RSHIFT] and keys[pygame.K_RIGHT]:
            if self.count==0:
                self.G9R=True
                
        elif keys[pygame.K_RSHIFT] and keys[pygame.K_LEFT]:
            if self.count==0:
                self.G9L=True

        elif keys[pygame.K_LSHIFT] and keys[pygame.K_RIGHT]:
            if self.count==0:
                self.G11R=True

        elif keys[pygame.K_LSHIFT] and keys[pygame.K_LEFT]:
            if self.count==0:
                self.G11L=True
                
        elif keys[pygame.K_LEFT]:
            if self.count==0:
                self.G3L=True
    
        elif keys[pygame.K_RIGHT]:
            if self.count==0:
                self.G3R=True
            
        elif keys[pygame.K_a]:
            if self.count==0:
                self.G4=True

        elif keys[pygame.K_s]:
            if self.count==0:
                self.G5=True
            
        elif keys[pygame.K_d]:
            if self.count==0:
                self.G6=True
            
        elif keys[pygame.K_UP]:
            if self.count==0:
                self.G7=True

        elif keys[pygame.K_DOWN]:
            if self.count==0:
                self.G8=True

        elif keys[pygame.K_DOWN]:
            if self.count==0:
                self.G12=True
        
        elif keys[pygame.K_SPACE]:
                self.G12=True
            
    def draw(self,win,X):
        if self.logo:
            win.blit(self.Logo,(0,0))
            pygame.draw.rect(win,(255,255,255),(0,0,100,100),1)
            win.blit(self.Name,(110,0))
            win.blit(self.V,(620,40))
            win.blit(self.A,(640,40))

            pygame.draw.rect(win,(0,0,0),(100,40,500,30))
            pygame.draw.rect(win,(184,93,27),(100,40,500,30))
            pygame.draw.rect(win,(255,255,255),(100,40,500,30),1)

            pygame.draw.rect(win,(0,0,0),(100,70,250,30))
            pygame.draw.rect(win,(255,223,0),(100,70,250,30))
            pygame.draw.rect(win,(255,255,255),(100,70,250,30),1)
            
        else:
            win.blit(self.Logo,(1200,0))
            pygame.draw.rect(win,(255,255,255),(1200,0,100,100),1)
            win.blit(self.Name,(1080,0))
            win.blit(self.S,(660,40))

            pygame.draw.rect(win,(0,0,0),(702,40,500,30))
            pygame.draw.rect(win,(184,93,27),(702,40,500,30))
            pygame.draw.rect(win,(255,255,255),(702,40,500,30),1)

            pygame.draw.rect(win,(0,0,0),(952,70,250,30))
            pygame.draw.rect(win,(255,223,0),(952,70,250,30))
            pygame.draw.rect(win,(255,255,255),(952,70,250,30),1)



        if self.G3L:
            self.Screen=self.SG3[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            if self.x>10:
                self.x-=2
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+ 1> 24:
                self.count=0
                self.G3L=False
                self.Direction(X)

        elif self.G3R:
            self.Screen=self.SG3[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            if self.x+121<1300:
                self.x+=2
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+ 1> 24:
                self.count=0
                self.G3R=False
                self.Direction(X)

        elif self.G4:
            self.Screen=self.SG4[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.count=0
                self.G4=False
                self.Direction(X)

        elif self.G5:
            self.y=330
            self.Screen=self.SG5[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.count=0
                self.y=300
                self.G5=False
                self.Direction(X)

        elif self.G6:
            self.Screen=self.SG6[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.count=0
                self.G6=False
                self.Direction(X)

        elif self.G7:
            if self.right and 1300 -(X.x+X.width)>121: # 121 self.widht
                if (self.x+121)>X.x-40 and  self.x<X.x+X.width+10  and self.count>18 and self.x+121 < 1300:
                    self.x+=50
            else:
                if X.x>121 :# 121 self.widht
                   if self.x<(X.x+X.width+40)and self.x+121>X.x-10 and self.count>18 and self.x > 20:
                        self.x-=50
                        
            if self.count<12 and self.count>4:
                self.y-=25
            self.Screen=self.SG7[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>28:
                if self.x+121>1300:
                    self.x=self.x-(self.x+121-1300)
                if self.x<10:
                    self.x=10
                self.count=0
                self.y=300
                self.G7=False
                self.Direction(X)

        elif self.G8:
            if self.count>8:
                self.y=360
            self.Screen=self.SG8[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.y=300
                self.count=0
                self.G8=False
                self.Direction(X)

        elif self.G9R: 
            if self.right:
                if self.x+139<X.x-20 and self.count>=8: #self.widht 1
                    self.x+=10
                    self.count=7
                self.Screen=self.SG9[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x+108<1300 and self.count>=8: # self.width 108
                    self.x+=10
                    self.count=7
                self.Screen=self.SG10[self.count//4]     
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>12:
                self.y=300
                self.count=0
                self.G9R=False
                self.Direction(X)

        elif self.G9L:
            if self.right:
                if self.x>10 and self.count>=8:
                    self.x-=10
                    self.count=7
                self.Screen=self.SG10[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x>X.x+X.width+20 and self.count>=8:
                    self.x-=10
                    self.count=7
                self.Screen=self.SG9[self.count//4]
                
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>12:
                self.y=300
                self.count=0
                self.G9L=False
                self.Direction(X)
        
        elif self.G11R:
            if self.right:
                if self.x+169<X.x-20 and self.count>=8: # SELF.WIDTH 169
                    self.x+=10
                    self.count=7
                self.Screen=self.SG11[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x+108<1300 and self.count>=8: # SELF.WIDTH 108
                    self.x+=10
                    self.count=7
                self.Screen=self.SG10[self.count//4]     
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>12:
                    self.y=300
                    self.count=0
                    self.G11R=False
                    self.Direction(X) 
                


        elif self.G11L:
            if self.right:
                if self.x>10 and self.count>=8:
                    self.x-=10
                    self.count=7
                self.Screen=self.SG10[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x>X.x+X.width+20 and self.count>=8:
                    self.x-=10
                    self.count=7
                self.Screen=self.SG11[self.count//4]
                
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>12:
                    self.y=300
                    self.count=0
                    self.G11L=False
                    self.Direction(X)
                        
        elif self.G12:
            self.SUPER=self.SE[self.SS//4]
            self.SUPER=pygame.transform.scale(self.SUPER,(300,280))
            self.Screen=self.SG12[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            win.blit(self.SUPER,(self.x-100,self.y-160))
            self.count+=1
            self.SS+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.SS+1>28:
                self.SS=0
            if self.count+1>16:
                self.y=self.Base
                self.count=0
                self.SS=0
                self.G12=False
                self.Direction(X)
        
        #======================= HITS =========================

        elif self.Z1:
            self.Screen=self.SZ1[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+109<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z1=False
                self.Direction(X)

        elif self.Z2:
            self.Screen=self.SZ2[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+107<1300:
                    self.x+=20
                
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z2=False
                self.Direction(X)

        elif self.Z3:
            self.Screen=self.SZ3[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+158<1300:
                    self.x+=20   
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z3=False
                self.Direction(X)
                

        elif self.Z4:
            self.Screen=self.SZ4[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+135<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z4=False
                self.Direction(X)

        elif self.Z5:
            self.Screen=self.SZ5[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+135<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z5=False
                self.Direction(X)
                

        elif self.Z6:
            self.y=self.Base+30
            self.Screen=self.SZ6[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+137<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z6=False
                self.Direction(X)

        elif self.Z7:
            self.y=self.Base+30
            self.Screen=self.SZ7[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+139<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z7=False
                self.Direction(X)

        elif self.Z8:
            self.Screen=self.SZ8[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=5
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+133<1300:
                    self.x+=5
            if self.y>100 and self.hit<20:
                self.y-=8
            if self.hit>20:
                self.y+=30
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>24:
                self.y=self.Base
                self.hit=0
                self.Z8=False
                self.Direction(X)
                
                

        elif self.Z9:
            self.Screen=self.SZ9[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+127<1300:
                    self.x+=20
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z9=False
                self.Direction(X)
                
                
        elif self.Z10:
            self.Screen=self.SZ10[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+89<1300:
                    self.x+=20
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z10=False
                self.Direction(X)

        elif self.Z11:
            self.Screen=self.SZ11[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+148<1300:
                    self.x+=20   
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z11=False
                self.Direction(X)

        elif self.Z12:
            self.Screen=self.SZ12[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+139<1300:
                    self.x+=20
                
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z12=False
                self.Direction(X)
        
        elif self.Z13:
            self.Screen=self.SZ13[self.hit//4]
            if self.right:
                if self.hit>8 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>8 and self.x+158<1300:
                    self.x+=15
                
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z13=False
                self.Direction(X)
                
        elif self.Z14:
            self.Screen=self.SZ14[self.hit//4]
            if self.right:
                if self.hit>4 and self.x>10:
                    self.x-=6
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>4 and self.x+128<1300:
                    self.x+=6
            if self.y>100 and self.hit<16:
                self.y-=5
            if self.hit>=16:
                self.y+=5
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>24:
                self.y=self.Base
                self.hit=0
                self.Z14=False
                self.Direction(X)
                
        elif self.Z0:
            if self.hit<20:
                self.y=self.Base+60
            elif self.hit==21:
                self.y=self.Base+30
            elif self.hit==25:
                self.y=self.Base+20
            elif self.hit==30:
                self.y=self.Base
            self.Screen=self.SZ0[self.hit//6]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>48:
                self.y=self.Base
                self.hit=0
                self.Z0=False
                self.Direction(X)

        else:
            self.Screen=self.Stand[self.stand//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.stand+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.stand+1 > 24:
                self.stand=0
                self.Direction(X)

#---------------------------------------------------------------------------------------------------------------------------------
class Kid_Buu():
    BG=pygame.image.load("data/bg/spaceimg.png").convert_alpha()
    BG=pygame.transform.scale(BG,(1300,600))
    font=pygame.font.SysFont('calibri',40,True,True)
    Name=font.render("Kid Buu",1,(255,189,197))
    V=font.render("V",1,(255,189,197))
    A=font.render("/",1,(255,223,0))
    S=font.render("S",1,(255,189,197))
    Logo=pygame.image.load("data/Select/A12.png").convert_alpha()
    Logo=pygame.transform.scale(Logo,(100,100))
    SE=[pygame.image.load("data/Effects/A5.png").convert_alpha(),pygame.image.load("data/Effects/A6.png").convert_alpha(),pygame.image.load("data/Effects/A7.png").convert_alpha(),pygame.image.load("data/Effects/A8.png").convert_alpha(),pygame.image.load("data/Effects/A9.png").convert_alpha(),pygame.image.load("data/Effects/A10.png").convert_alpha(),pygame.image.load("data/Effects/A11.png").convert_alpha()]
    Stand=[pygame.image.load("data/Kid_Buu/A1.png").convert_alpha(),pygame.image.load("data/Kid_Buu/A2.png").convert_alpha(),pygame.image.load("data/Kid_Buu/A3.png").convert_alpha(),pygame.image.load("data/Kid_Buu/A4.png").convert_alpha()]
    SH3=[pygame.image.load("data/Kid_Buu/C1.png").convert_alpha(),pygame.image.load("data/Kid_Buu/C2.png").convert_alpha(),pygame.image.load("data/Kid_Buu/C3.png").convert_alpha(),pygame.image.load("data/Kid_Buu/C4.png").convert_alpha(),pygame.image.load("data/Kid_Buu/C5.png").convert_alpha(),pygame.image.load("data/Kid_Buu/C6.png").convert_alpha()]
    SH4=[pygame.image.load("data/Kid_Buu/F1.png").convert_alpha(),pygame.image.load("data/Kid_Buu/F2.png").convert_alpha(),pygame.image.load("data/Kid_Buu/F3.png").convert_alpha(),pygame.image.load("data/Kid_Buu/F3.png").convert_alpha(),pygame.image.load("data/Kid_Buu/F3.png").convert_alpha(),pygame.image.load("data/Kid_Buu/F3.png").convert_alpha()]
    SH5=[pygame.image.load("data/Kid_Buu/E1.png").convert_alpha(),pygame.image.load("data/Kid_Buu/E2.png").convert_alpha(),pygame.image.load("data/Kid_Buu/E3.png").convert_alpha(),pygame.image.load("data/Kid_Buu/E3.png").convert_alpha(),pygame.image.load("data/Kid_Buu/E3.png").convert_alpha(),pygame.image.load("data/Kid_Buu/E3.png").convert_alpha()]
    SH6=[pygame.image.load("data/Kid_Buu/F1.png").convert_alpha(),pygame.image.load("data/Kid_Buu/F2.png").convert_alpha(),pygame.image.load("data/Kid_Buu/F3.png").convert_alpha(),pygame.image.load("data/Kid_Buu/F3.png").convert_alpha(),pygame.image.load("data/Kid_Buu/F3.png").convert_alpha(),pygame.image.load("data/Kid_Buu/F3.png").convert_alpha()]
    SH7=[pygame.image.load("data/Kid_Buu/G1.png").convert_alpha(),pygame.image.load("data/Kid_Buu/G2.png").convert_alpha(),pygame.image.load("data/Kid_Buu/G3.png").convert_alpha(),pygame.image.load("data/Kid_Buu/G4.png").convert_alpha(),pygame.image.load("data/Kid_Buu/G5.png").convert_alpha(),pygame.image.load("data/Kid_Buu/G6.png").convert_alpha(),pygame.image.load("data/Kid_Buu/G7.png").convert_alpha(),pygame.image.load("data/Kid_Buu/G8.png").convert_alpha()]
    SH8=[pygame.image.load("data/Kid_Buu/H1.png").convert_alpha(),pygame.image.load("data/Kid_Buu/H2.png").convert_alpha(),pygame.image.load("data/Kid_Buu/H3.png").convert_alpha(),pygame.image.load("data/Kid_Buu/H3.png").convert_alpha(),pygame.image.load("data/Kid_Buu/H3.png").convert_alpha(),pygame.image.load("data/Kid_Buu/H3.png").convert_alpha()]
    SH9=[pygame.image.load("data/Kid_Buu/I1.png").convert_alpha(),pygame.image.load("data/Kid_Buu/I2.png").convert_alpha(),pygame.image.load("data/Kid_Buu/I3.png").convert_alpha(),pygame.image.load("data/Kid_Buu/I4.png").convert_alpha(),pygame.image.load("data/Kid_Buu/I5.png").convert_alpha(),pygame.image.load("data/Kid_Buu/I6.png").convert_alpha()]
    SH10=[pygame.image.load("data/Kid_Buu/J1.png").convert_alpha()]
    SH11=[pygame.image.load("data/Kid_Buu/K1.png").convert_alpha(),pygame.image.load("data/Kid_Buu/K2.png").convert_alpha()]
    SH12=[pygame.image.load("data/Kid_Buu/L1.png").convert_alpha(),pygame.image.load("data/Kid_Buu/L2.png").convert_alpha(),pygame.image.load("data/Kid_Buu/L3.png").convert_alpha(),pygame.image.load("data/Kid_Buu/L4.png").convert_alpha(),pygame.image.load("data/Kid_Buu/L5.png").convert_alpha()]

    SZ0=[pygame.image.load("data/Kid_Buu/AZ1.png").convert_alpha(),pygame.image.load("data/Kid_Buu/AZ2.png").convert_alpha(),pygame.image.load("data/Kid_Buu/AZ3.png").convert_alpha(),pygame.image.load("data/Kid_Buu/AZ4.png").convert_alpha(),pygame.image.load("data/Kid_Buu/AZ5.png").convert_alpha(),pygame.image.load("data/Kid_Buu/AZ6.png").convert_alpha(),pygame.image.load("data/Kid_Buu/AZ7.png").convert_alpha(),pygame.image.load("data/Kid_Buu/AZ8.png").convert_alpha()]
    SZ1=[pygame.image.load("data/Kid_Buu/AQ1.png").convert_alpha(),pygame.image.load("data/Kid_Buu/AQ2.png").convert_alpha(),pygame.image.load("data/Kid_Buu/AQ3.png").convert_alpha(),pygame.image.load("data/Kid_Buu/AQ4.png").convert_alpha()]
    SZ2=[pygame.image.load("data/Kid_Buu/AR1.png").convert_alpha(),pygame.image.load("data/Kid_Buu/AR2.png").convert_alpha()]
    SZ3=[pygame.image.load("data/Kid_Buu/AW3.png").convert_alpha(),pygame.image.load("data/Kid_Buu/AW4.png").convert_alpha(),pygame.image.load("data/Kid_Buu/AW1.png").convert_alpha(),pygame.image.load("data/Kid_Buu/AW2.png").convert_alpha()]
    SZ4=[pygame.image.load("data/Kid_Buu/AN1.png").convert_alpha(),pygame.image.load("data/Kid_Buu/AN2.png").convert_alpha(),pygame.image.load("data/Kid_Buu/AN3.png").convert_alpha(),pygame.image.load("data/Kid_Buu/AN4.png").convert_alpha()]
    SZ5=[pygame.image.load("data/Kid_Buu/AT1.png").convert_alpha(),pygame.image.load("data/Kid_Buu/AT2.png").convert_alpha(),pygame.image.load("data/Kid_Buu/AT3.png").convert_alpha(),pygame.image.load("data/Kid_Buu/AT4.png").convert_alpha()]
    SZ6=[pygame.image.load("data/Kid_Buu/AU1.png").convert_alpha(),pygame.image.load("data/Kid_Buu/AU2.png").convert_alpha()]
    SZ7=[pygame.image.load("data/Kid_Buu/AV1.png").convert_alpha(),pygame.image.load("data/Kid_Buu/AV2.png").convert_alpha()]
    SZ8=[pygame.image.load("data/Kid_Buu/AX1.png").convert_alpha(),pygame.image.load("data/Kid_Buu/AX2.png").convert_alpha(),pygame.image.load("data/Kid_Buu/AW1.png").convert_alpha(),pygame.image.load("data/Kid_Buu/AW2.png").convert_alpha(),pygame.image.load("data/Kid_Buu/AY1.png").convert_alpha(),pygame.image.load("data/Kid_Buu/AY2.png").convert_alpha()]
    SZ9=[pygame.image.load("data/Kid_Buu/AP1.png").convert_alpha(),pygame.image.load("data/Kid_Buu/AP2.png").convert_alpha()]
    SZ10=[pygame.image.load("data/Kid_Buu/AS1.png").convert_alpha(),pygame.image.load("data/Kid_Buu/AS2.png").convert_alpha()]
    SZ11=[pygame.image.load("data/Kid_Buu/AM1.png").convert_alpha(),pygame.image.load("data/Kid_Buu/AM2.png").convert_alpha(),pygame.image.load("data/Kid_Buu/AM3.png").convert_alpha(),pygame.image.load("data/Kid_Buu/AM4.png").convert_alpha()]
    SZ12=[pygame.image.load("data/Kid_Buu/AO1.png").convert_alpha(),pygame.image.load("data/Kid_Buu/AO2.png").convert_alpha()]
    SZ13=[pygame.image.load("data/Kid_Buu/AW3.png").convert_alpha(),pygame.image.load("data/Kid_Buu/AW4.png").convert_alpha(),pygame.image.load("data/Kid_Buu/AY3.png").convert_alpha(),pygame.image.load("data/Kid_Buu/AY4.png").convert_alpha()]
    SZ14=[pygame.image.load("data/Kid_Buu/AX3.png").convert_alpha(),pygame.image.load("data/Kid_Buu/AX3.png").convert_alpha(),pygame.image.load("data/Kid_Buu/AX4.png").convert_alpha(),pygame.image.load("data/Kid_Buu/AX4.png").convert_alpha(),pygame.image.load("data/Kid_Buu/AY4.png").convert_alpha(),pygame.image.load("data/Kid_Buu/AY4.png").convert_alpha()]
    
    def __init__(self,x,y,right,logo):
        self.x=x
        self.Base=y
        self.y=y
        self.width=None
        self.height=None
        self.health=None
        self.right=right
        self.logo=logo
        self.SS=0
        self.count=0
        self.stand=0
        self.move=0
        self.hit=0
        self.attack=0
        self.Attack=False
        self.EffectWork=False
        self.Effect=None
        self.Screen=None
        self.SUPER=None
        self.POWERX=x
        self.POWERY=y
        self.POWER=None
        self.POWERBLIT=True

        self.H3L=False
        self.H3R=False
        self.H4=False
        self.H5=False
        self.H6=False
        self.H7=False
        self.H8=False
        self.H9L=False # It include D10
        self.H9R=False # It include D10
        self.H11R=False # It include D10
        self.H11L=False # It include D10
        self.H12=False
        self.H13=False
        self.H14=False
        self.H15=False
        self.H16=False
        self.H17=False
        self.H18=False
        self.H19=False
        self.H20=False
        self.H21=False
        self.H22=False
        self.H23=False
        self.H24=False
        self.H25=False
        self.H26=False
        self.H27=False
        self.H28=False
        self.H29=False
        self.H30=False
        self.H31=False
        self.H32=False
        self.H33=False
        self.H34=False
        self.H35=False
        self.H36=False
        self.H37=False
        self.H38=False

        self.Z0=False
        self.Z1=False
        self.Z2=False
        self.Z3=False
        self.Z4=False
        self.Z5=False
        self.Z6=False
        self.Z7=False
        self.Z8=False
        self.Z9=False
        self.Z10=False
        self.Z11=False
        self.Z12=False
        self.Z13=False
        self.Z14=False

    def Direction(self,X):
        if self.x>X.x:
            self.right=False
        elif self.x<X.x:
            self.right=True
            
    def Battelfeild(self,win):
        win.blit(self.BG,(0,0))
    def Computer(self,X):
        pass
    def Control(self,keys):
        if keys[pygame.K_RSHIFT] and keys[pygame.K_RIGHT]:
            if self.count==0:
                self.H9R=True
                
        elif keys[pygame.K_RSHIFT] and keys[pygame.K_LEFT]:
            if self.count==0:
                self.H9L=True

        elif keys[pygame.K_LSHIFT] and keys[pygame.K_RIGHT]:
            if self.count==0:
                self.H11R=True

        elif keys[pygame.K_LSHIFT] and keys[pygame.K_LEFT]:
            if self.count==0:
                self.H11L=True
                
        elif keys[pygame.K_LEFT]:
            if self.count==0:
                self.H3L=True
    
        elif keys[pygame.K_RIGHT]:
            if self.count==0:
                self.H3R=True
            
        elif keys[pygame.K_a]:
            if self.count==0:
                self.H4=True

        elif keys[pygame.K_s]:
            if self.count==0:
                self.H5=True
            
        elif keys[pygame.K_d]:
            if self.count==0:
                self.H6=True
            
        elif keys[pygame.K_UP]:
            if self.count==0:
                self.H7=True

        elif keys[pygame.K_DOWN]:
            if self.count==0:
                self.H8=True

        elif keys[pygame.K_DOWN]:
            if self.count==0:
                self.H12=True
        
        elif keys[pygame.K_SPACE]:
                self.H12=True
            
    def draw(self,win,X):
        if self.logo:
            win.blit(self.Logo,(0,0))
            pygame.draw.rect(win,(255,255,255),(0,0,100,100),1)
            win.blit(self.Name,(110,0))
            win.blit(self.V,(620,40))
            win.blit(self.A,(640,40))

            pygame.draw.rect(win,(0,0,0),(100,40,500,30))
            pygame.draw.rect(win,(255,189,197),(100,40,500,30))
            pygame.draw.rect(win,(255,255,255),(100,40,500,30),1)

            pygame.draw.rect(win,(0,0,0),(100,70,250,30))
            pygame.draw.rect(win,(255,223,0),(100,70,250,30))
            pygame.draw.rect(win,(255,255,255),(100,70,250,30),1)
        else:
            win.blit(self.Logo,(1200,0))
            pygame.draw.rect(win,(255,255,255),(0,0,100,100),1)
            win.blit(self.Name,(1060,0))
            win.blit(self.S,(660,40))

            pygame.draw.rect(win,(0,0,0),(702,40,500,30))
            pygame.draw.rect(win,(255,189,197),(702,40,500,30))
            pygame.draw.rect(win,(255,255,255),(702,40,500,30),1)

            pygame.draw.rect(win,(0,0,0),(952,70,250,30))
            pygame.draw.rect(win,(255,223,0),(952,70,250,30))
            pygame.draw.rect(win,(255,255,255),(952,70,250,30),1)


        if self.H3L:
            self.Screen=self.SH3[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            if self.x>10:
                self.x-=2
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+ 1> 24:
                self.count=0
                self.H3L=False
                self.Direction(X)

        elif self.H3R:
            self.Screen=self.SH3[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            if self.x+73<1300:
                self.x+=2
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+ 1> 24:
                self.count=0
                self.H3R=False
                self.Direction(X)

        elif self.H4:
            self.Screen=self.SH4[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.count=0
                self.H4=False
                self.Direction(X)

        elif self.H5:
            self.y=330
            self.Screen=self.SH5[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.count=0
                self.y=300
                self.H5=False
                self.Direction(X)

        elif self.H6:
            self.Screen=self.SH6[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.count=0
                self.H6=False
                self.Direction(X)

        elif self.H7:
            if self.right and 1300 -(X.x+X.width)>73: # 73 self.widht
                if (self.x+73)>X.x-40 and  self.x<X.x+X.width+10  and self.count>18 and self.x+73 < 1300:
                    self.x+=50
            else:
                if X.x>73 :# 73 self.widht
                   if self.x<(X.x+X.width+40)and self.x+73>X.x-10 and self.count>18 and self.x > 20:
                        self.x-=50
                        
            if self.count<12 and self.count>4:
                self.y-=25
            self.Screen=self.SH7[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>32:
                if self.x+73>1300:
                    self.x=self.x-(self.x+73-1300)
                if self.x<10:
                    self.x=10
                self.count=0
                self.y=300
                self.H7=False
                self.Direction(X)


        elif self.H8:
            if self.count>8:
                self.y=360
            self.Screen=self.SH8[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.y=300
                self.count=0
                self.H8=False
                self.Direction(X)
                

        elif self.H9R: 
            if self.right:
                if self.x+88<X.x-20 and self.count>=12: #self.widht 88
                    self.x+=10
                    self.count=11
                self.Screen=self.SH9[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x+75<1300 and self.count>=3: # self.width 75
                    self.x+=10
                    self.count=2
                self.Screen=self.SH10[self.count//4]     
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.right:
                if self.count+1>24:
                    self.y=300
                    self.count=0
                    self.H9R=False
                    self.Direction(X)
            else:
                if self.count+1>4:
                    self.y=300
                    self.count=0
                    self.H9R=False
                    self.Direction(X)
    
            
        elif self.H9L:
            if self.right:
                if self.x>10 and self.count>=3:
                    self.x-=10
                    self.count=2
                self.Screen=self.SH10[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x>X.x+X.width+20 and self.count>=8:
                    self.x-=10
                    self.count=7
                self.Screen=self.SH9[self.count//4]
                
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.right:
                if self.count+1>4:
                    self.y=300
                    self.count=0
                    self.H9L=False
                    self.Direction(X)
            else:
                if self.count+1>24:
                    self.y=300
                    self.count=0
                    self.H9L=False
                    self.Direction(X)
                
            
        
        elif self.H11R:
            if self.right:
                if self.x+78<X.x-20 and self.count>=7: # SELF.WIDTH 78
                    self.x+=10
                    self.count=6
                self.Screen=self.SH11[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x+75<1300 and self.count>=3: # SELF.WIDTH 75
                    self.x+=10
                    self.count=2
                self.Screen=self.SH10[self.count//4]     
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.right:
                if self.count+1>8:
                        self.y=300
                        self.count=0
                        self.H11R=False
                        self.Direction(X)
            else:
                if self.count+1>4:
                        self.y=300
                        self.count=0
                        self.H11R=False
                        self.Direction(X)
                


        elif self.H11L:
            if self.right:
                if self.x>10 and self.count>=3:
                    self.x-=10
                    self.count=2
                self.Screen=self.SH10[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x>X.x+X.width+20 and self.count>=7:
                    self.x-=10
                    self.count=6
                self.Screen=self.SH11[self.count//4]
                
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.right:
                if self.count+1>4:
                    self.y=300
                    self.count=0
                    self.H11L=False
                    self.Direction(X)
            else:
                if self.count+1>8:
                    self.y=300
                    self.count=0
                    self.H11L=False
                    self.Direction(X)
                

        elif self.H12:
            self.SUPER=self.SE[self.SS//4]
            self.SUPER=pygame.transform.scale(self.SUPER,(300,280))
            self.Screen=self.SH12[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            win.blit(self.SUPER,(self.x-100,self.y-160))
            self.count+=1
            self.SS+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.SS+1>28:
                self.SS=0
            if self.count+1>20:
                self.y=self.Base
                self.count=0
                self.SS=0
                self.H12=False
                self.Direction(X)


        #======================= HITS =========================

        elif self.Z1:
            self.Screen=self.SZ1[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+67<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z1=False
                self.Direction(X)

        elif self.Z2:
            self.Screen=self.SZ2[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+68<1300:
                    self.x+=20
                
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z2=False
                self.Direction(X)

        elif self.Z3:
            self.Screen=self.SZ3[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+92<1300:
                    self.x+=20   
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z3=False
                self.Direction(X)
                

        elif self.Z4:
            self.Screen=self.SZ4[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+66<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z4=False
                self.Direction(X)

        elif self.Z5:
            self.Screen=self.SZ5[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+71<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z5=False
                self.Direction(X)
                

        elif self.Z6:
            self.y=self.Base+30
            self.Screen=self.SZ6[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+73<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z6=False
                self.Direction(X)

        elif self.Z7:
            self.y=self.Base+30
            self.Screen=self.SZ7[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+70<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z7=False
                self.Direction(X)

        elif self.Z8:
            self.Screen=self.SZ8[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=5
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+95<1300:
                    self.x+=5
            if self.y>100 and self.hit<20:
                self.y-=8
            if self.hit>20:
                self.y+=30
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>24:
                self.y=self.Base
                self.hit=0
                self.Z8=False
                self.Direction(X)
                
                

        elif self.Z9:
            self.Screen=self.SZ9[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+56<1300:
                    self.x+=20
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z9=False
                self.Direction(X)
                
                
        elif self.Z10:
            self.Screen=self.SZ10[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+60<1300:
                    self.x+=20
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z10=False
                self.Direction(X)

        elif self.Z11:
            self.Screen=self.SZ11[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+85<1300:
                    self.x+=20   
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z11=False
                self.Direction(X)

        elif self.Z12:
            self.Screen=self.SZ12[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+70<1300:
                    self.x+=20
                
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z12=False
                self.Direction(X)
        
        elif self.Z13:
            self.Screen=self.SZ13[self.hit//4]
            if self.right:
                if self.hit>8 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>8 and self.x+71<1300:
                    self.x+=15
                
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z13=False
                self.Direction(X)
                
        elif self.Z14:
            self.Screen=self.SZ14[self.hit//4]
            if self.right:
                if self.hit>4 and self.x>10:
                    self.x-=6
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>4 and self.x+72<1300:
                    self.x+=6
            if self.y>100 and self.hit<16:
                self.y-=5
            if self.hit>=16:
                self.y+=5
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>24:
                self.y=self.Base
                self.hit=0
                self.Z14=False
                self.Direction(X)
                
        elif self.Z0:
            if self.hit<20:
                self.y=self.Base+60
            elif self.hit==21:
                self.y=self.Base+30
            elif self.hit==25:
                self.y=self.Base+20
            elif self.hit==30:
                self.y=self.Base
            self.Screen=self.SZ0[self.hit//6]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>48:
                self.y=self.Base
                self.hit=0
                self.Z0=False
                self.Direction(X)

        else:
            self.Screen=self.Stand[self.stand//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.stand+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.stand+1 > 16:
                self.stand=0
                self.Direction(X)
        

#---------------------------------------------------------------------------------------------------------------------------------
class Goku_Blue():
    BG=pygame.image.load("data/bg/spaceimg.png").convert_alpha()
    BG=pygame.transform.scale(BG,(1300,600))
    font=pygame.font.SysFont('calibri',40,True,True)
    Name=font.render("Goku Blue",1,(5,188,204))
    V=font.render("V",1,(5,188,204))
    A=font.render("/",1,(255,223,0))
    S=font.render("S",1,(5,188,204))
    Logo=pygame.image.load("data/Select/A17.png").convert_alpha()
    Logo=pygame.transform.scale(Logo,(100,100))
    
    SE=[pygame.image.load("data/Effects/A1.png").convert_alpha(),pygame.image.load("data/Effects/A2.png").convert_alpha(),pygame.image.load("data/Effects/A3.png").convert_alpha(),pygame.image.load("data/Effects/A4.png").convert_alpha()]
    Stand=[pygame.image.load("data/Goku_Blue/A1.png").convert_alpha(),pygame.image.load("data/Goku_Blue/A2.png").convert_alpha(),pygame.image.load("data/Goku_Blue/A3.png").convert_alpha(),pygame.image.load("data/Goku_Blue/A4.png").convert_alpha()]
    SI3=[pygame.image.load("data/Goku_Blue/C1.png").convert_alpha(),pygame.image.load("data/Goku_Blue/C1.png").convert_alpha(),pygame.image.load("data/Goku_Blue/C1.png").convert_alpha(),pygame.image.load("data/Goku_Blue/C1.png").convert_alpha(),pygame.image.load("data/Goku_Blue/C1.png").convert_alpha(),pygame.image.load("data/Goku_Blue/C1.png").convert_alpha()]
    SI4=[pygame.image.load("data/Goku_Blue/D1.png").convert_alpha(),pygame.image.load("data/Goku_Blue/D2.png").convert_alpha(),pygame.image.load("data/Goku_Blue/D3.png").convert_alpha(),pygame.image.load("data/Goku_Blue/D3.png").convert_alpha(),pygame.image.load("data/Goku_Blue/D3.png").convert_alpha(),pygame.image.load("data/Goku_Blue/D3.png").convert_alpha()]
    SI5=[pygame.image.load("data/Goku_Blue/E1.png").convert_alpha(),pygame.image.load("data/Goku_Blue/E2.png").convert_alpha(),pygame.image.load("data/Goku_Blue/E3.png").convert_alpha(),pygame.image.load("data/Goku_Blue/E3.png").convert_alpha(),pygame.image.load("data/Goku_Blue/E3.png").convert_alpha(),pygame.image.load("data/Goku_Blue/E3.png").convert_alpha()]
    SI6=[pygame.image.load("data/Goku_Blue/F1.png").convert_alpha(),pygame.image.load("data/Goku_Blue/F2.png").convert_alpha(),pygame.image.load("data/Goku_Blue/F3.png").convert_alpha(),pygame.image.load("data/Goku_Blue/F3.png").convert_alpha(),pygame.image.load("data/Goku_Blue/F3.png").convert_alpha(),pygame.image.load("data/Goku_Blue/F3.png").convert_alpha()]
    SI7=[pygame.image.load("data/Goku_Blue/G1.png").convert_alpha(),pygame.image.load("data/Goku_Blue/G2.png").convert_alpha(),pygame.image.load("data/Goku_Blue/G3.png").convert_alpha(),pygame.image.load("data/Goku_Blue/G4.png").convert_alpha(),pygame.image.load("data/Goku_Blue/G5.png").convert_alpha(),pygame.image.load("data/Goku_Blue/G6.png").convert_alpha(),pygame.image.load("data/Goku_Blue/G7.png").convert_alpha(),pygame.image.load("data/Goku_Blue/G8.png").convert_alpha()]
    SI8=[pygame.image.load("data/Goku_Blue/H1.png").convert_alpha(),pygame.image.load("data/Goku_Blue/H2.png").convert_alpha(),pygame.image.load("data/Goku_Blue/H3.png").convert_alpha(),pygame.image.load("data/Goku_Blue/H3.png").convert_alpha(),pygame.image.load("data/Goku_Blue/H3.png").convert_alpha(),pygame.image.load("data/Goku_Blue/H3.png").convert_alpha()]
    SI9=[pygame.image.load("data/Goku_Blue/I1.png").convert_alpha(),pygame.image.load("data/Goku_Blue/I2.png").convert_alpha(),pygame.image.load("data/Goku_Blue/I3.png").convert_alpha()]
    SI10=[pygame.image.load("data/Goku_Blue/J1.png").convert_alpha(),pygame.image.load("data/Goku_Blue/J2.png").convert_alpha(),pygame.image.load("data/Goku_Blue/J3.png").convert_alpha()]
    SI11=[pygame.image.load("data/Goku_Blue/K1.png").convert_alpha(),pygame.image.load("data/Goku_Blue/K2.png").convert_alpha(),pygame.image.load("data/Goku_Blue/K3.png").convert_alpha()]
    SI12=[pygame.image.load("data/Goku_Blue/L1.png").convert_alpha(),pygame.image.load("data/Goku_Blue/L1.png").convert_alpha(),pygame.image.load("data/Goku_Blue/L1.png").convert_alpha(),pygame.image.load("data/Goku_Blue/L4.png").convert_alpha(),pygame.image.load("data/Goku_Blue/L5.png").convert_alpha()]

    SZ0=[pygame.image.load("data/Goku_Blue/AZ1.png").convert_alpha(),pygame.image.load("data/Goku_Blue/AZ2.png").convert_alpha(),pygame.image.load("data/Goku_Blue/AZ3.png").convert_alpha(),pygame.image.load("data/Goku_Blue/AZ4.png").convert_alpha(),pygame.image.load("data/Goku_Blue/AZ5.png").convert_alpha(),pygame.image.load("data/Goku_Blue/AZ6.png").convert_alpha(),pygame.image.load("data/Goku_Blue/AZ7.png").convert_alpha(),pygame.image.load("data/Goku_Blue/AZ7.png").convert_alpha()]
    SZ1=[pygame.image.load("data/Goku_Blue/AQ1.png").convert_alpha(),pygame.image.load("data/Goku_Blue/AQ2.png").convert_alpha(),pygame.image.load("data/Goku_Blue/AQ3.png").convert_alpha(),pygame.image.load("data/Goku_Blue/AQ4.png").convert_alpha()]
    SZ2=[pygame.image.load("data/Goku_Blue/AR1.png").convert_alpha(),pygame.image.load("data/Goku_Blue/AR2.png").convert_alpha()]
    SZ3=[pygame.image.load("data/Goku_Blue/AW3.png").convert_alpha(),pygame.image.load("data/Goku_Blue/AW4.png").convert_alpha(),pygame.image.load("data/Goku_Blue/AW1.png").convert_alpha(),pygame.image.load("data/Goku_Blue/AW2.png").convert_alpha()]
    SZ4=[pygame.image.load("data/Goku_Blue/AN1.png").convert_alpha(),pygame.image.load("data/Goku_Blue/AN2.png").convert_alpha(),pygame.image.load("data/Goku_Blue/AN3.png").convert_alpha(),pygame.image.load("data/Goku_Blue/AN4.png").convert_alpha()]
    SZ5=[pygame.image.load("data/Goku_Blue/AT1.png").convert_alpha(),pygame.image.load("data/Goku_Blue/AT2.png").convert_alpha(),pygame.image.load("data/Goku_Blue/AT3.png").convert_alpha(),pygame.image.load("data/Goku_Blue/AT4.png").convert_alpha()]
    SZ6=[pygame.image.load("data/Goku_Blue/AU1.png").convert_alpha(),pygame.image.load("data/Goku_Blue/AU2.png").convert_alpha()]
    SZ7=[pygame.image.load("data/Goku_Blue/AV1.png").convert_alpha(),pygame.image.load("data/Goku_Blue/AV2.png").convert_alpha()]
    SZ8=[pygame.image.load("data/Goku_Blue/AX1.png").convert_alpha(),pygame.image.load("data/Goku_Blue/AX2.png").convert_alpha(),pygame.image.load("data/Goku_Blue/AW1.png").convert_alpha(),pygame.image.load("data/Goku_Blue/AW2.png").convert_alpha(),pygame.image.load("data/Goku_Blue/AY1.png").convert_alpha(),pygame.image.load("data/Goku_Blue/AY2.png").convert_alpha()]
    SZ9=[pygame.image.load("data/Goku_Blue/AP1.png").convert_alpha(),pygame.image.load("data/Goku_Blue/AP2.png").convert_alpha()]
    SZ10=[pygame.image.load("data/Goku_Blue/AS1.png").convert_alpha(),pygame.image.load("data/Goku_Blue/AS2.png").convert_alpha()]
    SZ11=[pygame.image.load("data/Goku_Blue/AM1.png").convert_alpha(),pygame.image.load("data/Goku_Blue/AM2.png").convert_alpha(),pygame.image.load("data/Goku_Blue/AM3.png").convert_alpha(),pygame.image.load("data/Goku_Blue/AM4.png").convert_alpha()]
    SZ12=[pygame.image.load("data/Goku_Blue/AO1.png").convert_alpha(),pygame.image.load("data/Goku_Blue/AO2.png").convert_alpha()]
    SZ13=[pygame.image.load("data/Goku_Blue/AW3.png").convert_alpha(),pygame.image.load("data/Goku_Blue/AW4.png").convert_alpha(),pygame.image.load("data/Goku_Blue/AY3.png").convert_alpha(),pygame.image.load("data/Goku_Blue/AY4.png").convert_alpha()]
    SZ14=[pygame.image.load("data/Goku_Blue/AX3.png").convert_alpha(),pygame.image.load("data/Goku_Blue/AX3.png").convert_alpha(),pygame.image.load("data/Goku_Blue/AX4.png").convert_alpha(),pygame.image.load("data/Goku_Blue/AX4.png").convert_alpha(),pygame.image.load("data/Goku_Blue/AY4.png").convert_alpha(),pygame.image.load("data/Goku_Blue/AY4.png").convert_alpha()]
    
    def __init__(self,x,y,right,logo):
        self.x=x
        self.Base=y
        self.y=y
        self.width=None
        self.height=None
        self.health=None
        self.right=right
        self.logo=logo
        self.SS=0
        self.count=0
        self.stand=0
        self.move=0
        self.hit=0
        self.attack=0
        self.Attack=False
        self.EffectWork=False
        self.Effect=None
        self.Screen=None
        self.SUPER=None
        self.POWERX=x
        self.POWERY=y
        self.POWER=None
        self.POWERBLIT=True

        self.I3L=False
        self.I3R=False
        self.I4=False
        self.I5=False
        self.I6=False
        self.I7=False
        self.I8=False
        self.I9L=False # It include D10
        self.I9R=False # It include D10
        self.I11R=False # It include D10
        self.I11L=False # It include D10
        self.I12=False
        self.I13=False
        self.I14=False
        self.I15=False
        self.I16=False
        self.I17=False
        self.I18=False
        self.I19=False
        self.I20=False
        self.I21=False
        self.I22=False
        self.I23=False
        self.I24=False
        self.I25=False
        self.I26=False
        self.I27=False
        self.I28=False
        self.I29=False
        self.I30=False
        self.I31=False
        self.I32=False
        self.I33=False
        self.I34=False
        self.I35=False
        self.I36=False
        self.I37=False
        self.I38=False

        self.Z0=False
        self.Z1=False
        self.Z2=False
        self.Z3=False
        self.Z4=False
        self.Z5=False
        self.Z6=False
        self.Z7=False
        self.Z8=False
        self.Z9=False
        self.Z10=False
        self.Z11=False
        self.Z12=False
        self.Z13=False
        self.Z14=False

    def Direction(self,X):
        if self.x>X.x:
            self.right=False
        elif self.x<X.x:
            self.right=True
        
    def Battelfeild(self,win):
        win.blit(self.BG,(0,0))
    def Computer(self,X):
        pass
    def Control(self,keys):
        if keys[pygame.K_RSHIFT] and keys[pygame.K_RIGHT]:
            if self.count==0:
                self.I9R=True
                
        elif keys[pygame.K_RSHIFT] and keys[pygame.K_LEFT]:
            if self.count==0:
                self.I9L=True

        elif keys[pygame.K_LSHIFT] and keys[pygame.K_RIGHT]:
            if self.count==0:
                self.I11R=True

        elif keys[pygame.K_LSHIFT] and keys[pygame.K_LEFT]:
            if self.count==0:
                self.I11L=True
                
        elif keys[pygame.K_LEFT]:
            if self.count==0:
                self.I3L=True
    
        elif keys[pygame.K_RIGHT]:
            if self.count==0:
                self.I3R=True
            
        elif keys[pygame.K_a]:
            if self.count==0:
                self.I4=True

        elif keys[pygame.K_s]:
            if self.count==0:
                self.I5=True
            
        elif keys[pygame.K_d]:
            if self.count==0:
                self.I6=True
            
        elif keys[pygame.K_UP]:
            if self.count==0:
                self.I7=True

        elif keys[pygame.K_DOWN]:
            if self.count==0:
                self.I8=True

        elif keys[pygame.K_DOWN]:
            if self.count==0:
                self.I12=True
        
        elif keys[pygame.K_SPACE]:
                self.I12=True
    
    def draw(self,win,X):
        if self.logo:
            win.blit(self.Logo,(0,0))
            pygame.draw.rect(win,(255,255,255),(0,0,100,100),1)
            win.blit(self.Name,(110,0))
            win.blit(self.V,(620,40))
            win.blit(self.A,(640,40))

            pygame.draw.rect(win,(0,0,0),(100,40,500,30))
            pygame.draw.rect(win,(5,188,204),(100,40,500,30))
            pygame.draw.rect(win,(255,255,255),(100,40,500,30),1)

            pygame.draw.rect(win,(0,0,0),(100,70,250,30))
            pygame.draw.rect(win,(255,223,0),(100,70,250,30))
            pygame.draw.rect(win,(255,255,255),(100,70,250,30),1)
        else:
            win.blit(self.Logo,(1200,0))
            pygame.draw.rect(win,(255,255,255),(1200,0,100,100),1)
            win.blit(self.Name,(1020,0))
            win.blit(self.S,(660,40))

            pygame.draw.rect(win,(0,0,0),(702,40,500,30))
            pygame.draw.rect(win,(5,188,204),(702,40,500,30))
            pygame.draw.rect(win,(255,255,255),(702,40,500,30),1)

            pygame.draw.rect(win,(0,0,0),(952,70,250,30))
            pygame.draw.rect(win,(255,223,0),(952,70,250,30))
            pygame.draw.rect(win,(255,255,255),(952,70,250,30),1)

        if self.I3L:
            self.Screen=self.SI3[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            if self.x>10:
                self.x-=2
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+ 1> 24:
                self.count=0
                self.I3L=False
                self.Direction(X)

        elif self.I3R:
            self.Screen=self.SI3[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            if self.x+106<1300:
                self.x+=2
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+ 1> 24:
                self.count=0
                self.I3R=False
                self.Direction(X)

        elif self.I4:
            self.Screen=self.SI4[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.count=0
                self.I4=False
                self.Direction(X)

        elif self.I5:
            self.y=330
            self.Screen=self.SI5[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.count=0
                self.y=300
                self.I5=False
                self.Direction(X)

        elif self.I6:
            self.Screen=self.SI6[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.count=0
                self.I6=False
                self.Direction(X)

        elif self.I7:
            if self.right and 1300 -(X.x+X.width)>106: # 106 self.widht
                if (self.x+106)>X.x-40 and  self.x<X.x+X.width+10  and self.count>18 and self.x+106 < 1300:
                    self.x+=50
            else:
                if X.x>106 :# 106 self.widht
                   if self.x<(X.x+X.width+40)and self.x+106>X.x-10 and self.count>18 and self.x > 20:
                        self.x-=50
                        
            if self.count<12 and self.count>4:
                self.y-=25
            self.Screen=self.SI7[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>32:
                if self.x+106>1300:
                    self.x=self.x-(self.x+106-1300)
                if self.x<10:
                    self.x=10
                self.count=0
                self.y=300
                self.I7=False
                self.Direction(X)


        elif self.I8:
            if self.count>8:
                self.y=360
            self.Screen=self.SI8[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.y=300
                self.count=0
                self.I8=False
                self.Direction(X)

        elif self.I9R: 
            if self.right:
                if self.x+136<X.x-20 and self.count>=8: #self.widht 136
                    self.x+=10
                    self.count=7
                self.Screen=self.SI9[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x+106<1300 and self.count>=8: # self.width 108
                    self.x+=10
                    self.count=7
                self.Screen=self.SI10[self.count//4]     
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>12:
                self.y=300
                self.count=0
                self.I9R=False
                self.Direction(X)

        elif self.I9L:
            if self.right:
                if self.x>10 and self.count>=8:
                    self.x-=10
                    self.count=7
                self.Screen=self.SI10[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x>X.x+X.width+20 and self.count>=8:
                    self.x-=10
                    self.count=7
                self.Screen=self.SI9[self.count//4]
                
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>12:
                self.y=300
                self.count=0
                self.I9L=False
                self.Direction(X)
        
        elif self.I11R:
            if self.right:
                if self.x+165<X.x-20 and self.count>=8: # SELF.WIDTH 165
                    self.x+=10
                    self.count=7
                self.Screen=self.SI11[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x+106<1300 and self.count>=8: # SELF.WIDTH 106
                    self.x+=10
                    self.count=7
                self.Screen=self.SI10[self.count//4]     
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>12:
                    self.y=300
                    self.count=0
                    self.I11R=False
                    self.Direction(X) 
                


        elif self.I11L:
            if self.right:
                if self.x>10 and self.count>=8:
                    self.x-=10
                    self.count=7
                self.Screen=self.SI10[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x>X.x+X.width+20 and self.count>=8:
                    self.x-=10
                    self.count=7
                self.Screen=self.SI11[self.count//4]
                
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>12:
                    self.y=300
                    self.count=0
                    self.I11L=False
                    self.Direction(X)
                
        


        elif self.I12:
            self.SUPER=self.SE[self.SS//4]
            self.SUPER=pygame.transform.scale(self.SUPER,(300,280))
            self.Screen=self.SI12[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            win.blit(self.SUPER,(self.x-100,self.y-160))
            self.count+=1
            self.SS+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.SS+1>16:
                self.SS=0
            if self.count+1>20:
                self.y=self.Base
                self.count=0
                self.SS=0
                self.I12=False
                self.Direction(X)
        
        #======================= HITS =========================

        elif self.Z1:
            self.Screen=self.SZ1[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+99<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z1=False
                self.Direction(X)

        elif self.Z2:
            self.Screen=self.SZ2[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+90<1300:
                    self.x+=20
                
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z2=False
                self.Direction(X)

        elif self.Z3:
            self.Screen=self.SZ3[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+132<1300:
                    self.x+=20   
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z3=False
                self.Direction(X)
                

        elif self.Z4:
            self.Screen=self.SZ4[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+94<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z4=False
                self.Direction(X)

        elif self.Z5:
            self.Screen=self.SZ5[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+117<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z5=False
                self.Direction(X)
                

        elif self.Z6:
            self.y=self.Base+30
            self.Screen=self.SZ6[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+115<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z6=False
                self.Direction(X)

        elif self.Z7:
            self.y=self.Base+30
            self.Screen=self.SZ7[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+111<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z7=False
                self.Direction(X)

        elif self.Z8:
            self.Screen=self.SZ8[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=5
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+132<1300:
                    self.x+=5
            if self.y>100 and self.hit<20:
                self.y-=8
            if self.hit>20:
                self.y+=30
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>24:
                self.y=self.Base
                self.hit=0
                self.Z8=False
                self.Direction(X)
                
                

        elif self.Z9:
            self.Screen=self.SZ9[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+74<1300:
                    self.x+=20
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z9=False
                self.Direction(X)
                
                
        elif self.Z10:
            self.Screen=self.SZ10[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+78<1300:
                    self.x+=20
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z10=False
                self.Direction(X)

        elif self.Z11:
            self.Screen=self.SZ11[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+116<1300:
                    self.x+=20   
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z11=False
                self.Direction(X)

        elif self.Z12:
            self.Screen=self.SZ12[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+93<1300:
                    self.x+=20
                
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z12=False
                self.Direction(X)
        
        elif self.Z13:
            self.Screen=self.SZ13[self.hit//4]
            if self.right:
                if self.hit>8 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>8 and self.x+99<1300:
                    self.x+=15
                
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z13=False
                self.Direction(X)
                
        elif self.Z14:
            self.Screen=self.SZ14[self.hit//4]
            if self.right:
                if self.hit>4 and self.x>10:
                    self.x-=6
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>4 and self.x+92<1300:
                    self.x+=6
            if self.y>100 and self.hit<16:
                self.y-=5
            if self.hit>=16:
                self.y+=5
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>24:
                self.y=self.Base
                self.hit=0
                self.Z14=False
                self.Direction(X)
                
        elif self.Z0:
            if self.hit<20:
                self.y=self.Base+60
            elif self.hit==21:
                self.y=self.Base+30
            elif self.hit==25:
                self.y=self.Base+20
            elif self.hit==30:
                self.y=self.Base
            self.Screen=self.SZ0[self.hit//6]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>48:
                self.y=self.Base
                self.hit=0
                self.Z0=False
                self.Direction(X)

        else:
            self.Screen=self.Stand[self.stand//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.stand+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.stand+1 > 16:
                self.stand=0
                self.Direction(X)

#---------------------------------------------------------------------------------------------------------------------------------
class Broly():
    BG=pygame.image.load("data/bg/spaceimg.png").convert_alpha()
    BG=pygame.transform.scale(BG,(1300,600))
    font=pygame.font.SysFont('calibri',40,True,True)
    Name=font.render("Broly",1,(165,219,52))
    V=font.render("V",1,(165,219,52))
    A=font.render("/",1,(255,223,0))
    S=font.render("S",1,(165,219,52))
    Logo=pygame.image.load("data/Select/A22.png").convert_alpha()
    Logo=pygame.transform.scale(Logo,(100,100))
    SE=[pygame.image.load("data/Effects/A5.png").convert_alpha(),pygame.image.load("data/Effects/A6.png").convert_alpha(),pygame.image.load("data/Effects/A7.png").convert_alpha(),pygame.image.load("data/Effects/A8.png").convert_alpha(),pygame.image.load("data/Effects/A9.png").convert_alpha(),pygame.image.load("data/Effects/A10.png").convert_alpha(),pygame.image.load("data/Effects/A11.png").convert_alpha()]
    Stand=[pygame.image.load("data/Broly/A1.png").convert_alpha(),pygame.image.load("data/Broly/A2.png").convert_alpha(),pygame.image.load("data/Broly/A3.png").convert_alpha(),pygame.image.load("data/Broly/A4.png").convert_alpha(),pygame.image.load("data/Broly/A5.png").convert_alpha(),pygame.image.load("data/Broly/A6.png").convert_alpha(),pygame.image.load("data/Broly/A7.png").convert_alpha(),pygame.image.load("data/Broly/A8.png").convert_alpha(),pygame.image.load("data/Broly/A9.png").convert_alpha()]
    SJ2=[pygame.image.load("data/Broly/B1.png").convert_alpha(),pygame.image.load("data/Broly/B2.png").convert_alpha(),pygame.image.load("data/Broly/B3.png").convert_alpha(),pygame.image.load("data/Broly/B4.png").convert_alpha(),pygame.image.load("data/Broly/B5.png").convert_alpha(),pygame.image.load("data/Broly/B6.png").convert_alpha(),pygame.image.load("data/Broly/B7.png").convert_alpha(),pygame.image.load("data/Broly/B8.png").convert_alpha()]
    SJ3=[pygame.image.load("data/Broly/C1.png").convert_alpha(),pygame.image.load("data/Broly/C2.png").convert_alpha(),pygame.image.load("data/Broly/C3.png").convert_alpha(),pygame.image.load("data/Broly/C4.png").convert_alpha(),pygame.image.load("data/Broly/C5.png").convert_alpha(),pygame.image.load("data/Broly/C6.png").convert_alpha(),pygame.image.load("data/Broly/C7.png").convert_alpha(),pygame.image.load("data/Broly/C8.png").convert_alpha(),pygame.image.load("data/Broly/C9.png").convert_alpha(),pygame.image.load("data/Broly/C10.png").convert_alpha(),pygame.image.load("data/Broly/C11.png").convert_alpha(),pygame.image.load("data/Broly/C12.png").convert_alpha(),pygame.image.load("data/Broly/C13.png").convert_alpha()]
    SJ4=[pygame.image.load("data/Broly/D1.png").convert_alpha(),pygame.image.load("data/Broly/D2.png").convert_alpha(),pygame.image.load("data/Broly/D3.png").convert_alpha(),pygame.image.load("data/Broly/D3.png").convert_alpha(),pygame.image.load("data/Broly/D3.png").convert_alpha(),pygame.image.load("data/Broly/D3.png").convert_alpha()]
    SJ5=[pygame.image.load("data/Broly/E1.png").convert_alpha(),pygame.image.load("data/Broly/E2.png").convert_alpha(),pygame.image.load("data/Broly/E3.png").convert_alpha(),pygame.image.load("data/Broly/E3.png").convert_alpha(),pygame.image.load("data/Broly/E3.png").convert_alpha(),pygame.image.load("data/Broly/E3.png").convert_alpha()]
    SJ6=[pygame.image.load("data/Broly/F1.png").convert_alpha(),pygame.image.load("data/Broly/F2.png").convert_alpha(),pygame.image.load("data/Broly/F3.png").convert_alpha(),pygame.image.load("data/Broly/F3.png").convert_alpha(),pygame.image.load("data/Broly/F3.png").convert_alpha(),pygame.image.load("data/Broly/F3.png").convert_alpha()]
    SJ7=[pygame.image.load("data/Broly/G1.png").convert_alpha(),pygame.image.load("data/Broly/G2.png").convert_alpha(),pygame.image.load("data/Broly/G3.png").convert_alpha(),pygame.image.load("data/Broly/G4.png").convert_alpha(),pygame.image.load("data/Broly/G5.png").convert_alpha(),pygame.image.load("data/Broly/G6.png").convert_alpha(),pygame.image.load("data/Broly/G7.png").convert_alpha(),pygame.image.load("data/Broly/G8.png").convert_alpha()]
    SJ8=[pygame.image.load("data/Broly/H1.png").convert_alpha(),pygame.image.load("data/Broly/H2.png").convert_alpha(),pygame.image.load("data/Broly/H3.png").convert_alpha(),pygame.image.load("data/Broly/H3.png").convert_alpha(),pygame.image.load("data/Broly/H3.png").convert_alpha(),pygame.image.load("data/Broly/H3.png").convert_alpha()]
    SJ9=[pygame.image.load("data/Broly/I1.png").convert_alpha(),pygame.image.load("data/Broly/I2.png").convert_alpha(),pygame.image.load("data/Broly/I2.png").convert_alpha()]
    SJ10=[pygame.image.load("data/Broly/J1.png").convert_alpha(),pygame.image.load("data/Broly/J2.png").convert_alpha(),pygame.image.load("data/Broly/J3.png").convert_alpha()]
    SJ11=[pygame.image.load("data/Broly/K1.png").convert_alpha(),pygame.image.load("data/Broly/K2.png").convert_alpha(),pygame.image.load("data/Broly/K3.png").convert_alpha()]
    SJ12=[pygame.image.load("data/Broly/L1.png").convert_alpha(),pygame.image.load("data/Broly/L2.png").convert_alpha(),pygame.image.load("data/Broly/L3.png").convert_alpha()]

    SZ0=[pygame.image.load("data/Broly/AZ1.png").convert_alpha(),pygame.image.load("data/Broly/AZ2.png").convert_alpha(),pygame.image.load("data/Broly/AZ3.png").convert_alpha(),pygame.image.load("data/Broly/AZ4.png").convert_alpha(),pygame.image.load("data/Broly/AZ5.png").convert_alpha(),pygame.image.load("data/Broly/AZ6.png").convert_alpha(),pygame.image.load("data/Broly/AZ7.png").convert_alpha(),pygame.image.load("data/Broly/AZ7.png").convert_alpha()]
    SZ1=[pygame.image.load("data/Broly/AQ1.png").convert_alpha(),pygame.image.load("data/Broly/AQ2.png").convert_alpha(),pygame.image.load("data/Broly/AQ3.png").convert_alpha(),pygame.image.load("data/Broly/AQ4.png").convert_alpha()]
    SZ2=[pygame.image.load("data/Broly/AR1.png").convert_alpha(),pygame.image.load("data/Broly/AR2.png").convert_alpha()]
    SZ3=[pygame.image.load("data/Broly/AW3.png").convert_alpha(),pygame.image.load("data/Broly/AW4.png").convert_alpha(),pygame.image.load("data/Broly/AW1.png").convert_alpha(),pygame.image.load("data/Broly/AW2.png").convert_alpha()]
    SZ4=[pygame.image.load("data/Broly/AN1.png").convert_alpha(),pygame.image.load("data/Broly/AN2.png").convert_alpha(),pygame.image.load("data/Broly/AN3.png").convert_alpha(),pygame.image.load("data/Broly/AN4.png").convert_alpha()]
    SZ5=[pygame.image.load("data/Broly/AT1.png").convert_alpha(),pygame.image.load("data/Broly/AT2.png").convert_alpha(),pygame.image.load("data/Broly/AT3.png").convert_alpha(),pygame.image.load("data/Broly/AT4.png").convert_alpha()]
    SZ6=[pygame.image.load("data/Broly/AU1.png").convert_alpha(),pygame.image.load("data/Broly/AU2.png").convert_alpha()]
    SZ7=[pygame.image.load("data/Broly/AV1.png").convert_alpha(),pygame.image.load("data/Broly/AV2.png").convert_alpha()]
    SZ8=[pygame.image.load("data/Broly/AX1.png").convert_alpha(),pygame.image.load("data/Broly/AX2.png").convert_alpha(),pygame.image.load("data/Broly/AW1.png").convert_alpha(),pygame.image.load("data/Broly/AW2.png").convert_alpha(),pygame.image.load("data/Broly/AY1.png").convert_alpha(),pygame.image.load("data/Broly/AY2.png").convert_alpha()]
    SZ9=[pygame.image.load("data/Broly/AP1.png").convert_alpha(),pygame.image.load("data/Broly/AP2.png").convert_alpha()]
    SZ10=[pygame.image.load("data/Broly/AS1.png").convert_alpha(),pygame.image.load("data/Broly/AS2.png").convert_alpha()]
    SZ11=[pygame.image.load("data/Broly/AM1.png").convert_alpha(),pygame.image.load("data/Broly/AM2.png").convert_alpha(),pygame.image.load("data/Broly/AM3.png").convert_alpha(),pygame.image.load("data/Broly/AM4.png").convert_alpha()]
    SZ12=[pygame.image.load("data/Broly/AO1.png").convert_alpha(),pygame.image.load("data/Broly/AO2.png").convert_alpha()]
    SZ13=[pygame.image.load("data/Broly/AW3.png").convert_alpha(),pygame.image.load("data/Broly/AW4.png").convert_alpha(),pygame.image.load("data/Broly/AY3.png").convert_alpha(),pygame.image.load("data/Broly/AY4.png").convert_alpha()]
    SZ14=[pygame.image.load("data/Broly/AX3.png").convert_alpha(),pygame.image.load("data/Broly/AX3.png").convert_alpha(),pygame.image.load("data/Broly/AX4.png").convert_alpha(),pygame.image.load("data/Broly/AX4.png").convert_alpha(),pygame.image.load("data/Broly/AY4.png").convert_alpha(),pygame.image.load("data/Broly/AY4.png").convert_alpha()]
    def __init__(self,x,y,right,logo):

        self.x=x
        self.Base=y
        self.y=y
        self.width=None
        self.height=None
        self.health=None
        self.right=right
        self.logo=logo
        self.SS=0
        self.count=0
        self.stand=0
        self.move=0
        self.hit=0
        self.attack=0
        self.Attack=False
        self.EffectWork=False
        self.Effect=None
        self.Screen=None
        self.SUPER=None
        self.POWERX=x
        self.POWERY=y
        self.POWER=None
        self.POWERBLIT=True

        self.J3L=False
        self.J3R=False
        self.J4=False
        self.J5=False
        self.J6=False
        self.J7=False
        self.J8=False
        self.J9L=False # It include D10
        self.J9R=False # It include D10
        self.J11R=False # It include D10
        self.J11L=False # It include D10
        self.J12=False
        self.J13=False
        self.J14=False
        self.J15=False
        self.J16=False
        self.J17=False
        self.J18=False
        self.J19=False
        self.J20=False
        self.J21=False
        self.J22=False
        self.J23=False
        self.J24=False
        self.J25=False
        self.J26=False
        self.J27=False
        self.J28=False
        self.J29=False
        self.J30=False
        self.J31=False
        self.J32=False
        self.J33=False
        self.J34=False
        self.J35=False
        self.J36=False
        self.J37=False
        self.J38=False


        self.Z0=False
        self.Z1=False
        self.Z2=False
        self.Z3=False
        self.Z4=False
        self.Z5=False
        self.Z6=False
        self.Z7=False
        self.Z8=False
        self.Z9=False
        self.Z10=False
        self.Z11=False
        self.Z12=False
        self.Z13=False
        self.Z14=False
    def Direction(self,X):
        if self.x>X.x:
            self.right=False
        elif self.x<X.x:
            self.right=True
        
    def Battelfeild(self,win):
        win.blit(self.BG,(0,0))
    def Computer(self,X):
        pass
    def Control(self,keys):
        if keys[pygame.K_RSHIFT] and keys[pygame.K_RIGHT]:
            if self.count==0:
                self.J9R=True
                
        elif keys[pygame.K_RSHIFT] and keys[pygame.K_LEFT]:
            if self.count==0:
                self.J9L=True

        elif keys[pygame.K_LSHIFT] and keys[pygame.K_RIGHT]:
            if self.count==0:
                self.J11R=True

        elif keys[pygame.K_LSHIFT] and keys[pygame.K_LEFT]:
            if self.count==0:
                self.J11L=True
                
        elif keys[pygame.K_LEFT]:
            if self.count==0:
                self.J3L=True
    
        elif keys[pygame.K_RIGHT]:
            if self.count==0:
                self.J3R=True
            
        elif keys[pygame.K_a]:
            if self.count==0:
                self.J4=True

        elif keys[pygame.K_s]:
            if self.count==0:
                self.J5=True
            
        elif keys[pygame.K_d]:
            if self.count==0:
                self.J6=True
            
        elif keys[pygame.K_UP]:
            if self.count==0:
                self.J7=True

        elif keys[pygame.K_DOWN]:
            if self.count==0:
                self.J8=True

        elif keys[pygame.K_DOWN]:
            if self.count==0:
                self.J12=True
        
        elif keys[pygame.K_SPACE]:
                self.J12=True
    
    def draw(self,win,X):
        if self.logo:
            win.blit(self.Logo,(0,0))
            pygame.draw.rect(win,(255,255,255),(0,0,100,100),1)
            win.blit(self.Name,(110,0))
            win.blit(self.V,(620,40))
            win.blit(self.A,(640,40))

            pygame.draw.rect(win,(0,0,0),(100,40,500,30))
            pygame.draw.rect(win,(165,219,52),(100,40,500,30))
            pygame.draw.rect(win,(255,255,255),(100,40,500,30),1)

            pygame.draw.rect(win,(0,0,0),(100,70,250,30))
            pygame.draw.rect(win,(255,223,0),(100,70,250,30))
            pygame.draw.rect(win,(255,255,255),(100,70,250,30),1)
        else:
            win.blit(self.Logo,(1200,0))
            pygame.draw.rect(win,(255,255,255),(1200,0,100,100),1)
            win.blit(self.Name,(1100,0))
            win.blit(self.S,(660,40))

            pygame.draw.rect(win,(0,0,0),(702,40,500,30))
            pygame.draw.rect(win,(165,219,52),(702,40,500,30))
            pygame.draw.rect(win,(255,255,255),(702,40,500,30),1)
            
            pygame.draw.rect(win,(0,0,0),(952,70,250,30))
            pygame.draw.rect(win,(255,223,0),(952,70,250,30))
            pygame.draw.rect(win,(255,255,255),(952,70,250,30),1)

            
        if self.J3L:
            self.Screen=self.SJ3[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            if self.x>10:
                self.x-=1
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+ 1> 52:
                self.count=0
                self.J3L=False
                self.Direction(X)

        elif self.J3R:
            self.Screen=self.SJ3[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            if self.x+118<1300:
                self.x+=1
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+ 1> 52:
                self.count=0
                self.J3R=False
                self.Direction(X)

        elif self.J4:
            self.Screen=self.SJ4[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.count=0
                self.J4=False
                self.Direction(X)

        elif self.J5:
            self.y=330
            self.Screen=self.SJ5[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.count=0
                self.y=300
                self.J5=False
                self.Direction(X)

        elif self.J6:
            self.Screen=self.SJ6[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.count=0
                self.J6=False
                self.Direction(X)

        elif self.J7:
            if self.right and 1300 -(X.x+X.width)>118: # 118 self.widht
                if (self.x+118)>X.x-40 and  self.x<X.x+X.width+10  and self.count>18 and self.x+118 < 1300:
                    self.x+=50
            else:
                if X.x>118 :# 118 self.widht
                   if self.x<(X.x+X.width+40)and self.x+118>X.x-10 and self.count>18 and self.x > 20:
                        self.x-=50
                        
            if self.count<12 and self.count>4:
                self.y-=25
            self.Screen=self.SJ7[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>32:
                if self.x+118>1300:
                    self.x=self.x-(self.x+106-1300)
                if self.x<10:
                    self.x=10
                self.count=0
                self.y=300
                self.J7=False
                self.Direction(X)

        elif self.J8:
            if self.count>8:
                self.y=360
            self.Screen=self.SJ8[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.y=300
                self.count=0
                self.J8=False
                self.Direction(X)

        elif self.J9R: 
            if self.right:
                if self.x+174<X.x-20 and self.count>=8: #self.widht 174
                    self.x+=10
                    self.count=7
                self.Screen=self.SJ9[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x+140<1300 and self.count>=8: # self.width 140
                    self.x+=10
                    self.count=7
                self.Screen=self.SJ10[self.count//4]     
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>12:
                self.y=300
                self.count=0
                self.J9R=False
                self.Direction(X)

        elif self.J9L:
            if self.right:
                if self.x>10 and self.count>=8:
                    self.x-=10
                    self.count=7
                self.Screen=self.SJ10[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x>X.x+X.width+20 and self.count>=8:
                    self.x-=10
                    self.count=7
                self.Screen=self.SJ9[self.count//4]
                
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>12:
                self.y=300
                self.count=0
                self.J9L=False
                self.Direction(X)
        
        elif self.J11R:
            if self.right:
                if self.x+173<X.x-20 and self.count>=8: # SELF.WIDTH 173
                    self.x+=10
                    self.count=7
                self.Screen=self.SJ11[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x+140<1300 and self.count>=8: # SELF.WIDTH 140
                    self.x+=10
                    self.count=7
                self.Screen=self.SJ10[self.count//4]     
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>12:
                    self.y=300
                    self.count=0
                    self.J11R=False
                    self.Direction(X) 
                


        elif self.J11L:
            if self.right: 
                if self.x>10 and self.count>=8:
                    self.x-=10
                    self.count=7
                self.Screen=self.SJ10[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x>X.x+X.width+20 and self.count>=8:
                    self.x-=10
                    self.count=7
                self.Screen=self.SJ11[self.count//4]
                
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>12:
                    self.y=300
                    self.count=0
                    self.J11L=False
                    self.Direction(X)
                
        


        elif self.J12:
            self.SUPER=self.SE[self.SS//4]
            self.SUPER=pygame.transform.scale(self.SUPER,(300,280))
            self.Screen=self.SJ12[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            win.blit(self.SUPER,(self.x-100,self.y-160))
            self.count+=1
            self.SS+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.SS+1>28:
                self.SS=0
            if self.count+1>12:
                self.y=self.Base
                self.count=0
                self.SS=0
                self.J12=False
                self.Direction(X)
        
        #======================= HITS =========================

        elif self.Z1:
            self.Screen=self.SZ1[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+131<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z1=False
                self.Direction(X)

        elif self.Z2:
            self.Screen=self.SZ2[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+141<1300:
                    self.x+=20
                
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z2=False
                self.Direction(X)

        elif self.Z3:
            self.Screen=self.SZ3[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+184<1300:
                    self.x+=20   
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z3=False
                self.Direction(X)
                

        elif self.Z4:
            self.Screen=self.SZ4[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+135<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z4=False
                self.Direction(X)

        elif self.Z5:
            self.Screen=self.SZ5[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+153<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z5=False
                self.Direction(X)
                

        elif self.Z6:
            self.y=self.Base+30
            self.Screen=self.SZ6[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+160<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z6=False
                self.Direction(X)

        elif self.Z7:
            self.y=self.Base+30
            self.Screen=self.SZ7[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+161<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z7=False
                self.Direction(X)

        elif self.Z8:
            self.Screen=self.SZ8[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=5
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+184<1300:
                    self.x+=5
            if self.y>100 and self.hit<20:
                self.y-=8
            if self.hit>20:
                self.y+=30
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>24:
                self.y=self.Base
                self.hit=0
                self.Z8=False
                self.Direction(X)
                
                

        elif self.Z9:
            self.Screen=self.SZ9[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+109<1300:
                    self.x+=20
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z9=False
                self.Direction(X)
                
                
        elif self.Z10:
            self.Screen=self.SZ10[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+126<1300:
                    self.x+=20
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z10=False
                self.Direction(X)

        elif self.Z11:
            self.Screen=self.SZ11[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+171<1300:
                    self.x+=20   
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z11=False
                self.Direction(X)

        elif self.Z12:
            self.Screen=self.SZ12[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+152<1300:
                    self.x+=20
                
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z12=False
                self.Direction(X)
        
        elif self.Z13:
            self.Screen=self.SZ13[self.hit//4]
            if self.right:
                if self.hit>8 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>8 and self.x+138<1300:
                    self.x+=15
                
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z13=False
                self.Direction(X)
                
        elif self.Z14:
            self.Screen=self.SZ14[self.hit//4]
            if self.right:
                if self.hit>4 and self.x>10:
                    self.x-=6
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>4 and self.x+130<1300:
                    self.x+=6
            if self.y>100 and self.hit<16:
                self.y-=5
            if self.hit>=16:
                self.y+=5
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>24:
                self.y=self.Base
                self.hit=0
                self.Z14=False
                self.Direction(X)
                
        elif self.Z0:
            if self.hit<20:
                self.y=self.Base+60
            elif self.hit==21:
                self.y=self.Base+30
            elif self.hit==25:
                self.y=self.Base+20
            elif self.hit==30:
                self.y=self.Base
            self.Screen=self.SZ0[self.hit//6]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>48:
                self.y=self.Base
                self.hit=0
                self.Z0=False
                self.Direction(X)

        else:
            self.Screen=self.Stand[self.stand//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.stand+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.stand+1 > 36:
                self.stand=0
                self.Direction(X)
        

#---------------------------------------------------------------------------------------------------------------------------------
class Vegeta():
    BG=pygame.image.load("data/bg/spaceimg.png").convert_alpha()
    BG=pygame.transform.scale(BG,(1300,600))
    font=pygame.font.SysFont('calibri',40,True,True)
    Name=font.render("Vegeta",1,(23,82,169))
    V=font.render("V",1,(23,82,169))
    A=font.render("/",1,(255,223,0))
    S=font.render("S",1,(23,82,169))
    Logo=pygame.image.load("data/Select/A3.png").convert_alpha()
    Logo=pygame.transform.scale(Logo,(100,100))
    SE=[pygame.image.load("data/Effects/A5.png").convert_alpha(),pygame.image.load("data/Effects/A6.png").convert_alpha(),pygame.image.load("data/Effects/A7.png").convert_alpha(),pygame.image.load("data/Effects/A8.png").convert_alpha(),pygame.image.load("data/Effects/A9.png").convert_alpha(),pygame.image.load("data/Effects/A10.png").convert_alpha(),pygame.image.load("data/Effects/A11.png").convert_alpha()]
    Stand=[pygame.image.load("data/Vegeta/A1.png").convert_alpha(),pygame.image.load("data/Vegeta/A2.png").convert_alpha(),pygame.image.load("data/Vegeta/A3.png").convert_alpha(),pygame.image.load("data/Vegeta/A4.png").convert_alpha()]
    SK3=[pygame.image.load("data/Vegeta/C1.png").convert_alpha(),pygame.image.load("data/Vegeta/C2.png").convert_alpha(),pygame.image.load("data/Vegeta/C3.png").convert_alpha(),pygame.image.load("data/Vegeta/C4.png").convert_alpha(),pygame.image.load("data/Vegeta/C5.png").convert_alpha(),pygame.image.load("data/Vegeta/C6.png").convert_alpha()]
    SK4=[pygame.image.load("data/Vegeta/D1.png").convert_alpha(),pygame.image.load("data/Vegeta/D2.png").convert_alpha(),pygame.image.load("data/Vegeta/D3.png").convert_alpha(),pygame.image.load("data/Vegeta/D3.png").convert_alpha(),pygame.image.load("data/Vegeta/D3.png").convert_alpha(),pygame.image.load("data/Vegeta/D3.png").convert_alpha()]
    SK5=[pygame.image.load("data/Vegeta/E1.png").convert_alpha(),pygame.image.load("data/Vegeta/E2.png").convert_alpha(),pygame.image.load("data/Vegeta/E3.png").convert_alpha(),pygame.image.load("data/Vegeta/E3.png").convert_alpha(),pygame.image.load("data/Vegeta/E3.png").convert_alpha(),pygame.image.load("data/Vegeta/E3.png").convert_alpha()]
    SK6=[pygame.image.load("data/Vegeta/F1.png").convert_alpha(),pygame.image.load("data/Vegeta/F2.png").convert_alpha(),pygame.image.load("data/Vegeta/F3.png").convert_alpha(),pygame.image.load("data/Vegeta/F3.png").convert_alpha(),pygame.image.load("data/Vegeta/F3.png").convert_alpha(),pygame.image.load("data/Vegeta/F3.png").convert_alpha()]
    SK7=[pygame.image.load("data/Vegeta/G1.png").convert_alpha(),pygame.image.load("data/Vegeta/G2.png").convert_alpha(),pygame.image.load("data/Vegeta/G3.png").convert_alpha(),pygame.image.load("data/Vegeta/G4.png").convert_alpha(),pygame.image.load("data/Vegeta/G5.png").convert_alpha(),pygame.image.load("data/Vegeta/G6.png").convert_alpha(),pygame.image.load("data/Vegeta/G7.png").convert_alpha()]
    SK8=[pygame.image.load("data/Vegeta/H1.png").convert_alpha(),pygame.image.load("data/Vegeta/H2.png").convert_alpha(),pygame.image.load("data/Vegeta/H3.png").convert_alpha(),pygame.image.load("data/Vegeta/H3.png").convert_alpha(),pygame.image.load("data/Vegeta/H3.png").convert_alpha(),pygame.image.load("data/Vegeta/H3.png").convert_alpha()]
    SK9=[pygame.image.load("data/Vegeta/I1.png").convert_alpha(),pygame.image.load("data/Vegeta/I2.png").convert_alpha(),pygame.image.load("data/Vegeta/I3.png").convert_alpha()]
    SK10=[pygame.image.load("data/Vegeta/J1.png").convert_alpha(),pygame.image.load("data/Vegeta/J2.png").convert_alpha(),pygame.image.load("data/Vegeta/J3.png").convert_alpha()]
    SK11=[pygame.image.load("data/Vegeta/K1.png").convert_alpha(),pygame.image.load("data/Vegeta/K2.png").convert_alpha(),pygame.image.load("data/Vegeta/K3.png").convert_alpha(),pygame.image.load("data/Vegeta/K4.png").convert_alpha()]
    SK12=[pygame.image.load("data/Vegeta/L1.png").convert_alpha(),pygame.image.load("data/Vegeta/L2.png").convert_alpha(),pygame.image.load("data/Vegeta/L3.png").convert_alpha(),pygame.image.load("data/Vegeta/L4.png").convert_alpha(),pygame.image.load("data/Vegeta/L5.png").convert_alpha(),pygame.image.load("data/Vegeta/L6.png").convert_alpha(),pygame.image.load("data/Vegeta/L7.png").convert_alpha()]

    SZ0=[pygame.image.load("data/Vegeta/AZ1.png").convert_alpha(),pygame.image.load("data/Vegeta/AZ2.png").convert_alpha(),pygame.image.load("data/Vegeta/AZ3.png").convert_alpha(),pygame.image.load("data/Vegeta/AZ4.png").convert_alpha(),pygame.image.load("data/Vegeta/AZ5.png").convert_alpha(),pygame.image.load("data/Vegeta/AZ6.png").convert_alpha(),pygame.image.load("data/Vegeta/AZ7.png").convert_alpha(),pygame.image.load("data/Vegeta/AZ8.png").convert_alpha()]
    SZ1=[pygame.image.load("data/Vegeta/AQ1.png").convert_alpha(),pygame.image.load("data/Vegeta/AQ2.png").convert_alpha(),pygame.image.load("data/Vegeta/AQ3.png").convert_alpha(),pygame.image.load("data/Vegeta/AQ4.png").convert_alpha()]
    SZ2=[pygame.image.load("data/Vegeta/AR1.png").convert_alpha(),pygame.image.load("data/Vegeta/AR2.png").convert_alpha()]
    SZ3=[pygame.image.load("data/Vegeta/AW3.png").convert_alpha(),pygame.image.load("data/Vegeta/AW4.png").convert_alpha(),pygame.image.load("data/Vegeta/AW1.png").convert_alpha(),pygame.image.load("data/Vegeta/AW2.png").convert_alpha()]
    SZ4=[pygame.image.load("data/Vegeta/AN1.png").convert_alpha(),pygame.image.load("data/Vegeta/AN2.png").convert_alpha(),pygame.image.load("data/Vegeta/AN3.png").convert_alpha(),pygame.image.load("data/Vegeta/AN4.png").convert_alpha()]
    SZ5=[pygame.image.load("data/Vegeta/AT1.png").convert_alpha(),pygame.image.load("data/Vegeta/AT2.png").convert_alpha(),pygame.image.load("data/Vegeta/AT3.png").convert_alpha(),pygame.image.load("data/Vegeta/AT4.png").convert_alpha()]
    SZ6=[pygame.image.load("data/Vegeta/AU1.png").convert_alpha(),pygame.image.load("data/Vegeta/AU2.png").convert_alpha()]
    SZ7=[pygame.image.load("data/Vegeta/AV1.png").convert_alpha(),pygame.image.load("data/Vegeta/AV2.png").convert_alpha()]
    SZ8=[pygame.image.load("data/Vegeta/AX1.png").convert_alpha(),pygame.image.load("data/Vegeta/AX2.png").convert_alpha(),pygame.image.load("data/Vegeta/AW1.png").convert_alpha(),pygame.image.load("data/Vegeta/AW2.png").convert_alpha(),pygame.image.load("data/Vegeta/AY1.png").convert_alpha(),pygame.image.load("data/Vegeta/AY2.png").convert_alpha()]
    SZ9=[pygame.image.load("data/Vegeta/AP1.png").convert_alpha(),pygame.image.load("data/Vegeta/AP2.png").convert_alpha()]
    SZ10=[pygame.image.load("data/Vegeta/AS1.png").convert_alpha(),pygame.image.load("data/Vegeta/AS2.png").convert_alpha()]
    SZ11=[pygame.image.load("data/Vegeta/AM1.png").convert_alpha(),pygame.image.load("data/Vegeta/AM2.png").convert_alpha(),pygame.image.load("data/Vegeta/AM3.png").convert_alpha(),pygame.image.load("data/Vegeta/AM4.png").convert_alpha()]
    SZ12=[pygame.image.load("data/Vegeta/AO1.png").convert_alpha(),pygame.image.load("data/Vegeta/AO2.png").convert_alpha()]
    SZ13=[pygame.image.load("data/Vegeta/AW3.png").convert_alpha(),pygame.image.load("data/Vegeta/AW4.png").convert_alpha(),pygame.image.load("data/Vegeta/AY3.png").convert_alpha(),pygame.image.load("data/Vegeta/AY4.png").convert_alpha()]
    SZ14=[pygame.image.load("data/Vegeta/AX3.png").convert_alpha(),pygame.image.load("data/Vegeta/AX3.png").convert_alpha(),pygame.image.load("data/Vegeta/AX4.png").convert_alpha(),pygame.image.load("data/Vegeta/AX4.png").convert_alpha(),pygame.image.load("data/Vegeta/AY4.png").convert_alpha(),pygame.image.load("data/Vegeta/AY4.png").convert_alpha()]
    
    def __init__(self,x,y,right,logo):
        self.x=x
        self.Base=y
        self.y=y
        self.width=None
        self.height=None
        self.health=None
        self.right=right
        self.logo=logo
        self.SS=0
        self.count=0
        self.stand=0
        self.move=0
        self.hit=0
        self.attack=0
        self.Attack=False
        self.EffectWork=False
        self.Effect=None
        self.Screen=None
        self.SUPER=None
        self.POWERX=x
        self.POWERY=y
        self.POWER=None
        self.POWERBLIT=True

        self.K3L=False
        self.K3R=False
        self.K4=False
        self.K5=False
        self.K6=False
        self.K7=False
        self.K8=False
        self.K9L=False # It include D10
        self.K9R=False # It include D10
        self.K11R=False # It include D10
        self.K11L=False # It include D10
        self.K12=False
        self.K13=False
        self.K14=False
        self.K15=False
        self.K16=False
        self.K17=False
        self.K18=False
        self.K19=False
        self.K20=False
        self.K21=False
        self.K22=False
        self.K23=False
        self.K24=False
        self.K25=False
        self.K26=False
        self.K27=False
        self.K28=False
        self.K29=False
        self.K30=False
        self.K31=False
        self.K32=False
        self.K33=False
        self.K34=False
        self.K35=False
        self.K36=False
        self.K37=False
        self.K38=False

        self.Z0=False
        self.Z1=False
        self.Z2=False
        self.Z3=False
        self.Z4=False
        self.Z5=False
        self.Z6=False
        self.Z7=False
        self.Z8=False
        self.Z9=False
        self.Z10=False
        self.Z11=False
        self.Z12=False
        self.Z13=False
        self.Z14=False
    def Direction(self,X):
        if self.x>X.x+X.width:
            self.right=False
        elif self.x<X.x-X.width:
            self.right=True
        
    def Battelfeild(self,win):
        win.blit(self.BG,(0,0))
    def Computer(self,X):
        pass

    def Control(self,keys):
        if keys[pygame.K_RSHIFT] and keys[pygame.K_RIGHT]:
            if self.count==0:
                self.K9R=True
                
        elif keys[pygame.K_RSHIFT] and keys[pygame.K_LEFT]:
            if self.count==0:
                self.K9L=True

        elif keys[pygame.K_LSHIFT] and keys[pygame.K_RIGHT]:
            if self.count==0:
                self.K11R=True

        elif keys[pygame.K_LSHIFT] and keys[pygame.K_LEFT]:
            if self.count==0:
                self.K11L=True
                
        elif keys[pygame.K_LEFT]:
            if self.count==0:
                self.K3L=True
    
        elif keys[pygame.K_RIGHT]:
            if self.count==0:
                self.K3R=True
            
        elif keys[pygame.K_a]:
            if self.count==0:
                self.K4=True

        elif keys[pygame.K_s]:
            if self.count==0:
                self.K5=True
            
        elif keys[pygame.K_d]:
            if self.count==0:
                self.K6=True
            
        elif keys[pygame.K_UP]:
            if self.count==0:
                self.K7=True

        elif keys[pygame.K_DOWN]:
            if self.count==0:
                self.K8=True

        elif keys[pygame.K_DOWN]:
            if self.count==0:
                self.K12=True
        
        elif keys[pygame.K_SPACE]:
                self.K12=True
    
    def draw(self,win,X):
        if self.logo:
            win.blit(self.Logo,(0,0))
            pygame.draw.rect(win,(255,255,255),(0,0,100,100),1)
            win.blit(self.Name,(110,0))
            win.blit(self.V,(620,40))
            win.blit(self.A,(640,40))

            pygame.draw.rect(win,(0,0,0),(100,40,500,30))
            pygame.draw.rect(win,(23,82,169),(100,40,500,30))
            pygame.draw.rect(win,(255,255,255),(100,40,500,30),1)

            pygame.draw.rect(win,(0,0,0),(100,70,250,30))
            pygame.draw.rect(win,(255,223,0),(100,70,250,30))
            pygame.draw.rect(win,(255,255,255),(100,70,250,30),1)
        else:
            win.blit(self.Logo,(1200,0))
            pygame.draw.rect(win,(255,255,255),(1200,0,100,100),1)
            win.blit(self.Name,(1070,0))
            win.blit(self.S,(660,40))

            pygame.draw.rect(win,(0,0,0),(702,40,500,30))
            pygame.draw.rect(win,(23,82,169),(702,40,500,30))
            pygame.draw.rect(win,(255,255,255),(702,40,500,30),1)

            pygame.draw.rect(win,(0,0,0),(952,70,250,30))
            pygame.draw.rect(win,(255,223,0),(952,70,250,30))
            pygame.draw.rect(win,(255,255,255),(952,70,250,30),1)
            
        if self.K3L:
            self.Screen=self.SK3[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            if self.x>10:
                self.x-=2
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+ 1> 24:
                self.count=0
                self.K3L=False
                self.Direction(X)

        elif self.K3R:
            self.Screen=self.SK3[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            if self.x+96<1300:
                self.x+=2
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+ 1> 24:
                self.count=0
                self.K3R=False
                self.Direction(X)

        elif self.K4:
            self.Screen=self.SK4[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.count=0
                self.K4=False
                self.Direction(X)

        elif self.K5:
            self.y=330
            self.Screen=self.SK5[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.count=0
                self.y=300
                self.K5=False
                self.Direction(X)

        elif self.K6:
            self.Screen=self.SK6[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.count=0
                self.K6=False
                self.Direction(X)

        elif self.K7:
            if self.right and 1300 -(X.x+X.width)>96: # 96 self.widht
                if (self.x+96)>X.x-40 and  self.x<X.x+X.width+10  and self.count>18 and self.x+96 < 1300:
                    self.x+=50
            else:
                if X.x>96 :# 96 self.widht
                   if self.x<(X.x+X.width+40)and self.x+96>X.x-10 and self.count>18 and self.x > 20:
                        self.x-=50
                        
            if self.count<12 and self.count>4:
                self.y-=25
            self.Screen=self.SK7[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y) )
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>28:
                if self.x+96>1300:
                    self.x=self.x-(self.x+96-1300)
                if self.x<10:
                    self.x=10
                self.count=0
                self.y=300
                self.K7=False
                self.Direction(X)

        elif self.K8:
            if self.count>8:
                self.y=360
            self.Screen=self.SK8[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.y=300
                self.count=0
                self.K8=False
                self.Direction(X)

        elif self.K9R: 
            if self.right:
                if self.x+120<X.x-20 and self.count>=8: #self.widht 120
                    self.x+=10
                    self.count=7
                self.Screen=self.SK9[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x+85<1300 and self.count>=8: # self.width 85
                    self.x+=10
                    self.count=7
                self.Screen=self.SK10[self.count//4]     
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>12:
                self.y=300
                self.count=0
                self.K9R=False
                self.Direction(X)

        elif self.K9L:
            if self.right:
                if self.x>10 and self.count>=8:
                    self.x-=10
                    self.count=7
                self.Screen=self.SK10[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x>X.x+X.width+20 and self.count>=8:
                    self.x-=10
                    self.count=7
                self.Screen=self.SK9[self.count//4]
                
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>12:
                self.y=300
                self.count=0
                self.K9L=False
                self.Direction(X)
        
        elif self.K11R:
            if self.right:
                if self.x+150<X.x-20 and self.count>=8: # SELF.WIDTH 150
                    self.x+=10
                    self.count=7
                self.Screen=self.SK11[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x+85<1300 and self.count>=8: # SELF.WIDTH 140
                    self.x+=10
                    self.count=7
                self.Screen=self.SK10[self.count//4]     
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>12:
                    self.y=300
                    self.count=0
                    self.K11R=False
                    self.Direction(X) 
                


        elif self.K11L:
            if self.right: 
                if self.x>10 and self.count>=8:
                    self.x-=10
                    self.count=7
                self.Screen=self.SK10[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x>X.x+X.width+20 and self.count>=8:
                    self.x-=10
                    self.count=7
                self.Screen=self.SK11[self.count//4]
                
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>12:
                    self.y=300
                    self.count=0
                    self.K11L=False
                    self.Direction(X)
                        
        elif self.K12:
            self.SUPER=self.SE[self.SS//4]
            self.SUPER=pygame.transform.scale(self.SUPER,(300,280))
            self.Screen=self.SK12[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            win.blit(self.SUPER,(self.x-100,self.y-160))
            self.count+=1
            self.SS+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.SS+1>28:
                self.SS=0
            if self.count+1>28:
                self.y=self.Base
                self.count=0
                self.SS=0
                self.K12=False
                self.Direction(X)

        #======================= HITS =========================

        elif self.Z1:
            self.Screen=self.SZ1[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+95<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z1=False
                self.Direction(X)

        elif self.Z2:
            self.Screen=self.SZ2[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+86<1300:
                    self.x+=20
                
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z2=False
                self.Direction(X)

        elif self.Z3:
            self.Screen=self.SZ3[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+118<1300:
                    self.x+=20   
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z3=False
                self.Direction(X)
                

        elif self.Z4:
            self.Screen=self.SZ4[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+96<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z4=False
                self.Direction(X)

        elif self.Z5:
            self.Screen=self.SZ5[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+129<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z5=False
                self.Direction(X)
                

        elif self.Z6:
            self.y=self.Base+30
            self.Screen=self.SZ6[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+126<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z6=False
                self.Direction(X)

        elif self.Z7:
            self.y=self.Base+30
            self.Screen=self.SZ7[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+114<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z7=False
                self.Direction(X)

        elif self.Z8:
            self.Screen=self.SZ8[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=5
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+118<1300:
                    self.x+=5
            if self.y>100 and self.hit<20:
                self.y-=8
            if self.hit>20:
                self.y+=30
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>24:
                self.y=self.Base
                self.hit=0
                self.Z8=False
                self.Direction(X)
                
                

        elif self.Z9:
            self.Screen=self.SZ9[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+76<1300:
                    self.x+=20
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z9=False
                self.Direction(X)
                
                
        elif self.Z10:
            self.Screen=self.SZ10[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+85<1300:
                    self.x+=20
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z10=False
                self.Direction(X)

        elif self.Z11:
            self.Screen=self.SZ11[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+84<1300:
                    self.x+=20   
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z11=False
                self.Direction(X)

        elif self.Z12:
            self.Screen=self.SZ12[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+97<1300:
                    self.x+=20
                
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z12=False
                self.Direction(X)
        
        elif self.Z13:
            self.Screen=self.SZ13[self.hit//4]
            if self.right:
                if self.hit>8 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>8 and self.x+95<1300:
                    self.x+=15
                
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z13=False
                self.Direction(X)
                
        elif self.Z14:
            self.Screen=self.SZ14[self.hit//4]
            if self.right:
                if self.hit>4 and self.x>10:
                    self.x-=6
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>4 and self.x+83<1300:
                    self.x+=6
            if self.y>100 and self.hit<16:
                self.y-=5
            if self.hit>=16:
                self.y+=5
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>24:
                self.y=self.Base
                self.hit=0
                self.Z14=False
                self.Direction(X)
                
        elif self.Z0:
            if self.hit<20:
                self.y=self.Base+60
            elif self.hit==21:
                self.y=self.Base+30
            elif self.hit==25:
                self.y=self.Base+20
            elif self.hit==30:
                self.y=self.Base
            self.Screen=self.SZ0[self.hit//6]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>48:
                self.y=self.Base
                self.hit=0
                self.Z0=False
                self.Direction(X)
        
        else:
            self.Screen=self.Stand[self.stand//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.stand+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.stand+1 > 16:
                self.stand=0
                self.Direction(X)

#---------------------------------------------------------------------------------------------------------------------------------
class Piccolo():
    BG=pygame.image.load("data/bg/spaceimg.png").convert_alpha()
    BG=pygame.transform.scale(BG,(1300,600))
    font=pygame.font.SysFont('calibri',40,True,True)
    Name=font.render("Piccolo",1,(137,194,77))
    V=font.render("V",1,(137,194,77))
    A=font.render("/",1,(255,223,0))
    S=font.render("S",1,(137,194,77))
    Logo=pygame.image.load("data/Select/A8.png").convert_alpha()
    Logo=pygame.transform.scale(Logo,(100,100))
    SE=[pygame.image.load("data/Effects/A5.png").convert_alpha(),pygame.image.load("data/Effects/A6.png").convert_alpha(),pygame.image.load("data/Effects/A7.png").convert_alpha(),pygame.image.load("data/Effects/A8.png").convert_alpha(),pygame.image.load("data/Effects/A9.png").convert_alpha(),pygame.image.load("data/Effects/A10.png").convert_alpha(),pygame.image.load("data/Effects/A11.png").convert_alpha()]
    Stand=[pygame.image.load("data/Piccolo/A1.png").convert_alpha(),pygame.image.load("data/Piccolo/A2.png").convert_alpha(),pygame.image.load("data/Piccolo/A3.png").convert_alpha(),pygame.image.load("data/Piccolo/A4.png").convert_alpha()]
    SL3=[pygame.image.load("data/Piccolo/C1.png").convert_alpha(),pygame.image.load("data/Piccolo/C2.png").convert_alpha(),pygame.image.load("data/Piccolo/C3.png").convert_alpha(),pygame.image.load("data/Piccolo/C4.png").convert_alpha(),pygame.image.load("data/Piccolo/C5.png").convert_alpha(),pygame.image.load("data/Piccolo/C6.png").convert_alpha()]
    SL4=[pygame.image.load("data/Piccolo/D1.png").convert_alpha(),pygame.image.load("data/Piccolo/D2.png").convert_alpha(),pygame.image.load("data/Piccolo/D3.png").convert_alpha(),pygame.image.load("data/Piccolo/D3.png").convert_alpha(),pygame.image.load("data/Piccolo/D3.png").convert_alpha(),pygame.image.load("data/Piccolo/D3.png").convert_alpha()]
    SL5=[pygame.image.load("data/Piccolo/E1.png").convert_alpha(),pygame.image.load("data/Piccolo/E2.png").convert_alpha(),pygame.image.load("data/Piccolo/E3.png").convert_alpha(),pygame.image.load("data/Piccolo/E3.png").convert_alpha(),pygame.image.load("data/Piccolo/E3.png").convert_alpha(),pygame.image.load("data/Piccolo/E3.png").convert_alpha()]
    SL6=[pygame.image.load("data/Piccolo/F1.png").convert_alpha(),pygame.image.load("data/Piccolo/F2.png").convert_alpha(),pygame.image.load("data/Piccolo/F3.png").convert_alpha(),pygame.image.load("data/Piccolo/F3.png").convert_alpha(),pygame.image.load("data/Piccolo/F3.png").convert_alpha(),pygame.image.load("data/Piccolo/F3.png").convert_alpha()]
    SL7=[pygame.image.load("data/Piccolo/G1.png").convert_alpha(),pygame.image.load("data/Piccolo/G2.png").convert_alpha(),pygame.image.load("data/Piccolo/G3.png").convert_alpha(),pygame.image.load("data/Piccolo/G4.png").convert_alpha(),pygame.image.load("data/Piccolo/G5.png").convert_alpha(),pygame.image.load("data/Piccolo/G6.png").convert_alpha(),pygame.image.load("data/Piccolo/G7.png").convert_alpha()]
    SL8=[pygame.image.load("data/Piccolo/H1.png").convert_alpha(),pygame.image.load("data/Piccolo/H2.png").convert_alpha(),pygame.image.load("data/Piccolo/H3.png").convert_alpha(),pygame.image.load("data/Piccolo/H3.png").convert_alpha(),pygame.image.load("data/Piccolo/H3.png").convert_alpha(),pygame.image.load("data/Piccolo/H3.png").convert_alpha()]
    SL9=[pygame.image.load("data/Piccolo/I1.png").convert_alpha(),pygame.image.load("data/Piccolo/I2.png").convert_alpha(),pygame.image.load("data/Piccolo/I3.png").convert_alpha()]
    SL10=[pygame.image.load("data/Piccolo/J1.png").convert_alpha(),pygame.image.load("data/Piccolo/J2.png").convert_alpha(),pygame.image.load("data/Piccolo/J3.png").convert_alpha(),pygame.image.load("data/Piccolo/J4.png").convert_alpha()]
    SL11=[pygame.image.load("data/Piccolo/K1.png").convert_alpha(),pygame.image.load("data/Piccolo/K2.png").convert_alpha(),pygame.image.load("data/Piccolo/K3.png").convert_alpha()]
    SL12=[pygame.image.load("data/Piccolo/L1.png").convert_alpha(),pygame.image.load("data/Piccolo/L2.png").convert_alpha(),pygame.image.load("data/Piccolo/L3.png").convert_alpha(),pygame.image.load("data/Piccolo/L4.png").convert_alpha(),pygame.image.load("data/Piccolo/L5.png").convert_alpha(),pygame.image.load("data/Piccolo/L6.png").convert_alpha()]  

    SZ0=[pygame.image.load("data/Piccolo/AZ1.png").convert_alpha(),pygame.image.load("data/Piccolo/AZ2.png").convert_alpha(),pygame.image.load("data/Piccolo/AZ3.png").convert_alpha(),pygame.image.load("data/Piccolo/AZ4.png").convert_alpha(),pygame.image.load("data/Piccolo/AZ5.png").convert_alpha(),pygame.image.load("data/Piccolo/AZ6.png").convert_alpha(),pygame.image.load("data/Piccolo/AZ7.png").convert_alpha(),pygame.image.load("data/Piccolo/AZ7.png").convert_alpha()]
    SZ1=[pygame.image.load("data/Piccolo/AQ1.png").convert_alpha(),pygame.image.load("data/Piccolo/AQ2.png").convert_alpha(),pygame.image.load("data/Piccolo/AQ3.png").convert_alpha(),pygame.image.load("data/Piccolo/AQ4.png").convert_alpha()]
    SZ2=[pygame.image.load("data/Piccolo/AR1.png").convert_alpha(),pygame.image.load("data/Piccolo/AR2.png").convert_alpha()]
    SZ3=[pygame.image.load("data/Piccolo/AW3.png").convert_alpha(),pygame.image.load("data/Piccolo/AW4.png").convert_alpha(),pygame.image.load("data/Piccolo/AW1.png").convert_alpha(),pygame.image.load("data/Piccolo/AW2.png").convert_alpha()]
    SZ4=[pygame.image.load("data/Piccolo/AN1.png").convert_alpha(),pygame.image.load("data/Piccolo/AN2.png").convert_alpha(),pygame.image.load("data/Piccolo/AN3.png").convert_alpha(),pygame.image.load("data/Piccolo/AN4.png").convert_alpha()]
    SZ5=[pygame.image.load("data/Piccolo/AT1.png").convert_alpha(),pygame.image.load("data/Piccolo/AT2.png").convert_alpha(),pygame.image.load("data/Piccolo/AT3.png").convert_alpha(),pygame.image.load("data/Piccolo/AT4.png").convert_alpha()]
    SZ6=[pygame.image.load("data/Piccolo/AU1.png").convert_alpha(),pygame.image.load("data/Piccolo/AU2.png").convert_alpha()]
    SZ7=[pygame.image.load("data/Piccolo/AV1.png").convert_alpha(),pygame.image.load("data/Piccolo/AV2.png").convert_alpha()]
    SZ8=[pygame.image.load("data/Piccolo/AX1.png").convert_alpha(),pygame.image.load("data/Piccolo/AX2.png").convert_alpha(),pygame.image.load("data/Piccolo/AW1.png").convert_alpha(),pygame.image.load("data/Piccolo/AW2.png").convert_alpha(),pygame.image.load("data/Piccolo/AY1.png").convert_alpha(),pygame.image.load("data/Piccolo/AY2.png").convert_alpha()]
    SZ9=[pygame.image.load("data/Piccolo/AP1.png").convert_alpha(),pygame.image.load("data/Piccolo/AP2.png").convert_alpha()]
    SZ10=[pygame.image.load("data/Piccolo/AS1.png").convert_alpha(),pygame.image.load("data/Piccolo/AS2.png").convert_alpha()]
    SZ11=[pygame.image.load("data/Piccolo/AM1.png").convert_alpha(),pygame.image.load("data/Piccolo/AM2.png").convert_alpha(),pygame.image.load("data/Piccolo/AM3.png").convert_alpha(),pygame.image.load("data/Piccolo/AM4.png").convert_alpha()]
    SZ12=[pygame.image.load("data/Piccolo/AO1.png").convert_alpha(),pygame.image.load("data/Piccolo/AO2.png").convert_alpha()]
    SZ13=[pygame.image.load("data/Piccolo/AW3.png").convert_alpha(),pygame.image.load("data/Piccolo/AW4.png").convert_alpha(),pygame.image.load("data/Piccolo/AY3.png").convert_alpha(),pygame.image.load("data/Piccolo/AY4.png").convert_alpha()]
    SZ14=[pygame.image.load("data/Piccolo/AX3.png").convert_alpha(),pygame.image.load("data/Piccolo/AX3.png").convert_alpha(),pygame.image.load("data/Piccolo/AX4.png").convert_alpha(),pygame.image.load("data/Piccolo/AX4.png").convert_alpha(),pygame.image.load("data/Piccolo/AY4.png").convert_alpha(),pygame.image.load("data/Piccolo/AY4.png").convert_alpha()]
    
    def __init__(self,x,y,right,logo):
        self.x=x
        self.Base=y
        self.y=y
        self.width=None
        self.height=None
        self.health=None
        self.right=right
        self.logo=logo
        self.SS=0
        self.count=0
        self.stand=0
        self.move=0
        self.hit=0
        self.attack=0
        self.Attack=False
        self.EffectWork=False
        self.Effect=None
        self.Screen=None
        self.SUPER=None
        self.POWERX=x
        self.POWERY=y
        self.POWER=None
        self.POWERBLIT=True

        self.L3L=False
        self.L3R=False
        self.L4=False
        self.L5=False
        self.L6=False
        self.L7=False
        self.L8=False
        self.L9L=False # It include D10
        self.L9R=False # It include D10
        self.L11R=False # It include D10
        self.L11L=False # It include D10
        self.L12=False
        self.L13=False
        self.L14=False
        self.L15=False
        self.L16=False
        self.L17=False
        self.L18=False
        self.L19=False
        self.L20=False
        self.L21=False
        self.L22=False
        self.L23=False
        self.L24=False
        self.L25=False
        self.L26=False
        self.L27=False
        self.L28=False
        self.L29=False
        self.L30=False
        self.L31=False
        self.L32=False
        self.L33=False
        self.L34=False
        self.L35=False
        self.L36=False
        self.L37=False
        self.L38=False

        self.Z0=False
        self.Z1=False
        self.Z2=False
        self.Z3=False
        self.Z4=False
        self.Z5=False
        self.Z6=False
        self.Z7=False
        self.Z8=False
        self.Z9=False
        self.Z10=False
        self.Z11=False
        self.Z12=False
        self.Z13=False
        self.Z14=False

    def Direction(self,X):
        if self.x>X.x:
            self.right=False
        elif self.x<X.x:
            self.right=True
        
    def Battelfeild(self,win):
        win.blit(self.BG,(0,0))
    def Computer(self,X):
        pass
    def Control(self,keys):
        if keys[pygame.K_RSHIFT] and keys[pygame.K_RIGHT]:
            if self.count==0:
                self.L9R=True
                
        elif keys[pygame.K_RSHIFT] and keys[pygame.K_LEFT]:
            if self.count==0:
                self.L9L=True

        elif keys[pygame.K_LSHIFT] and keys[pygame.K_RIGHT]:
            if self.count==0:
                self.L11R=True

        elif keys[pygame.K_LSHIFT] and keys[pygame.K_LEFT]:
            if self.count==0:
                self.L11L=True
                
        elif keys[pygame.K_LEFT]:
            if self.count==0:
                self.L3L=True
    
        elif keys[pygame.K_RIGHT]:
            if self.count==0:
                self.L3R=True
            
        elif keys[pygame.K_a]:
            if self.count==0:
                self.L4=True

        elif keys[pygame.K_s]:
            if self.count==0:
                self.L5=True
            
        elif keys[pygame.K_d]:
            if self.count==0:
                self.L6=True
            
        elif keys[pygame.K_UP]:
            if self.count==0:
                self.L7=True

        elif keys[pygame.K_DOWN]:
            if self.count==0:
                self.L8=True

        elif keys[pygame.K_DOWN]:
            if self.count==0:
                self.L12=True
        
        elif keys[pygame.K_SPACE]:
                self.L12=True
    
    def draw(self,win,X):
        if self.logo:
            win.blit(self.Logo,(0,0))
            pygame.draw.rect(win,(255,255,255),(0,0,100,100),1)
            win.blit(self.Name,(110,0))
            win.blit(self.V,(620,40))
            win.blit(self.A,(640,40))

            pygame.draw.rect(win,(0,0,0),(100,40,500,30))
            pygame.draw.rect(win,(137,194,77),(100,40,500,30))
            pygame.draw.rect(win,(255,255,255),(100,40,500,30),1)

            pygame.draw.rect(win,(0,0,0),(100,70,250,30))
            pygame.draw.rect(win,(255,223,0),(100,70,250,30))
            pygame.draw.rect(win,(255,255,255),(100,70,250,30),1)
            
        else:
            win.blit(self.Logo,(1200,0))
            pygame.draw.rect(win,(255,255,255),(1200,0,100,100),1)
            win.blit(self.Name,(1070,0))
            win.blit(self.S,(660,40))

            pygame.draw.rect(win,(0,0,0),(702,40,500,30))
            pygame.draw.rect(win,(137,194,77),(702,40,500,30))
            pygame.draw.rect(win,(255,255,255),(702,40,500,30),1)

            pygame.draw.rect(win,(0,0,0),(952,70,250,30))
            pygame.draw.rect(win,(255,223,0),(952,70,250,30))
            pygame.draw.rect(win,(255,255,255),(952,70,250,30),1)
            
        if self.L3L:
            self.Screen=self.SL3[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            if self.x>10:
                self.x-=2
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+ 1> 24:
                self.count=0
                self.L3L=False
                self.Direction(X)

        elif self.L3R:
            self.Screen=self.SL3[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            if self.x+128<1300:
                self.x+=2
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+ 1> 24:
                self.count=0
                self.L3R=False
                self.Direction(X)

        elif self.L4:
            self.Screen=self.SL4[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.count=0
                self.L4=False
                self.Direction(X)

        elif self.L5:
            self.y=330
            self.Screen=self.SL5[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.count=0
                self.y=300
                self.L5=False
                self.Direction(X)

        elif self.L6:
            self.Screen=self.SL6[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.count=0
                self.L6=False
                self.Direction(X)

        elif self.L7:
            if self.right and 1300 -(X.x+X.width)>128: # 128 self.widht
                if (self.x+128)>X.x-40 and  self.x<X.x+X.width+10  and self.count>18 and self.x+128 < 1300:
                    self.x+=50
            else:
                if X.x>128 :# 128 self.widht
                   if self.x<(X.x+X.width+40)and self.x+128>X.x-10 and self.count>18 and self.x > 20:
                        self.x-=50
                        
            if self.count<12 and self.count>4:
                self.y-=25
            self.Screen=self.SL7[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>28:
                if self.x+128>1300:
                    self.x=self.x-(self.x+128-1300)
                if self.x<10:
                    self.x=10
                self.count=0
                self.y=300
                self.L7=False
                self.Direction(X)

        elif self.L8:
            if self.count>8:
                self.y=360
            self.Screen=self.SL8[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.y=300
                self.count=0
                self.L8=False
                self.Direction(X)

        elif self.L9R: 
            if self.right:
                if self.x+180<X.x-20 and self.count>=8: #self.widht 180
                    self.x+=10
                    self.count=7
                self.Screen=self.SL9[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x+128<1300 and self.count>=8: # self.width 128
                    self.x+=10
                    self.count=7
                self.Screen=self.SL10[self.count//4]     
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>12:
                self.y=300
                self.count=0
                self.L9R=False
                self.Direction(X)

        elif self.L9L:
            if self.right:
                if self.x>10 and self.count>=8:
                    self.x-=10
                    self.count=7
                self.Screen=self.SL10[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x>X.x+X.width+20 and self.count>=8:
                    self.x-=10
                    self.count=7
                self.Screen=self.SL9[self.count//4]
                
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>12:
                self.y=300
                self.count=0
                self.L9L=False
                self.Direction(X)
        
        elif self.L11R:
            if self.right:
                if self.x+173<X.x-20 and self.count>=8: # SELF.WIDTH 173
                    self.x+=10
                    self.count=7
                self.Screen=self.SL11[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x+128<1300 and self.count>=8: # SELF.WIDTH 97
                    self.x+=10
                    self.count=7
                self.Screen=self.SL10[self.count//4]     
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>12:
                    self.y=300
                    self.count=0
                    self.L11R=False
                    self.Direction(X) 
                


        elif self.L11L:
            if self.right: 
                if self.x>10 and self.count>=8:
                    self.x-=10
                    self.count=7
                self.Screen=self.SL10[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x>X.x+X.width+20 and self.count>=8:
                    self.x-=10
                    self.count=7
                self.Screen=self.SL11[self.count//4]
                
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>12:
                    self.y=300
                    self.count=0
                    self.L11L=False
                    self.Direction(X)
                
        


        elif self.L12:
            self.SUPER=self.SE[self.SS//4]
            self.SUPER=pygame.transform.scale(self.SUPER,(300,280))
            self.Screen=self.SL12[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            win.blit(self.SUPER,(self.x-100,self.y-160))
            self.count+=1
            self.SS+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.SS+1>28:
                self.SS=0
            if self.count+1>24:
                self.y=self.Base
                self.count=0
                self.SS=0
                self.L12=False
                self.Direction(X)
        #======================= HITS =========================

        elif self.Z1:
            self.Screen=self.SZ1[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+113<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z1=False
                self.Direction(X)

        elif self.Z2:
            self.Screen=self.SZ2[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+120<1300:
                    self.x+=20
                
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z2=False
                self.Direction(X)

        elif self.Z3:
            self.Screen=self.SZ3[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+162<1300:
                    self.x+=20   
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z3=False
                self.Direction(X)
                

        elif self.Z4:
            self.Screen=self.SZ4[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+115<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z4=False
                self.Direction(X)

        elif self.Z5:
            self.Screen=self.SZ5[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+99<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z5=False
                self.Direction(X)
                

        elif self.Z6:
            self.y=self.Base+30
            self.Screen=self.SZ6[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+141<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z6=False
                self.Direction(X)

        elif self.Z7:
            self.y=self.Base+30
            self.Screen=self.SZ7[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+139<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z7=False
                self.Direction(X)

        elif self.Z8:
            self.Screen=self.SZ8[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=5
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+155<1300:
                    self.x+=5
            if self.y>100 and self.hit<20:
                self.y-=8
            if self.hit>20:
                self.y+=30
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>24:
                self.y=self.Base
                self.hit=0
                self.Z8=False
                self.Direction(X)
                
                

        elif self.Z9:
            self.Screen=self.SZ9[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+113<1300:
                    self.x+=20
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z9=False
                self.Direction(X)
                
                
        elif self.Z10:
            self.Screen=self.SZ10[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+95<1300:
                    self.x+=20
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z10=False
                self.Direction(X)

        elif self.Z11:
            self.Screen=self.SZ11[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+140<1300:
                    self.x+=20   
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z11=False
                self.Direction(X)

        elif self.Z12:
            self.Screen=self.SZ12[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+117<1300:
                    self.x+=20
                
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z12=False
                self.Direction(X)
        
        elif self.Z13:
            self.Screen=self.SZ13[self.hit//4]
            if self.right:
                if self.hit>8 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>8 and self.x+162<1300:
                    self.x+=15
                
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z13=False
                self.Direction(X)
                
        elif self.Z14:
            self.Screen=self.SZ14[self.hit//4]
            if self.right:
                if self.hit>4 and self.x>10:
                    self.x-=6
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>4 and self.x+101<1300:
                    self.x+=6
            if self.y>100 and self.hit<16:
                self.y-=5
            if self.hit>=16:
                self.y+=5
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>24:
                self.y=self.Base
                self.hit=0
                self.Z14=False
                self.Direction(X)
                
        elif self.Z0:
            if self.hit<20:
                self.y=self.Base+60
            elif self.hit==21:
                self.y=self.Base+30
            elif self.hit==25:
                self.y=self.Base+20
            elif self.hit==30:
                self.y=self.Base
            self.Screen=self.SZ0[self.hit//6]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>48:
                self.y=self.Base
                self.hit=0
                self.Z0=False
                self.Direction(X)

        else:
            self.Screen=self.Stand[self.stand//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.stand+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.stand+1 > 16:
                self.stand=0
                self.Direction(X)
        

#---------------------------------------------------------------------------------------------------------------------------------
class Gotenks():
    BG=pygame.image.load("data/bg/spaceimg.png").convert_alpha()
    BG=pygame.transform.scale(BG,(1300,600))
    font=pygame.font.SysFont('calibri',40,True,True)
    Name=font.render("Gotenks",1,(252,252,197))
    V=font.render("V",1,(252,252,197))
    A=font.render("/",1,(255,223,0))
    S=font.render("S",1,(252,252,197))
    Logo=pygame.image.load("data/Select/A13.png").convert_alpha()
    Logo=pygame.transform.scale(Logo,(100,100))
    
    SE=[pygame.image.load("data/Effects/A1.png").convert_alpha(),pygame.image.load("data/Effects/A2.png").convert_alpha(),pygame.image.load("data/Effects/A3.png").convert_alpha(),pygame.image.load("data/Effects/A4.png").convert_alpha()]
    Stand=[pygame.image.load("data/Gotenks/A1.png").convert_alpha(),pygame.image.load("data/Gotenks/A2.png").convert_alpha(),pygame.image.load("data/Gotenks/A3.png").convert_alpha(),pygame.image.load("data/Gotenks/A4.png").convert_alpha(),pygame.image.load("data/Gotenks/A5.png").convert_alpha(),pygame.image.load("data/Gotenks/A6.png").convert_alpha()]
    SM3=[pygame.image.load("data/Gotenks/C1.png").convert_alpha(),pygame.image.load("data/Gotenks/C2.png").convert_alpha(),pygame.image.load("data/Gotenks/C3.png").convert_alpha(),pygame.image.load("data/Gotenks/C4.png").convert_alpha()]
    SM4=[pygame.image.load("data/Gotenks/D1.png").convert_alpha(),pygame.image.load("data/Gotenks/D2.png").convert_alpha(),pygame.image.load("data/Gotenks/D3.png").convert_alpha(),pygame.image.load("data/Gotenks/D3.png").convert_alpha(),pygame.image.load("data/Gotenks/D3.png").convert_alpha(),pygame.image.load("data/Gotenks/D3.png").convert_alpha()]
    SM5=[pygame.image.load("data/Gotenks/E1.png").convert_alpha(),pygame.image.load("data/Gotenks/E2.png").convert_alpha(),pygame.image.load("data/Gotenks/E3.png").convert_alpha(),pygame.image.load("data/Gotenks/E3.png").convert_alpha(),pygame.image.load("data/Gotenks/E3.png").convert_alpha(),pygame.image.load("data/Gotenks/E3.png").convert_alpha()]
    SM6=[pygame.image.load("data/Gotenks/F1.png").convert_alpha(),pygame.image.load("data/Gotenks/F2.png").convert_alpha(),pygame.image.load("data/Gotenks/F3.png").convert_alpha(),pygame.image.load("data/Gotenks/F3.png").convert_alpha(),pygame.image.load("data/Gotenks/F3.png").convert_alpha(),pygame.image.load("data/Gotenks/F3.png").convert_alpha()]
    SM7=[pygame.image.load("data/Gotenks/G1.png").convert_alpha(),pygame.image.load("data/Gotenks/G2.png").convert_alpha(),pygame.image.load("data/Gotenks/G3.png").convert_alpha(),pygame.image.load("data/Gotenks/G4.png").convert_alpha(),pygame.image.load("data/Gotenks/G5.png").convert_alpha(),pygame.image.load("data/Gotenks/G6.png").convert_alpha(),pygame.image.load("data/Gotenks/G7.png").convert_alpha()]
    SM8=[pygame.image.load("data/Gotenks/H1.png").convert_alpha(),pygame.image.load("data/Gotenks/H2.png").convert_alpha(),pygame.image.load("data/Gotenks/H3.png").convert_alpha(),pygame.image.load("data/Gotenks/H3.png").convert_alpha(),pygame.image.load("data/Gotenks/H3.png").convert_alpha(),pygame.image.load("data/Gotenks/H3.png").convert_alpha()]
    SM9=[pygame.image.load("data/Gotenks/I1.png").convert_alpha(),pygame.image.load("data/Gotenks/I2.png").convert_alpha(),pygame.image.load("data/Gotenks/I3.png").convert_alpha()]
    SM10=[pygame.image.load("data/Gotenks/J1.png").convert_alpha(),pygame.image.load("data/Gotenks/J2.png").convert_alpha(),pygame.image.load("data/Gotenks/J3.png").convert_alpha()]
    SM11=[pygame.image.load("data/Gotenks/K1.png").convert_alpha(),pygame.image.load("data/Gotenks/K2.png").convert_alpha(),pygame.image.load("data/Gotenks/K3.png").convert_alpha()]
    SM12=[pygame.image.load("data/Gotenks/L1.png").convert_alpha(),pygame.image.load("data/Gotenks/L2.png").convert_alpha(),pygame.image.load("data/Gotenks/L3.png").convert_alpha(),pygame.image.load("data/Gotenks/L4.png").convert_alpha()]

    SZ0=[pygame.image.load("data/Gotenks/AZ1.png").convert_alpha(),pygame.image.load("data/Gotenks/AZ2.png").convert_alpha(),pygame.image.load("data/Gotenks/AZ3.png").convert_alpha(),pygame.image.load("data/Gotenks/AZ4.png").convert_alpha(),pygame.image.load("data/Gotenks/AZ5.png").convert_alpha(),pygame.image.load("data/Gotenks/AZ6.png").convert_alpha(),pygame.image.load("data/Gotenks/AZ7.png").convert_alpha(),pygame.image.load("data/Gotenks/AZ7.png").convert_alpha()]
    SZ1=[pygame.image.load("data/Gotenks/AQ1.png").convert_alpha(),pygame.image.load("data/Gotenks/AQ2.png").convert_alpha(),pygame.image.load("data/Gotenks/AQ3.png").convert_alpha(),pygame.image.load("data/Gotenks/AQ4.png").convert_alpha()]
    SZ2=[pygame.image.load("data/Gotenks/AR1.png").convert_alpha(),pygame.image.load("data/Gotenks/AR2.png").convert_alpha()]
    SZ3=[pygame.image.load("data/Gotenks/AW3.png").convert_alpha(),pygame.image.load("data/Gotenks/AW4.png").convert_alpha(),pygame.image.load("data/Gotenks/AW1.png").convert_alpha(),pygame.image.load("data/Gotenks/AW2.png").convert_alpha()]
    SZ4=[pygame.image.load("data/Gotenks/AN1.png").convert_alpha(),pygame.image.load("data/Gotenks/AN2.png").convert_alpha(),pygame.image.load("data/Gotenks/AN3.png").convert_alpha(),pygame.image.load("data/Gotenks/AN4.png").convert_alpha()]
    SZ5=[pygame.image.load("data/Gotenks/AT1.png").convert_alpha(),pygame.image.load("data/Gotenks/AT2.png").convert_alpha(),pygame.image.load("data/Gotenks/AT3.png").convert_alpha(),pygame.image.load("data/Gotenks/AT4.png").convert_alpha()]
    SZ6=[pygame.image.load("data/Gotenks/AU1.png").convert_alpha(),pygame.image.load("data/Gotenks/AU2.png").convert_alpha()]
    SZ7=[pygame.image.load("data/Gotenks/AV1.png").convert_alpha(),pygame.image.load("data/Gotenks/AV2.png").convert_alpha()]
    SZ8=[pygame.image.load("data/Gotenks/AX1.png").convert_alpha(),pygame.image.load("data/Gotenks/AX2.png").convert_alpha(),pygame.image.load("data/Gotenks/AW1.png").convert_alpha(),pygame.image.load("data/Gotenks/AW2.png").convert_alpha(),pygame.image.load("data/Gotenks/AY1.png").convert_alpha(),pygame.image.load("data/Gotenks/AY2.png").convert_alpha()]
    SZ9=[pygame.image.load("data/Gotenks/AP1.png").convert_alpha(),pygame.image.load("data/Gotenks/AP2.png").convert_alpha()]
    SZ10=[pygame.image.load("data/Gotenks/AS1.png").convert_alpha(),pygame.image.load("data/Gotenks/AS2.png").convert_alpha()]
    SZ11=[pygame.image.load("data/Gotenks/AM1.png").convert_alpha(),pygame.image.load("data/Gotenks/AM2.png").convert_alpha(),pygame.image.load("data/Gotenks/AM3.png").convert_alpha(),pygame.image.load("data/Gotenks/AM4.png").convert_alpha()]
    SZ12=[pygame.image.load("data/Gotenks/AO1.png").convert_alpha(),pygame.image.load("data/Gotenks/AO2.png").convert_alpha()]
    SZ13=[pygame.image.load("data/Gotenks/AW3.png").convert_alpha(),pygame.image.load("data/Gotenks/AW4.png").convert_alpha(),pygame.image.load("data/Gotenks/AY3.png").convert_alpha(),pygame.image.load("data/Gotenks/AY4.png").convert_alpha()]
    SZ14=[pygame.image.load("data/Gotenks/AX3.png").convert_alpha(),pygame.image.load("data/Gotenks/AX3.png").convert_alpha(),pygame.image.load("data/Gotenks/AX4.png").convert_alpha(),pygame.image.load("data/Gotenks/AX4.png").convert_alpha(),pygame.image.load("data/Gotenks/AY4.png").convert_alpha(),pygame.image.load("data/Gotenks/AY4.png").convert_alpha()]
    def __init__(self,x,y,right,logo):
        self.x=x
        self.Base=y
        self.y=y
        self.width=None
        self.height=None
        self.health=None
        self.right=right
        self.logo=logo
        self.SS=0
        self.count=0
        self.stand=0
        self.move=0
        self.hit=0
        self.attack=0
        self.Attack=False
        self.EffectWork=False
        self.Effect=None
        self.Screen=None
        self.SUPER=None
        self.POWERX=x
        self.POWERY=y
        self.POWER=None
        self.POWERBLIT=True

        self.M3L=False
        self.M3R=False
        self.M4=False
        self.M5=False
        self.M6=False
        self.M7=False
        self.M8=False
        self.M9L=False # It include D10
        self.M9R=False # It include D10
        self.M11R=False # It include D10
        self.M11L=False # It include D10
        self.M12=False
        self.M13=False
        self.M14=False
        self.M15=False
        self.M16=False
        self.M17=False
        self.M18=False
        self.M19=False
        self.M20=False
        self.M21=False
        self.M22=False
        self.M23=False
        self.M24=False
        self.M25=False
        self.M26=False
        self.M27=False
        self.M28=False
        self.M29=False
        self.M30=False
        self.M31=False
        self.M32=False
        self.M33=False
        self.M34=False
        self.M35=False
        self.M36=False
        self.M37=False
        self.M38=False

        self.Z0=False
        self.Z1=False
        self.Z2=False
        self.Z3=False
        self.Z4=False
        self.Z5=False
        self.Z6=False
        self.Z7=False
        self.Z8=False
        self.Z9=False
        self.Z10=False
        self.Z11=False
        self.Z12=False
        self.Z13=False
        self.Z14=False

    def Direction(self,X):
        if self.x>X.x:
            self.right=False
        elif self.x<X.x:
            self.right=True
        
    def Battelfeild(self,win):
        win.blit(self.BG,(0,0))
    def Computer(self,X):
        pass
    def Control(self,keys):
        if keys[pygame.K_RSHIFT] and keys[pygame.K_RIGHT]:
            if self.count==0:
                self.M9R=True
                
        elif keys[pygame.K_RSHIFT] and keys[pygame.K_LEFT]:
            if self.count==0:
                self.M9L=True

        elif keys[pygame.K_LSHIFT] and keys[pygame.K_RIGHT]:
            if self.count==0:
                self.M11R=True

        elif keys[pygame.K_LSHIFT] and keys[pygame.K_LEFT]:
            if self.count==0:
                self.M11L=True
                
        elif keys[pygame.K_LEFT]:
            if self.count==0:
                self.M3L=True
    
        elif keys[pygame.K_RIGHT]:
            if self.count==0:
                self.M3R=True
            
        elif keys[pygame.K_a]:
            if self.count==0:
                self.M4=True

        elif keys[pygame.K_s]:
            if self.count==0:
                self.M5=True
            
        elif keys[pygame.K_d]:
            if self.count==0:
                self.M6=True
            
        elif keys[pygame.K_UP]:
            if self.count==0:
                self.M7=True

        elif keys[pygame.K_DOWN]:
            if self.count==0:
                self.M8=True

        elif keys[pygame.K_DOWN]:
            if self.count==0:
                self.M12=True
        
        elif keys[pygame.K_SPACE]:
                self.M12=True
    
    def draw(self,win,X):
        if self.logo:
            win.blit(self.Logo,(0,0))
            pygame.draw.rect(win,(255,255,255),(0,0,100,100),1)
            win.blit(self.Name,(110,0))
            win.blit(self.V,(620,40))
            win.blit(self.A,(640,40))
            
            pygame.draw.rect(win,(0,0,0),(100,40,500,30))
            pygame.draw.rect(win,(252,252,197),(100,40,500,30))
            pygame.draw.rect(win,(255,255,255),(100,40,500,30),1)
            
            pygame.draw.rect(win,(0,0,0),(100,70,250,30))
            pygame.draw.rect(win,(255,223,0),(100,70,250,30))
            pygame.draw.rect(win,(255,255,255),(100,70,250,30),1)
        else:
            win.blit(self.Logo,(1200,0))
            pygame.draw.rect(win,(255,255,255),(1200,0,100,100),1)
            win.blit(self.Name,(1050,0))
            win.blit(self.S,(660,40))

            pygame.draw.rect(win,(0,0,0),(702,40,500,30))
            pygame.draw.rect(win,(252,252,197),(702,40,500,30))
            pygame.draw.rect(win,(255,255,255),(702,40,500,30),1)
            
            pygame.draw.rect(win,(0,0,0),(952,70,250,30))
            pygame.draw.rect(win,(255,223,0),(952,70,250,30))
            pygame.draw.rect(win,(255,255,255),(952,70,250,30),1)
            
            
        if self.M3L:
            self.Screen=self.SM3[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            if self.x>10:
                self.x-=2
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+ 1> 16:
                self.count=0
                self.M3L=False
                self.Direction(X)

        elif self.M3R:
            self.Screen=self.SM3[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            if self.x+82<1300:
                self.x+=2
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+ 1> 16:
                self.count=0
                self.M3R=False
                self.Direction(X)

        elif self.M4:
            self.Screen=self.SM4[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.count=0
                self.M4=False
                self.Direction(X)

        elif self.M5:
            self.y=330
            self.Screen=self.SM5[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.count=0
                self.y=300
                self.M5=False
                self.Direction(X)

        elif self.M6:
            self.Screen=self.SM6[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.count=0
                self.M6=False
                self.Direction(X)

        elif self.M7:
            if self.right and 1300 -(X.x+X.width)>82: # 82 self.widht
                if (self.x+82)>X.x-40 and  self.x<X.x+X.width+10  and self.count>18 and self.x+82 < 1300:
                    self.x+=50
            else:
                if X.x>82 :# 82 self.widht
                   if self.x<(X.x+X.width+40)and self.x+82>X.x-10 and self.count>18 and self.x > 20:
                        self.x-=50
                    
            if self.count<12 and self.count>4:
                self.y-=25
            self.Screen=self.SM7[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>28:
                if self.x+82>1300:
                    self.x=self.x-(self.x+82-1300)
                if self.x<10:
                    self.x=10
                self.count=0
                self.y=300
                self.M7=False
                self.Direction(X)


        elif self.M8:
            if self.count>8:
                self.y=360
            self.Screen=self.SM8[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.y=300
                self.count=0
                self.M8=False
                self.Direction(X)

        elif self.M9R: 
            if self.right:
                if self.x+106<X.x-20 and self.count>=8: #self.widht 106
                    self.x+=10
                    self.count=7
                self.Screen=self.SM9[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x+88<1300 and self.count>=8: # self.width 88
                    self.x+=10
                    self.count=7
                self.Screen=self.SM10[self.count//4]     
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>12:
                self.y=300
                self.count=0
                self.M9R=False
                self.Direction(X)

        elif self.M9L:
            if self.right:
                if self.x>10 and self.count>=8:
                    self.x-=10
                    self.count=7
                self.Screen=self.SM10[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x>X.x+X.width+20 and self.count>=8:
                    self.x-=10
                    self.count=7
                self.Screen=self.SM9[self.count//4]
                
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>12:
                self.y=300
                self.count=0
                self.M9L=False
                self.Direction(X)
        
        elif self.M11R:
            if self.right:
                if self.x+105<X.x-20 and self.count>=8: # SELF.WIDTH 105
                    self.x+=10
                    self.count=7
                self.Screen=self.SM11[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x+128<1300 and self.count>=8: # SELF.WIDTH 97
                    self.x+=10
                    self.count=7
                self.Screen=self.SM10[self.count//4]     
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>12:
                    self.y=300
                    self.count=0
                    self.M11R=False
                    self.Direction(X) 
                


        elif self.M11L:
            if self.right: 
                if self.x>10 and self.count>=8:
                    self.x-=10
                    self.count=7
                self.Screen=self.SM10[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x>X.x+X.width+20 and self.count>=8:
                    self.x-=10
                    self.count=7
                self.Screen=self.SM11[self.count//4]
                
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>12:
                    self.y=300
                    self.count=0
                    self.M11L=False
                    self.Direction(X)
                
        


        elif self.M12:
            self.SUPER=self.SE[self.SS//4]
            self.SUPER=pygame.transform.scale(self.SUPER,(300,280))
            self.Screen=self.SM12[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            win.blit(self.SUPER,(self.x-100,self.y-160))
            self.count+=1
            self.SS+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.SS+1>16:
                self.SS=0
            if self.count+1>16:
                self.y=self.Base
                self.count=0
                self.SS=0
                self.M12=False
                self.Direction(X)

        #======================= HITS =========================

        elif self.Z1:
            self.Screen=self.SZ1[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+71<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z1=False
                self.Direction(X)

        elif self.Z2:
            self.Screen=self.SZ2[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+80<1300:
                    self.x+=20
                
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z2=False
                self.Direction(X)

        elif self.Z3:
            self.Screen=self.SZ3[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+98<1300:
                    self.x+=20   
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z3=False
                self.Direction(X)
                

        elif self.Z4:
            self.Screen=self.SZ4[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+70<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z4=False
                self.Direction(X)

        elif self.Z5:
            self.Screen=self.SZ5[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+89<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z5=False
                self.Direction(X)
                

        elif self.Z6:
            self.y=self.Base+30
            self.Screen=self.SZ6[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+101<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z6=False
                self.Direction(X)

        elif self.Z7:
            self.y=self.Base+30
            self.Screen=self.SZ7[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+91<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z7=False
                self.Direction(X)

        elif self.Z8:
            self.Screen=self.SZ8[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=5
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+87<1300:
                    self.x+=5
            if self.y>100 and self.hit<20:
                self.y-=8
            if self.hit>20:
                self.y+=30
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>24:
                self.y=self.Base
                self.hit=0
                self.Z8=False
                self.Direction(X)
                
                

        elif self.Z9:
            self.Screen=self.SZ9[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+69<1300:
                    self.x+=20
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z9=False
                self.Direction(X)
                
                
        elif self.Z10:
            self.Screen=self.SZ10[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+70<1300:
                    self.x+=20
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z10=False
                self.Direction(X)

        elif self.Z11:
            self.Screen=self.SZ11[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+107<1300:
                    self.x+=20   
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z11=False
                self.Direction(X)

        elif self.Z12:
            self.Screen=self.SZ12[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+73<1300:
                    self.x+=20
                
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z12=False
                self.Direction(X)
        
        elif self.Z13:
            self.Screen=self.SZ13[self.hit//4]
            if self.right:
                if self.hit>8 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>8 and self.x+78<1300:
                    self.x+=15
                
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z13=False
                self.Direction(X)
                
        elif self.Z14:
            self.Screen=self.SZ14[self.hit//4]
            if self.right:
                if self.hit>4 and self.x>10:
                    self.x-=6
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>4 and self.x+78<1300:
                    self.x+=6
            if self.y>100 and self.hit<16:
                self.y-=5
            if self.hit>=16:
                self.y+=5
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>24:
                self.y=self.Base
                self.hit=0
                self.Z14=False
                self.Direction(X)
                
        elif self.Z0:
            if self.hit<20:
                self.y=self.Base+60
            elif self.hit==21:
                self.y=self.Base+30
            elif self.hit==25:
                self.y=self.Base+20
            elif self.hit==30:
                self.y=self.Base
            self.Screen=self.SZ0[self.hit//6]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>48:
                self.y=self.Base
                self.hit=0
                self.Z0=False
                self.Direction(X)

        else:
            self.Screen=self.Stand[self.stand//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.stand+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.stand+1 > 24:
                self.stand=0
                self.Direction(X)

#---------------------------------------------------------------------------------------------------------------------------------
class Future_Trunks():
    BG=pygame.image.load("data/bg/spaceimg.png").convert_alpha()
    BG=pygame.transform.scale(BG,(1300,600))
    font=pygame.font.SysFont('calibri',40,True,True)
    Name=font.render("Future Trunks",1,(147,130,222))
    V=font.render("V",1,(147,130,222))
    A=font.render("/",1,(255,223,0))
    S=font.render("S",1,(147,130,222))
    Logo=pygame.image.load("data/Select/A18.png").convert_alpha()
    Logo=pygame.transform.scale(Logo,(100,100))

    
    SE=[pygame.image.load("data/Effects/A5.png").convert_alpha(),pygame.image.load("data/Effects/A6.png").convert_alpha(),pygame.image.load("data/Effects/A7.png").convert_alpha(),pygame.image.load("data/Effects/A8.png").convert_alpha(),pygame.image.load("data/Effects/A9.png").convert_alpha(),pygame.image.load("data/Effects/A10.png").convert_alpha(),pygame.image.load("data/Effects/A11.png").convert_alpha()]
    Stand=[pygame.image.load("data/Future_Trunks/A1.png").convert_alpha(),pygame.image.load("data/Future_Trunks/A2.png").convert_alpha(),pygame.image.load("data/Future_Trunks/A3.png").convert_alpha(),pygame.image.load("data/Future_Trunks/A4.png").convert_alpha()]
    SN3=[pygame.image.load("data/Future_Trunks/C1.png").convert_alpha(),pygame.image.load("data/Future_Trunks/C2.png").convert_alpha(),pygame.image.load("data/Future_Trunks/C3.png").convert_alpha(),pygame.image.load("data/Future_Trunks/C4.png").convert_alpha(),pygame.image.load("data/Future_Trunks/C5.png").convert_alpha(),pygame.image.load("data/Future_Trunks/C6.png").convert_alpha()]
    SN4=[pygame.image.load("data/Future_Trunks/D1.png").convert_alpha(),pygame.image.load("data/Future_Trunks/D2.png").convert_alpha(),pygame.image.load("data/Future_Trunks/D3.png").convert_alpha(),pygame.image.load("data/Future_Trunks/D3.png").convert_alpha(),pygame.image.load("data/Future_Trunks/D3.png").convert_alpha(),pygame.image.load("data/Future_Trunks/D3.png").convert_alpha()]
    SN5=[pygame.image.load("data/Future_Trunks/E1.png").convert_alpha(),pygame.image.load("data/Future_Trunks/E2.png").convert_alpha(),pygame.image.load("data/Future_Trunks/E3.png").convert_alpha(),pygame.image.load("data/Future_Trunks/E3.png").convert_alpha(),pygame.image.load("data/Future_Trunks/E3.png").convert_alpha(),pygame.image.load("data/Future_Trunks/E3.png").convert_alpha()]
    SN6=[pygame.image.load("data/Future_Trunks/F1.png").convert_alpha(),pygame.image.load("data/Future_Trunks/F2.png").convert_alpha(),pygame.image.load("data/Future_Trunks/F3.png").convert_alpha(),pygame.image.load("data/Future_Trunks/F3.png").convert_alpha(),pygame.image.load("data/Future_Trunks/F3.png").convert_alpha(),pygame.image.load("data/Future_Trunks/F3.png").convert_alpha()]
    SN7=[pygame.image.load("data/Future_Trunks/G1.png").convert_alpha(),pygame.image.load("data/Future_Trunks/G2.png").convert_alpha(),pygame.image.load("data/Future_Trunks/G3.png").convert_alpha(),pygame.image.load("data/Future_Trunks/G4.png").convert_alpha(),pygame.image.load("data/Future_Trunks/G5.png").convert_alpha(),pygame.image.load("data/Future_Trunks/G6.png").convert_alpha(),pygame.image.load("data/Future_Trunks/G7.png").convert_alpha()]
    SN8=[pygame.image.load("data/Future_Trunks/H1.png").convert_alpha(),pygame.image.load("data/Future_Trunks/H2.png").convert_alpha(),pygame.image.load("data/Future_Trunks/H3.png").convert_alpha(),pygame.image.load("data/Future_Trunks/H3.png").convert_alpha(),pygame.image.load("data/Future_Trunks/H3.png").convert_alpha(),pygame.image.load("data/Future_Trunks/H3.png").convert_alpha()]
    SN9=[pygame.image.load("data/Future_Trunks/I1.png").convert_alpha(),pygame.image.load("data/Future_Trunks/I2.png").convert_alpha(),pygame.image.load("data/Future_Trunks/I3.png").convert_alpha()]
    SN10=[pygame.image.load("data/Future_Trunks/J1.png").convert_alpha(),pygame.image.load("data/Future_Trunks/J2.png").convert_alpha(),pygame.image.load("data/Future_Trunks/J3.png").convert_alpha()]
    SN11=[pygame.image.load("data/Future_Trunks/K1.png").convert_alpha(),pygame.image.load("data/Future_Trunks/K2.png").convert_alpha(),pygame.image.load("data/Future_Trunks/K3.png").convert_alpha()]
    SN12=[pygame.image.load("data/Future_Trunks/L1.png").convert_alpha(),pygame.image.load("data/Future_Trunks/L1.png").convert_alpha(),pygame.image.load("data/Future_Trunks/L3.png").convert_alpha(),pygame.image.load("data/Future_Trunks/L4.png").convert_alpha(),pygame.image.load("data/Future_Trunks/L5.png").convert_alpha()]

    SZ0=[pygame.image.load("data/Gotenks/AZ1.png").convert_alpha(),pygame.image.load("data/Gotenks/AZ2.png").convert_alpha(),pygame.image.load("data/Gotenks/AZ3.png").convert_alpha(),pygame.image.load("data/Gotenks/AZ4.png").convert_alpha(),pygame.image.load("data/Gotenks/AZ5.png").convert_alpha(),pygame.image.load("data/Gotenks/AZ6.png").convert_alpha(),pygame.image.load("data/Gotenks/AZ7.png").convert_alpha(),pygame.image.load("data/Gotenks/AZ7.png").convert_alpha()]
    SZ1=[pygame.image.load("data/Gotenks/AQ1.png").convert_alpha(),pygame.image.load("data/Gotenks/AQ2.png").convert_alpha(),pygame.image.load("data/Gotenks/AQ3.png").convert_alpha(),pygame.image.load("data/Gotenks/AQ4.png").convert_alpha()]
    SZ2=[pygame.image.load("data/Gotenks/AR1.png").convert_alpha(),pygame.image.load("data/Gotenks/AR2.png").convert_alpha()]
    SZ3=[pygame.image.load("data/Gotenks/AW3.png").convert_alpha(),pygame.image.load("data/Gotenks/AW4.png").convert_alpha(),pygame.image.load("data/Gotenks/AW1.png").convert_alpha(),pygame.image.load("data/Gotenks/AW2.png").convert_alpha()]
    SZ4=[pygame.image.load("data/Gotenks/AN1.png").convert_alpha(),pygame.image.load("data/Gotenks/AN2.png").convert_alpha(),pygame.image.load("data/Gotenks/AN3.png").convert_alpha(),pygame.image.load("data/Gotenks/AN4.png").convert_alpha()]
    SZ5=[pygame.image.load("data/Gotenks/AT1.png").convert_alpha(),pygame.image.load("data/Gotenks/AT2.png").convert_alpha(),pygame.image.load("data/Gotenks/AT3.png").convert_alpha(),pygame.image.load("data/Gotenks/AT4.png").convert_alpha()]
    SZ6=[pygame.image.load("data/Gotenks/AU1.png").convert_alpha(),pygame.image.load("data/Gotenks/AU2.png").convert_alpha()]
    SZ7=[pygame.image.load("data/Gotenks/AV1.png").convert_alpha(),pygame.image.load("data/Gotenks/AV2.png").convert_alpha()]
    SZ8=[pygame.image.load("data/Gotenks/AX1.png").convert_alpha(),pygame.image.load("data/Gotenks/AX2.png").convert_alpha(),pygame.image.load("data/Gotenks/AW1.png").convert_alpha(),pygame.image.load("data/Gotenks/AW2.png").convert_alpha(),pygame.image.load("data/Gotenks/AY1.png").convert_alpha(),pygame.image.load("data/Gotenks/AY2.png").convert_alpha()]
    SZ9=[pygame.image.load("data/Gotenks/AP1.png").convert_alpha(),pygame.image.load("data/Gotenks/AP2.png").convert_alpha()]
    SZ10=[pygame.image.load("data/Gotenks/AS1.png").convert_alpha(),pygame.image.load("data/Gotenks/AS2.png").convert_alpha()]
    SZ11=[pygame.image.load("data/Gotenks/AM1.png").convert_alpha(),pygame.image.load("data/Gotenks/AM2.png").convert_alpha(),pygame.image.load("data/Gotenks/AM3.png").convert_alpha(),pygame.image.load("data/Gotenks/AM4.png").convert_alpha()]
    SZ12=[pygame.image.load("data/Gotenks/AO1.png").convert_alpha(),pygame.image.load("data/Gotenks/AO2.png").convert_alpha()]
    SZ13=[pygame.image.load("data/Gotenks/AW3.png").convert_alpha(),pygame.image.load("data/Gotenks/AW4.png").convert_alpha(),pygame.image.load("data/Gotenks/AY3.png").convert_alpha(),pygame.image.load("data/Gotenks/AY4.png").convert_alpha()]
    SZ14=[pygame.image.load("data/Gotenks/AX3.png").convert_alpha(),pygame.image.load("data/Gotenks/AX3.png").convert_alpha(),pygame.image.load("data/Gotenks/AX4.png").convert_alpha(),pygame.image.load("data/Gotenks/AX4.png").convert_alpha(),pygame.image.load("data/Gotenks/AY4.png").convert_alpha(),pygame.image.load("data/Gotenks/AY4.png").convert_alpha()]
    
    def __init__(self,x,y,right,logo):
        self.x=x
        self.Base=y
        self.y=y
        self.width=None
        self.height=None
        self.health=None
        self.right=right
        self.logo=logo
        self.SS=0
        self.count=0
        self.stand=0
        self.move=0
        self.hit=0
        self.attack=0
        self.Attack=False
        self.EffectWork=False
        self.Effect=None
        self.Screen=None
        self.SUPER=None
        self.POWERX=x
        self.POWERY=y
        self.POWER=None
        self.POWERBLIT=True

        self.N3L=False
        self.N3R=False
        self.N4=False
        self.N5=False
        self.N6=False
        self.N7=False
        self.N8=False
        self.N9L=False # It include D10
        self.N9R=False # It include D10
        self.N11R=False # It include D10
        self.N11L=False # It include D10
        self.N12=False
        self.N13=False
        self.N14=False
        self.N15=False
        self.N16=False
        self.N17=False
        self.N18=False
        self.N19=False
        self.N20=False
        self.N21=False
        self.N22=False
        self.N23=False
        self.N24=False
        self.N25=False
        self.N26=False
        self.N27=False
        self.N28=False
        self.N29=False
        self.N30=False
        self.N31=False
        self.N32=False
        self.N33=False
        self.N34=False
        self.N35=False
        self.N36=False
        self.N37=False
        self.N38=False

        self.Z0=False
        self.Z1=False
        self.Z2=False
        self.Z3=False
        self.Z4=False
        self.Z5=False
        self.Z6=False
        self.Z7=False
        self.Z8=False
        self.Z9=False
        self.Z10=False
        self.Z11=False
        self.Z12=False
        self.Z13=False
        self.Z14=False

    def Direction(self,X):
        if self.x>X.x+X.width:
            self.right=False
        elif self.x<X.x-X.width:
            self.right=True
        
    def Battelfeild(self,win):
        win.blit(self.BG,(0,0))
    def Computer(self,X):
        pass
    def Control(self,keys):
        if keys[pygame.K_RSHIFT] and keys[pygame.K_RIGHT]:
            if self.count==0:
                self.N9R=True
                
        elif keys[pygame.K_RSHIFT] and keys[pygame.K_LEFT]:
            if self.count==0:
                self.N9L=True

        elif keys[pygame.K_LSHIFT] and keys[pygame.K_RIGHT]:
            if self.count==0:
                self.N11R=True

        elif keys[pygame.K_LSHIFT] and keys[pygame.K_LEFT]:
            if self.count==0:
                self.N11L=True
                
        elif keys[pygame.K_LEFT]:
            if self.count==0:
                self.N3L=True
    
        elif keys[pygame.K_RIGHT]:
            if self.count==0:
                self.N3R=True
            
        elif keys[pygame.K_a]:
            if self.count==0:
                self.N4=True

        elif keys[pygame.K_s]:
            if self.count==0:
                self.N5=True
            
        elif keys[pygame.K_d]:
            if self.count==0:
                self.N6=True
            
        elif keys[pygame.K_UP]:
            if self.count==0:
                self.N7=True

        elif keys[pygame.K_DOWN]:
            if self.count==0:
                self.N8=True

        elif keys[pygame.K_DOWN]:
            if self.count==0:
                self.N12=True
        
        elif keys[pygame.K_SPACE]:
                self.N12=True
    
    def draw(self,win,X):
        if self.logo:
            win.blit(self.Logo,(0,0))
            pygame.draw.rect(win,(255,255,255),(0,0,100,100),1)
            win.blit(self.Name,(110,0))
            win.blit(self.V,(620,40))
            win.blit(self.A,(640,40))

            pygame.draw.rect(win,(0,0,0),(100,40,500,30))
            pygame.draw.rect(win,(147,130,222),(100,40,500,30))
            pygame.draw.rect(win,(255,255,255),(100,40,500,30),1)

            pygame.draw.rect(win,(0,0,0),(100,70,250,30))
            pygame.draw.rect(win,(255,223,0),(100,70,250,30))
            pygame.draw.rect(win,(255,255,255),(100,70,250,30),1)
        else:
            win.blit(self.Logo,(1200,0))
            pygame.draw.rect(win,(255,255,255),(1200,0,100,100),1)
            win.blit(self.Name,(960,0))
            win.blit(self.S,(660,40))

            pygame.draw.rect(win,(0,0,0),(702,40,500,30))
            pygame.draw.rect(win,(147,130,222),(702,40,500,30))
            pygame.draw.rect(win,(255,255,255),(702,40,500,30),1)

            pygame.draw.rect(win,(0,0,0),(952,70,250,30))
            pygame.draw.rect(win,(255,223,0),(952,70,250,30))
            pygame.draw.rect(win,(255,255,255),(952,70,250,30),1)

        if self.N3L:
            self.Screen=self.SN3[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            if self.x>10:
                self.x-=2
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            if self.count+ 1> 24:
                self.count=0
                self.N3L=False
                self.Direction(X)

        elif self.N3R:
            self.Screen=self.SN3[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            if self.x+98<1300:
                self.x+=2
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+ 1> 24:
                self.count=0
                self.N3R=False
                self.Direction(X)

        elif self.N4:
            self.Screen=self.SN4[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.count=0
                self.N4=False
                self.Direction(X)

        elif self.N5:
            self.y=330
            self.Screen=self.SN5[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.count=0
                self.y=300
                self.N5=False
                self.Direction(X)

        elif self.N6:
            self.Screen=self.SN6[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.count=0
                self.N6=False
                self.Direction(X)

        elif self.N7:
            if self.right and 1300 -(X.x+X.width)>98: # 98 self.widht
                if (self.x+98)>X.x-40 and  self.x<X.x+X.width+10  and self.count>18 and self.x+98 < 1300:
                    self.x+=50
            else:
                if X.x>98 :# 98 self.widht
                   if self.x<(X.x+X.width+40)and self.x+98>X.x-10 and self.count>18 and self.x > 20:
                        self.x-=50
                    
            if self.count<12 and self.count>4:
                self.y-=25
            self.Screen=self.SN7[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>28:
                if self.x+82>1300:
                    self.x=self.x-(self.x+82-1300)
                if self.x<10:
                    self.x=10
                self.count=0
                self.y=300
                self.N7=False
                self.Direction(X)


        elif self.N8:
            if self.count>8:
                self.y=360
            self.Screen=self.SN8[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.y=300
                self.count=0
                self.N8=False
                self.Direction(X)

        elif self.N9R: 
            if self.right:
                if self.x+141<X.x-20 and self.count>=8: #self.widht 141
                    self.x+=10
                    self.count=7
                self.Screen=self.SN9[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x+105<1300 and self.count>=8: # self.width 105
                    self.x+=10
                    self.count=7
                self.Screen=self.SN10[self.count//4]     
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>12:
                self.y=300
                self.count=0
                self.N9R=False
                self.Direction(X)

        elif self.N9L:
            if self.right:
                if self.x>10 and self.count>=8:
                    self.x-=10
                    self.count=7
                self.Screen=self.SN10[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x>X.x+X.width+20 and self.count>=8:
                    self.x-=10
                    self.count=7
                self.Screen=self.SN9[self.count//4]
                
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>12:
                self.y=300
                self.count=0
                self.N9L=False
                self.Direction(X)
        
        elif self.N11R:
            if self.right:
                if self.x+157<X.x-20 and self.count>=8: # SELF.WIDTH 157
                    self.x+=10
                    self.count=7
                self.Screen=self.SN11[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x+105<1300 and self.count>=8: # SELF.WIDTH 105
                    self.x+=10
                    self.count=7
                self.Screen=self.SN10[self.count//4]     
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>12:
                    self.y=300
                    self.count=0
                    self.N11R=False
                    self.Direction(X) 
                


        elif self.N11L:
            if self.right: 
                if self.x>10 and self.count>=8:
                    self.x-=10
                    self.count=7
                self.Screen=self.SN10[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x>X.x+X.width+20 and self.count>=8:
                    self.x-=10
                    self.count=7
                self.Screen=self.SN11[self.count//4]
                
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>12:
                    self.y=300
                    self.count=0
                    self.N11L=False
                    self.Direction(X)
                        
        elif self.N12:
            self.SUPER=self.SE[self.SS//4]
            self.SUPER=pygame.transform.scale(self.SUPER,(300,280))
            self.Screen=self.SN12[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            win.blit(self.SUPER,(self.x-100,self.y-160))
            self.count+=1
            self.SS+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.SS+1>28:
                self.SS=0
            if self.count+1>20:
                self.y=self.Base
                self.count=0
                self.SS=0
                self.N12=False
                self.Direction(X)

        #======================= HITS =========================

        elif self.Z1:
            self.Screen=self.SZ1[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+88<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z1=False
                self.Direction(X)

        elif self.Z2:
            self.Screen=self.SZ2[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+89<1300:
                    self.x+=20
                
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z2=False
                self.Direction(X)

        elif self.Z3:
            self.Screen=self.SZ3[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+133<1300:
                    self.x+=20   
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z3=False
                self.Direction(X)
                

        elif self.Z4:
            self.Screen=self.SZ4[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+86<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z4=False
                self.Direction(X)

        elif self.Z5:
            self.Screen=self.SZ5[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+109<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z5=False
                self.Direction(X)
                

        elif self.Z6:
            self.y=self.Base+30
            self.Screen=self.SZ6[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+111<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z6=False
                self.Direction(X)

        elif self.Z7:
            self.y=self.Base+30
            self.Screen=self.SZ7[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+101<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z7=False
                self.Direction(X)

        elif self.Z8:
            self.Screen=self.SZ8[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=5
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+133<1300:
                    self.x+=5
            if self.y>100 and self.hit<20:
                self.y-=8
            if self.hit>20:
                self.y+=30
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>24:
                self.y=self.Base
                self.hit=0
                self.Z8=False
                self.Direction(X)
                
                

        elif self.Z9:
            self.Screen=self.SZ9[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+73<1300:
                    self.x+=20
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z9=False
                self.Direction(X)
                
                
        elif self.Z10:
            self.Screen=self.SZ10[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+80<1300:
                    self.x+=20
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z10=False
                self.Direction(X)

        elif self.Z11:
            self.Screen=self.SZ11[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+88<1300:
                    self.x+=20   
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z11=False
                self.Direction(X)

        elif self.Z12:
            self.Screen=self.SZ12[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+91<1300:
                    self.x+=20
                
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z12=False
                self.Direction(X)
        
        elif self.Z13:
            self.Screen=self.SZ13[self.hit//4]
            if self.right:
                if self.hit>8 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>8 and self.x+106<1300:
                    self.x+=15
                
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z13=False
                self.Direction(X)
                
        elif self.Z14:
            self.Screen=self.SZ14[self.hit//4]
            if self.right:
                if self.hit>4 and self.x>10:
                    self.x-=6
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>4 and self.x+86<1300:
                    self.x+=6
            if self.y>100 and self.hit<16:
                self.y-=5
            if self.hit>=16:
                self.y+=5
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>24:
                self.y=self.Base
                self.hit=0
                self.Z14=False
                self.Direction(X)
                
        elif self.Z0:
            if self.hit<20:
                self.y=self.Base+60
            elif self.hit==21:
                self.y=self.Base+30
            elif self.hit==25:
                self.y=self.Base+20
            elif self.hit==30:
                self.y=self.Base
            self.Screen=self.SZ0[self.hit//6]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>48:
                self.y=self.Base
                self.hit=0
                self.Z0=False
                self.Direction(X)

        
        else:
            self.Screen=self.Stand[self.stand//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.stand+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.stand+1 > 16:
                self.stand=0
                self.Direction(X)


#---------------------------------------------------------------------------------------------------------------------------------
class Beerus():
    BG=pygame.image.load("data/bg/spaceimg.png").convert_alpha()
    BG=pygame.transform.scale(BG,(1300,600))
    font=pygame.font.SysFont('calibri',40,True,True)
    Name=font.render("Beerus",1,(153,129,163))
    V=font.render("V",1,(153,129,163))
    A=font.render("/",1,(255,223,0))
    S=font.render("S",1,(153,129,163))
    Logo=pygame.image.load("data/Select/A23.png").convert_alpha()
    Logo=pygame.transform.scale(Logo,(100,100))
    SE=[pygame.image.load("data/Effects/A5.png").convert_alpha(),pygame.image.load("data/Effects/A6.png").convert_alpha(),pygame.image.load("data/Effects/A7.png").convert_alpha(),pygame.image.load("data/Effects/A8.png").convert_alpha(),pygame.image.load("data/Effects/A9.png").convert_alpha(),pygame.image.load("data/Effects/A10.png").convert_alpha(),pygame.image.load("data/Effects/A11.png").convert_alpha()]
    Stand=[pygame.image.load("data/Beerus/A1.png").convert_alpha(),pygame.image.load("data/Beerus/A2.png").convert_alpha(),pygame.image.load("data/Beerus/A3.png").convert_alpha(),pygame.image.load("data/Beerus/A4.png").convert_alpha(),pygame.image.load("data/Beerus/A5.png").convert_alpha(),pygame.image.load("data/Beerus/A6.png").convert_alpha(),pygame.image.load("data/Beerus/A7.png").convert_alpha(),pygame.image.load("data/Beerus/A8.png").convert_alpha(),pygame.image.load("data/Beerus/A9.png").convert_alpha(),pygame.image.load("data/Beerus/A10.png").convert_alpha()]
    SO3=[pygame.image.load("data/Beerus/C1.png").convert_alpha(),pygame.image.load("data/Beerus/C2.png").convert_alpha(),pygame.image.load("data/Beerus/C3.png").convert_alpha(),pygame.image.load("data/Beerus/C4.png").convert_alpha(),pygame.image.load("data/Beerus/C5.png").convert_alpha(),pygame.image.load("data/Beerus/C6.png").convert_alpha(),pygame.image.load("data/Beerus/C7.png").convert_alpha(),pygame.image.load("data/Beerus/C8.png").convert_alpha(),pygame.image.load("data/Beerus/C9.png").convert_alpha()]
    SO4=[pygame.image.load("data/Beerus/D1.png").convert_alpha(),pygame.image.load("data/Beerus/D2.png").convert_alpha(),pygame.image.load("data/Beerus/D3.png").convert_alpha(),pygame.image.load("data/Beerus/D3.png").convert_alpha(),pygame.image.load("data/Beerus/D3.png").convert_alpha(),pygame.image.load("data/Beerus/D3.png").convert_alpha()]
    SO5=[pygame.image.load("data/Beerus/E1.png").convert_alpha(),pygame.image.load("data/Beerus/E2.png").convert_alpha(),pygame.image.load("data/Beerus/E3.png").convert_alpha(),pygame.image.load("data/Beerus/E3.png").convert_alpha(),pygame.image.load("data/Beerus/E3.png").convert_alpha(),pygame.image.load("data/Beerus/E3.png").convert_alpha()]
    SO6=[pygame.image.load("data/Beerus/F1.png").convert_alpha(),pygame.image.load("data/Beerus/F2.png").convert_alpha(),pygame.image.load("data/Beerus/F3.png").convert_alpha(),pygame.image.load("data/Beerus/F3.png").convert_alpha(),pygame.image.load("data/Beerus/F3.png").convert_alpha(),pygame.image.load("data/Beerus/F3.png").convert_alpha()]
    SO7=[pygame.image.load("data/Beerus/G1.png").convert_alpha(),pygame.image.load("data/Beerus/G2.png").convert_alpha(),pygame.image.load("data/Beerus/G3.png").convert_alpha(),pygame.image.load("data/Beerus/G4.png").convert_alpha(),pygame.image.load("data/Beerus/G5.png").convert_alpha(),pygame.image.load("data/Beerus/G6.png").convert_alpha(),pygame.image.load("data/Beerus/G7.png").convert_alpha(),pygame.image.load("data/Beerus/G8.png").convert_alpha(),pygame.image.load("data/Beerus/G9.png").convert_alpha()]
    SO8=[pygame.image.load("data/Beerus/H1.png").convert_alpha(),pygame.image.load("data/Beerus/H2.png").convert_alpha(),pygame.image.load("data/Beerus/H3.png").convert_alpha(),pygame.image.load("data/Beerus/H3.png").convert_alpha(),pygame.image.load("data/Beerus/H3.png").convert_alpha(),pygame.image.load("data/Beerus/H3.png").convert_alpha()]
    SO9=[pygame.image.load("data/Beerus/I1.png").convert_alpha(),pygame.image.load("data/Beerus/I2.png").convert_alpha(),pygame.image.load("data/Beerus/I3.png").convert_alpha()]
    SO10=[pygame.image.load("data/Beerus/J1.png").convert_alpha(),pygame.image.load("data/Beerus/J2.png").convert_alpha()]
    SO11=[pygame.image.load("data/Beerus/K1.png").convert_alpha(),pygame.image.load("data/Beerus/K2.png").convert_alpha(),pygame.image.load("data/Beerus/K3.png").convert_alpha(),pygame.image.load("data/Beerus/K4.png").convert_alpha(),pygame.image.load("data/Beerus/K5.png").convert_alpha()]
    SO12=[pygame.image.load("data/Beerus/L1.png").convert_alpha(),pygame.image.load("data/Beerus/L2.png").convert_alpha(),pygame.image.load("data/Beerus/L3.png").convert_alpha(),pygame.image.load("data/Beerus/L4.png").convert_alpha(),pygame.image.load("data/Beerus/L5.png").convert_alpha()]

    SZ0=[pygame.image.load("data/Beerus/AZ1.png").convert_alpha(),pygame.image.load("data/Beerus/AZ2.png").convert_alpha(),pygame.image.load("data/Beerus/AZ3.png").convert_alpha(),pygame.image.load("data/Beerus/AZ4.png").convert_alpha(),pygame.image.load("data/Beerus/AZ5.png").convert_alpha(),pygame.image.load("data/Beerus/AZ6.png").convert_alpha(),pygame.image.load("data/Beerus/AZ7.png").convert_alpha(),pygame.image.load("data/Beerus/AZ8.png").convert_alpha()]
    SZ1=[pygame.image.load("data/Beerus/AQ1.png").convert_alpha(),pygame.image.load("data/Beerus/AQ2.png").convert_alpha(),pygame.image.load("data/Beerus/AQ3.png").convert_alpha(),pygame.image.load("data/Beerus/AQ4.png").convert_alpha()]
    SZ2=[pygame.image.load("data/Beerus/AR1.png").convert_alpha(),pygame.image.load("data/Beerus/AR2.png").convert_alpha()]
    SZ3=[pygame.image.load("data/Beerus/AW3.png").convert_alpha(),pygame.image.load("data/Beerus/AW4.png").convert_alpha(),pygame.image.load("data/Beerus/AW1.png").convert_alpha(),pygame.image.load("data/Beerus/AW2.png").convert_alpha()]
    SZ4=[pygame.image.load("data/Beerus/AN1.png").convert_alpha(),pygame.image.load("data/Beerus/AN2.png").convert_alpha(),pygame.image.load("data/Beerus/AN3.png").convert_alpha(),pygame.image.load("data/Beerus/AN4.png").convert_alpha()]
    SZ5=[pygame.image.load("data/Beerus/AT1.png").convert_alpha(),pygame.image.load("data/Beerus/AT2.png").convert_alpha(),pygame.image.load("data/Beerus/AT3.png").convert_alpha(),pygame.image.load("data/Beerus/AT4.png").convert_alpha()]
    SZ6=[pygame.image.load("data/Beerus/AU1.png").convert_alpha(),pygame.image.load("data/Beerus/AU2.png").convert_alpha()]
    SZ7=[pygame.image.load("data/Beerus/AV1.png").convert_alpha(),pygame.image.load("data/Beerus/AV2.png").convert_alpha()]
    SZ8=[pygame.image.load("data/Beerus/AX1.png").convert_alpha(),pygame.image.load("data/Beerus/AX2.png").convert_alpha(),pygame.image.load("data/Beerus/AW1.png").convert_alpha(),pygame.image.load("data/Beerus/AW2.png").convert_alpha(),pygame.image.load("data/Beerus/AY1.png").convert_alpha(),pygame.image.load("data/Beerus/AY2.png").convert_alpha()]
    SZ9=[pygame.image.load("data/Beerus/AP1.png").convert_alpha(),pygame.image.load("data/Beerus/AP2.png").convert_alpha()]
    SZ10=[pygame.image.load("data/Beerus/AS1.png").convert_alpha(),pygame.image.load("data/Beerus/AS2.png").convert_alpha()]
    SZ11=[pygame.image.load("data/Beerus/AM1.png").convert_alpha(),pygame.image.load("data/Beerus/AM2.png").convert_alpha(),pygame.image.load("data/Beerus/AM3.png").convert_alpha(),pygame.image.load("data/Beerus/AM4.png").convert_alpha()]
    SZ12=[pygame.image.load("data/Beerus/AO1.png").convert_alpha(),pygame.image.load("data/Beerus/AO2.png").convert_alpha()]
    SZ13=[pygame.image.load("data/Beerus/AW3.png").convert_alpha(),pygame.image.load("data/Beerus/AW4.png").convert_alpha(),pygame.image.load("data/Beerus/AY3.png").convert_alpha(),pygame.image.load("data/Beerus/AY4.png").convert_alpha()]
    SZ14=[pygame.image.load("data/Beerus/AX3.png").convert_alpha(),pygame.image.load("data/Beerus/AX3.png").convert_alpha(),pygame.image.load("data/Beerus/AX4.png").convert_alpha(),pygame.image.load("data/Beerus/AX4.png").convert_alpha(),pygame.image.load("data/Beerus/AY4.png").convert_alpha(),pygame.image.load("data/Beerus/AY4.png").convert_alpha()]
    
    def __init__(self,x,y,right,logo):
        self.x=x
        self.Base=y
        self.y=y
        self.width=None
        self.height=None
        self.health=None
        self.right=right
        self.logo=logo
        self.SS=0
        self.count=0
        self.stand=0
        self.move=0
        self.hit=0
        self.attack=0
        self.Attack=False
        self.EffectWork=False
        self.Effect=None
        self.Screen=None
        self.SUPER=None
        self.POWERX=x
        self.POWERY=y
        self.POWER=None
        self.POWERBLIT=True

        self.O3L=False
        self.O3R=False
        self.O4=False
        self.O5=False
        self.O6=False
        self.O7=False
        self.O8=False
        self.O9L=False # It include D10
        self.O9R=False # It include D10
        self.O11R=False # It include D10
        self.O11L=False # It include D10
        self.O12=False
        self.O13=False
        self.O14=False
        self.O15=False
        self.O16=False
        self.O17=False
        self.O18=False
        self.O19=False
        self.O20=False
        self.O21=False
        self.O22=False
        self.O23=False
        self.O24=False
        self.O25=False
        self.O26=False
        self.O27=False
        self.O28=False
        self.O29=False
        self.O30=False
        self.O31=False
        self.O32=False
        self.O33=False
        self.O34=False
        self.O35=False
        self.O36=False
        self.O37=False
        self.O38=False

        self.Z0=False
        self.Z1=False
        self.Z2=False
        self.Z3=False
        self.Z4=False
        self.Z5=False
        self.Z6=False
        self.Z7=False
        self.Z8=False
        self.Z9=False
        self.Z10=False
        self.Z11=False
        self.Z12=False
        self.Z13=False
        self.Z14=False

    def Direction(self,X):
        if self.x>X.x:
            self.right=False
            
        elif self.x<X.x:
            self.right=True
        
    def Battelfeild(self,win):
        win.blit(self.BG,(0,0))
    def Computer(self,X):
        pass
    def Control(self,keys):
        if keys[pygame.K_RSHIFT] and keys[pygame.K_RIGHT]:
            if self.count==0:
                self.O9R=True
                
        elif keys[pygame.K_RSHIFT] and keys[pygame.K_LEFT]:
            if self.count==0:
                self.O9L=True

        elif keys[pygame.K_LSHIFT] and keys[pygame.K_RIGHT]:
            if self.count==0:
                self.O11R=True

        elif keys[pygame.K_LSHIFT] and keys[pygame.K_LEFT]:
            if self.count==0:
                self.O11L=True
                
        elif keys[pygame.K_LEFT]:
            if self.count==0:
                self.O3L=True
    
        elif keys[pygame.K_RIGHT]:
            if self.count==0:
                self.O3R=True
            
        elif keys[pygame.K_a]:
            if self.count==0:
                self.O4=True

        elif keys[pygame.K_s]:
            if self.count==0:
                self.O5=True
            
        elif keys[pygame.K_d]:
            if self.count==0:
                self.O6=True
            
        elif keys[pygame.K_UP]:
            if self.count==0:
                self.O7=True

        elif keys[pygame.K_DOWN]:
            if self.count==0:
                self.O8=True

        elif keys[pygame.K_DOWN]:
            if self.count==0:
                self.O12=True
        
        elif keys[pygame.K_SPACE]:
                self.O12=True
    
    def draw(self,win,X):
        if self.logo:
            win.blit(self.Logo,(0,0))
            pygame.draw.rect(win,(255,255,255),(0,0,100,100),1)
            win.blit(self.Name,(110,0))
            win.blit(self.V,(620,40))
            win.blit(self.A,(640,40))

            pygame.draw.rect(win,(0,0,0),(100,40,500,30))
            pygame.draw.rect(win,(153,129,163),(100,40,500,30))
            pygame.draw.rect(win,(255,255,255),(100,40,500,30),1)
            
            pygame.draw.rect(win,(0,0,0),(100,70,250,30))
            pygame.draw.rect(win,(255,223,0),(100,70,250,30))
            pygame.draw.rect(win,(255,255,255),(100,70,250,30),1)
        else:
            win.blit(self.Logo,(1200,0))
            pygame.draw.rect(win,(255,255,255),(1200,0,100,100),1)
            win.blit(self.Name,(1070,0))
            win.blit(self.S,(660,40))

            pygame.draw.rect(win,(0,0,0),(702,40,500,30))
            pygame.draw.rect(win,(153,129,163),(702,40,500,30))
            pygame.draw.rect(win,(255,255,255),(702,40,500,30),1)

            pygame.draw.rect(win,(0,0,0),(952,70,250,30))
            pygame.draw.rect(win,(255,223,0),(952,70,250,30))
            pygame.draw.rect(win,(255,255,255),(952,70,250,30),1)

            
        if self.O3L:
            self.Screen=self.SO3[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            if self.x>10:
                self.x-=1
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+ 1> 36:
                self.count=0
                self.O3L=False
                self.Direction(X)

        elif self.O3R:
            self.Screen=self.SO3[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            if self.x+100<1300:
                self.x+=1
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+ 1> 36:
                self.count=0
                self.O3R=False
                self.Direction(X)

        elif self.O4:
            self.Screen=self.SO4[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.count=0
                self.O4=False
                self.Direction(X)

        elif self.O5:
            self.y=330
            self.Screen=self.SO5[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.count=0
                self.y=300
                self.O5=False
                self.Direction(X)

        elif self.O6:
            self.Screen=self.SO6[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.count=0
                self.O6=False
                self.Direction(X)

        elif self.O7:
            if self.right and 1300 -(X.x+X.width)>100: # 100 self.widht
                if (self.x+100)>X.x-40 and  self.x<X.x+X.width+10  and self.count>18 and self.x+100 < 1300:
                    self.x+=50
            else:
                if X.x>100 :# 100 self.widht
                   if self.x<(X.x+X.width+40)and self.x+100>X.x-10 and self.count>18 and self.x > 20:
                        self.x-=50
                    
            if self.count<12 and self.count>4:
                self.y-=25
            self.Screen=self.SO7[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>36:
                if self.x+100>1300:
                    self.x=self.x-(self.x+100-1300)
                if self.x<10:
                    self.x=10
                self.count=0
                self.y=300
                self.O7=False
                self.Direction(X)


        elif self.O8:
            if self.count>8:
                self.y=360
            self.Screen=self.SO8[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.y=300
                self.count=0
                self.O8=False
                self.Direction(X)
                

        elif self.O9R: 
            if self.right:
                if self.x+140<X.x-20 and self.count>=8: #self.widht 140
                    self.x+=10
                    self.count=7
                self.Screen=self.SO9[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x+88<1300 and self.count>=7: # self.width 88
                    self.x+=10
                    self.count=6
                self.Screen=self.SO10[self.count//4]     
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.right:
                if self.count+1>12:
                    self.y=300
                    self.count=0
                    self.O9R=False
                    self.Direction(X)
            else:
                if self.count+1>8:
                    self.y=300
                    self.count=0
                    self.O9R=False
                    self.Direction(X)
    
            
        elif self.O9L:
            if self.right:
                if self.x>10 and self.count>=7:
                    self.x-=10
                    self.count=6
                self.Screen=self.SO10[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x>X.x+X.width+20 and self.count>=8:
                    self.x-=10
                    self.count=7
                self.Screen=self.SO9[self.count//4]
                
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.right:
                if self.count+1>8:
                    self.y=300
                    self.count=0
                    self.O9L=False
                    self.Direction(X)
            else:
                if self.count+1>12:
                    self.y=300
                    self.count=0
                    self.O9L=False
                    self.Direction(X)
                
            
        
        elif self.O11R:
            if self.right:
                if self.x+127<X.x-20 and self.count>=8: # SELF.WIDTH 127
                    self.x+=10
                    self.count=7
                self.Screen=self.SO11[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x+88<1300 and self.count>=7: # SELF.WIDTH 88
                    self.x+=10
                    self.count=6
                self.Screen=self.SO10[self.count//4]     
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.right:
                if self.count+1>20:
                        self.y=300
                        self.count=0
                        self.O11R=False
                        self.Direction(X)
            else:
                if self.count+1>8:
                        self.y=300
                        self.count=0
                        self.O11R=False
                        self.Direction(X)
                


        elif self.O11L:
            if self.right:
                if self.x>10 and self.count>=7:
                    self.x-=10
                    self.count=6
                self.Screen=self.SO10[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x>X.x+X.width+20 and self.count>=8:
                    self.x-=10
                    self.count=7
                self.Screen=self.SO11[self.count//4]
                
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.right:
                if self.count+1>8:
                    self.y=300
                    self.count=0
                    self.O11L=False
                    self.Direction(X)
            else:
                if self.count+1>20:
                    self.y=300
                    self.count=0
                    self.O11L=False
                    self.Direction(X)
                

        elif self.O12:
            self.SUPER=self.SE[self.SS//4]
            self.SUPER=pygame.transform.scale(self.SUPER,(300,280))
            self.Screen=self.SO12[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            win.blit(self.SUPER,(self.x-100,self.y-160))
            self.count+=1
            self.SS+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.SS+1>28:
                self.SS=0
            if self.count+1>20:
                self.y=self.Base
                self.count=0
                self.SS=0
                self.O12=False
                self.Direction(X)


        #======================= HITS =========================

        elif self.Z1:
            self.Screen=self.SZ1[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+90<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z1=False
                self.Direction(X)

        elif self.Z2:
            self.Screen=self.SZ2[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+93<1300:
                    self.x+=20
                
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z2=False
                self.Direction(X)

        elif self.Z3:
            self.Screen=self.SZ3[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+141<1300:
                    self.x+=20   
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z3=False
                self.Direction(X)
                

        elif self.Z4:
            self.Screen=self.SZ4[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+97<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z4=False
                self.Direction(X)

        elif self.Z5:
            self.Screen=self.SZ5[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+140<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z5=False
                self.Direction(X)
                

        elif self.Z6:
            self.y=self.Base+30
            self.Screen=self.SZ6[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+138<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z6=False
                self.Direction(X)

        elif self.Z7:
            self.y=self.Base+30
            self.Screen=self.SZ7[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+134<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z7=False
                self.Direction(X)

        elif self.Z8:
            self.Screen=self.SZ8[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=5
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+141<1300:
                    self.x+=5
            if self.y>100 and self.hit<20:
                self.y-=8
            if self.hit>20:
                self.y+=30
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>24:
                self.y=self.Base
                self.hit=0
                self.Z8=False
                self.Direction(X)
                
                

        elif self.Z9:
            self.Screen=self.SZ9[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+96<1300:
                    self.x+=20
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z9=False
                self.Direction(X)
                
                
        elif self.Z10:
            self.Screen=self.SZ10[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+89<1300:
                    self.x+=20
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z10=False
                self.Direction(X)

        elif self.Z11:
            self.Screen=self.SZ11[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+107<1300:
                    self.x+=20   
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z11=False
                self.Direction(X)

        elif self.Z12:
            self.Screen=self.SZ12[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+85<1300:
                    self.x+=20
                
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z12=False
                self.Direction(X)
        
        elif self.Z13:
            self.Screen=self.SZ13[self.hit//4]
            if self.right:
                if self.hit>8 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>8 and self.x+96<1300:
                    self.x+=15
                
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z13=False
                self.Direction(X)
                
        elif self.Z14:
            self.Screen=self.SZ14[self.hit//4]
            if self.right:
                if self.hit>4 and self.x>10:
                    self.x-=6
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>4 and self.x+89<1300:
                    self.x+=6
            if self.y>100 and self.hit<16:
                self.y-=5
            if self.hit>=16:
                self.y+=5
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>24:
                self.y=self.Base
                self.hit=0
                self.Z14=False
                self.Direction(X)
                
        elif self.Z0:
            if self.hit<20:
                self.y=self.Base+60
            elif self.hit==21:
                self.y=self.Base+30
            elif self.hit==25:
                self.y=self.Base+20
            elif self.hit==30:
                self.y=self.Base
            self.Screen=self.SZ0[self.hit//6]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>48:
                self.y=self.Base
                self.hit=0
                self.Z0=False
                self.Direction(X)

        
        else:
            self.Screen=self.Stand[self.stand//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.stand+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.stand+1 > 40:
                self.stand=0
                self.Direction(X)

#---------------------------------------------------------------------------------------------------------------------------------
class Saiyan_Vegeta():
    BG=pygame.image.load("data/bg/spaceimg.png").convert_alpha()
    BG=pygame.transform.scale(BG,(1300,600))
    font=pygame.font.SysFont('calibri',40,True,True)
    Name=font.render("Saiyan Vegeta",1,(85,116,233))
    V=font.render("V",1,(85,166,233))
    A=font.render("/",1,(255,223,0))
    S=font.render("S",1,(85,166,233))
    Logo=pygame.image.load("data/Select/A4.png").convert_alpha()
    Logo=pygame.transform.scale(Logo,(100,100))

    SE=[pygame.image.load("data/Effects/A1.png").convert_alpha(),pygame.image.load("data/Effects/A2.png").convert_alpha(),pygame.image.load("data/Effects/A3.png").convert_alpha(),pygame.image.load("data/Effects/A4.png").convert_alpha()]
    Stand=[pygame.image.load("data/VegetaSuperSaiyan/A3.png").convert_alpha(),pygame.image.load("data/VegetaSuperSaiyan/A4.png").convert_alpha(),pygame.image.load("data/VegetaSuperSaiyan/A5.png").convert_alpha(),pygame.image.load("data/VegetaSuperSaiyan/A6.png").convert_alpha()]
    SP3=[pygame.image.load("data/VegetaSuperSaiyan/C1.png").convert_alpha(),pygame.image.load("data/VegetaSuperSaiyan/C2.png").convert_alpha(),pygame.image.load("data/VegetaSuperSaiyan/C3.png").convert_alpha(),pygame.image.load("data/VegetaSuperSaiyan/C4.png").convert_alpha(),pygame.image.load("data/VegetaSuperSaiyan/C5.png").convert_alpha(),pygame.image.load("data/VegetaSuperSaiyan/C6.png").convert_alpha()]
    SP4=[pygame.image.load("data/VegetaSuperSaiyan/D1.png").convert_alpha(),pygame.image.load("data/VegetaSuperSaiyan/D2.png").convert_alpha(),pygame.image.load("data/VegetaSuperSaiyan/D3.png").convert_alpha(),pygame.image.load("data/VegetaSuperSaiyan/D3.png").convert_alpha(),pygame.image.load("data/VegetaSuperSaiyan/D3.png").convert_alpha(),pygame.image.load("data/VegetaSuperSaiyan/D3.png").convert_alpha()]
    SP5=[pygame.image.load("data/VegetaSuperSaiyan/E1.png").convert_alpha(),pygame.image.load("data/VegetaSuperSaiyan/E2.png").convert_alpha(),pygame.image.load("data/VegetaSuperSaiyan/E3.png").convert_alpha(),pygame.image.load("data/VegetaSuperSaiyan/E3.png").convert_alpha(),pygame.image.load("data/VegetaSuperSaiyan/E3.png").convert_alpha(),pygame.image.load("data/VegetaSuperSaiyan/E3.png").convert_alpha()]
    SP6=[pygame.image.load("data/VegetaSuperSaiyan/F1.png").convert_alpha(),pygame.image.load("data/VegetaSuperSaiyan/F2.png").convert_alpha(),pygame.image.load("data/VegetaSuperSaiyan/F3.png").convert_alpha(),pygame.image.load("data/VegetaSuperSaiyan/F3.png").convert_alpha(),pygame.image.load("data/VegetaSuperSaiyan/F3.png").convert_alpha(),pygame.image.load("data/VegetaSuperSaiyan/F3.png").convert_alpha()]
    SP7=[pygame.image.load("data/VegetaSuperSaiyan/G1.png").convert_alpha(),pygame.image.load("data/VegetaSuperSaiyan/G2.png").convert_alpha(),pygame.image.load("data/VegetaSuperSaiyan/G3.png").convert_alpha(),pygame.image.load("data/VegetaSuperSaiyan/G4.png").convert_alpha(),pygame.image.load("data/VegetaSuperSaiyan/G5.png").convert_alpha(),pygame.image.load("data/VegetaSuperSaiyan/G6.png").convert_alpha(),pygame.image.load("data/VegetaSuperSaiyan/G7.png").convert_alpha()]
    SP8=[pygame.image.load("data/VegetaSuperSaiyan/H1.png").convert_alpha(),pygame.image.load("data/VegetaSuperSaiyan/H2.png").convert_alpha(),pygame.image.load("data/VegetaSuperSaiyan/H3.png").convert_alpha(),pygame.image.load("data/VegetaSuperSaiyan/H3.png").convert_alpha(),pygame.image.load("data/VegetaSuperSaiyan/H3.png").convert_alpha(),pygame.image.load("data/VegetaSuperSaiyan/H3.png").convert_alpha()]
    SP9=[pygame.image.load("data/VegetaSuperSaiyan/I1.png").convert_alpha(),pygame.image.load("data/VegetaSuperSaiyan/I2.png").convert_alpha(),pygame.image.load("data/VegetaSuperSaiyan/I3.png").convert_alpha()]
    SP10=[pygame.image.load("data/VegetaSuperSaiyan/J1.png").convert_alpha(),pygame.image.load("data/VegetaSuperSaiyan/J2.png").convert_alpha(),pygame.image.load("data/VegetaSuperSaiyan/J3.png").convert_alpha()]
    SP11=[pygame.image.load("data/VegetaSuperSaiyan/K1.png").convert_alpha(),pygame.image.load("data/VegetaSuperSaiyan/K2.png").convert_alpha(),pygame.image.load("data/VegetaSuperSaiyan/K3.png").convert_alpha()]
    SP12=[pygame.image.load("data/VegetaSuperSaiyan/L1.png").convert_alpha(),pygame.image.load("data/VegetaSuperSaiyan/L2.png").convert_alpha(),pygame.image.load("data/VegetaSuperSaiyan/L3.png").convert_alpha(),pygame.image.load("data/VegetaSuperSaiyan/L4.png").convert_alpha(),pygame.image.load("data/VegetaSuperSaiyan/L5.png").convert_alpha(),pygame.image.load("data/VegetaSuperSaiyan/L6.png").convert_alpha(),pygame.image.load("data/VegetaSuperSaiyan/L7.png").convert_alpha()]

    SZ0=[pygame.image.load("data/VegetaSuperSaiyan/AZ1.png").convert_alpha(),pygame.image.load("data/VegetaSuperSaiyan/AZ2.png").convert_alpha(),pygame.image.load("data/VegetaSuperSaiyan/AZ3.png").convert_alpha(),pygame.image.load("data/VegetaSuperSaiyan/AZ4.png").convert_alpha(),pygame.image.load("data/VegetaSuperSaiyan/AZ5.png").convert_alpha(),pygame.image.load("data/VegetaSuperSaiyan/AZ6.png").convert_alpha(),pygame.image.load("data/VegetaSuperSaiyan/AZ7.png").convert_alpha(),pygame.image.load("data/VegetaSuperSaiyan/AZ8.png").convert_alpha()]
    SZ1=[pygame.image.load("data/VegetaSuperSaiyan/AQ1.png").convert_alpha(),pygame.image.load("data/VegetaSuperSaiyan/AQ2.png").convert_alpha(),pygame.image.load("data/VegetaSuperSaiyan/AQ3.png").convert_alpha(),pygame.image.load("data/VegetaSuperSaiyan/AQ4.png").convert_alpha()]
    SZ2=[pygame.image.load("data/VegetaSuperSaiyan/AR1.png").convert_alpha(),pygame.image.load("data/VegetaSuperSaiyan/AR2.png").convert_alpha()]
    SZ3=[pygame.image.load("data/VegetaSuperSaiyan/AW3.png").convert_alpha(),pygame.image.load("data/VegetaSuperSaiyan/AW4.png").convert_alpha(),pygame.image.load("data/VegetaSuperSaiyan/AW1.png").convert_alpha(),pygame.image.load("data/VegetaSuperSaiyan/AW2.png").convert_alpha()]
    SZ4=[pygame.image.load("data/VegetaSuperSaiyan/AN1.png").convert_alpha(),pygame.image.load("data/VegetaSuperSaiyan/AN2.png").convert_alpha(),pygame.image.load("data/VegetaSuperSaiyan/AN3.png").convert_alpha(),pygame.image.load("data/VegetaSuperSaiyan/AN4.png").convert_alpha()]
    SZ5=[pygame.image.load("data/VegetaSuperSaiyan/AT1.png").convert_alpha(),pygame.image.load("data/VegetaSuperSaiyan/AT2.png").convert_alpha(),pygame.image.load("data/VegetaSuperSaiyan/AT3.png").convert_alpha(),pygame.image.load("data/VegetaSuperSaiyan/AT4.png").convert_alpha()]
    SZ6=[pygame.image.load("data/VegetaSuperSaiyan/AU1.png").convert_alpha(),pygame.image.load("data/VegetaSuperSaiyan/AU2.png").convert_alpha()]
    SZ7=[pygame.image.load("data/VegetaSuperSaiyan/AV1.png").convert_alpha(),pygame.image.load("data/VegetaSuperSaiyan/AV2.png").convert_alpha()]
    SZ8=[pygame.image.load("data/VegetaSuperSaiyan/AX1.png").convert_alpha(),pygame.image.load("data/VegetaSuperSaiyan/AX2.png").convert_alpha(),pygame.image.load("data/VegetaSuperSaiyan/AW1.png").convert_alpha(),pygame.image.load("data/VegetaSuperSaiyan/AW2.png").convert_alpha(),pygame.image.load("data/VegetaSuperSaiyan/AY1.png").convert_alpha(),pygame.image.load("data/VegetaSuperSaiyan/AY2.png").convert_alpha()]
    SZ9=[pygame.image.load("data/VegetaSuperSaiyan/AP1.png").convert_alpha(),pygame.image.load("data/VegetaSuperSaiyan/AP2.png").convert_alpha()]
    SZ10=[pygame.image.load("data/VegetaSuperSaiyan/AS1.png").convert_alpha(),pygame.image.load("data/VegetaSuperSaiyan/AS2.png").convert_alpha()]
    SZ11=[pygame.image.load("data/VegetaSuperSaiyan/AM1.png").convert_alpha(),pygame.image.load("data/VegetaSuperSaiyan/AM2.png").convert_alpha(),pygame.image.load("data/VegetaSuperSaiyan/AM3.png").convert_alpha(),pygame.image.load("data/VegetaSuperSaiyan/AM4.png").convert_alpha()]
    SZ12=[pygame.image.load("data/VegetaSuperSaiyan/AO1.png").convert_alpha(),pygame.image.load("data/VegetaSuperSaiyan/AO2.png").convert_alpha()]
    SZ13=[pygame.image.load("data/VegetaSuperSaiyan/AW3.png").convert_alpha(),pygame.image.load("data/VegetaSuperSaiyan/AW4.png").convert_alpha(),pygame.image.load("data/VegetaSuperSaiyan/AY3.png").convert_alpha(),pygame.image.load("data/VegetaSuperSaiyan/AY4.png").convert_alpha()]
    SZ14=[pygame.image.load("data/VegetaSuperSaiyan/AX3.png").convert_alpha(),pygame.image.load("data/VegetaSuperSaiyan/AX3.png").convert_alpha(),pygame.image.load("data/VegetaSuperSaiyan/AX4.png").convert_alpha(),pygame.image.load("data/VegetaSuperSaiyan/AX4.png").convert_alpha(),pygame.image.load("data/VegetaSuperSaiyan/AY4.png").convert_alpha(),pygame.image.load("data/VegetaSuperSaiyan/AY4.png").convert_alpha()]

    def __init__(self,x,y,right,logo):
        self.x=x
        self.Base=y
        self.y=y
        self.width=None
        self.height=None
        self.health=None
        self.right=right
        self.logo=logo
        self.SS=0
        self.count=0
        self.stand=0
        self.move=0
        self.hit=0
        self.attack=0
        self.Attack=False
        self.EffectWork=False
        self.Effect=None
        self.Screen=None
        self.SUPER=None
        self.POWERX=x
        self.POWERY=y
        self.POWER=None
        self.POWERBLIT=True

        self.P3L=False
        self.P3R=False
        self.P4=False
        self.P5=False
        self.P6=False
        self.P7=False
        self.P8=False
        self.P9L=False # It include D10
        self.P9R=False # It include D10
        self.P11R=False # It include D10
        self.P11L=False # It include D10
        self.P12=False
        self.P13=False
        self.P14=False
        self.P15=False
        self.P16=False
        self.P17=False
        self.P18=False
        self.P19=False
        self.P20=False
        self.P21=False
        self.P22=False
        self.P23=False
        self.P24=False
        self.P25=False
        self.P26=False
        self.P27=False
        self.P28=False
        self.P29=False
        self.P30=False
        self.P31=False
        self.P32=False
        self.P33=False
        self.P34=False
        self.P35=False
        self.P36=False
        self.P37=False
        self.P38=False

        self.Z0=False
        self.Z1=False
        self.Z2=False
        self.Z3=False
        self.Z4=False
        self.Z5=False
        self.Z6=False
        self.Z7=False
        self.Z8=False
        self.Z9=False
        self.Z10=False
        self.Z11=False
        self.Z12=False
        self.Z13=False
        self.Z14=False

    def Direction(self,X):
        if self.x>X.x:
            self.right=False
        elif self.x<X.x:
            self.right=True
        
    def Battelfeild(self,win):
        win.blit(self.BG,(0,0))
    def Computer(self,X):
        pass
    def Control(self,keys):
        if keys[pygame.K_RSHIFT] and keys[pygame.K_RIGHT]:
            if self.count==0:
                self.P9R=True
                
        elif keys[pygame.K_RSHIFT] and keys[pygame.K_LEFT]:
            if self.count==0:
                self.P9L=True

        elif keys[pygame.K_LSHIFT] and keys[pygame.K_RIGHT]:
            if self.count==0:
                self.P11R=True

        elif keys[pygame.K_LSHIFT] and keys[pygame.K_LEFT]:
            if self.count==0:
                self.P11L=True
                
        elif keys[pygame.K_LEFT]:
            if self.count==0:
                self.P3L=True
    
        elif keys[pygame.K_RIGHT]:
            if self.count==0:
                self.P3R=True
            
        elif keys[pygame.K_a]:
            if self.count==0:
                self.P4=True

        elif keys[pygame.K_s]:
            if self.count==0:
                self.P5=True
            
        elif keys[pygame.K_d]:
            if self.count==0:
                self.P6=True
            
        elif keys[pygame.K_UP]:
            if self.count==0:
                self.P7=True

        elif keys[pygame.K_DOWN]:
            if self.count==0:
                self.P8=True

        elif keys[pygame.K_DOWN]:
            if self.count==0:
                self.P12=True
        
        elif keys[pygame.K_SPACE]:
                self.P12=True
    
    def draw(self,win,X):
        if self.logo:
            win.blit(self.Logo,(0,0))
            pygame.draw.rect(win,(255,255,255),(0,0,100,100),1)
            win.blit(self.Name,(110,0))
            win.blit(self.V,(620,40))
            win.blit(self.A,(640,40))

            pygame.draw.rect(win,(0,0,0),(100,40,500,30))
            pygame.draw.rect(win,(85,166,233),(100,40,500,30))
            pygame.draw.rect(win,(255,255,255),(100,40,500,30),1)
            
            pygame.draw.rect(win,(0,0,0),(100,70,250,30))
            pygame.draw.rect(win,(255,223,0),(100,70,250,30))
            pygame.draw.rect(win,(255,255,255),(100,70,250,30),1)
        else:
            win.blit(self.Logo,(1200,0))
            pygame.draw.rect(win,(255,255,255),(0,0,100,100),1)
            win.blit(self.Name,(950,0))
            win.blit(self.S,(660,40))

            pygame.draw.rect(win,(0,0,0),(702,40,500,30))
            pygame.draw.rect(win,(85,166,233),(702,40,500,30))
            pygame.draw.rect(win,(255,255,255),(702,40,500,30),1)

            pygame.draw.rect(win,(0,0,0),(952,70,250,30))
            pygame.draw.rect(win,(255,223,0),(952,70,250,30))
            pygame.draw.rect(win,(255,255,255),(952,70,250,30),1)
            
        if self.P3L:
            self.Screen=self.SP3[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            if self.x>10:
                self.x-=2
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+ 1> 24:
                self.count=0
                self.P3L=False
                self.Direction(X)

        elif self.P3R:
            self.Screen=self.SP3[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            if self.x+96<1300:
                self.x+=2
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+ 1> 24:
                self.count=0
                self.P3R=False
                self.Direction(X)

        elif self.P4:
            self.Screen=self.SP4[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.count=0
                self.P4=False
                self.Direction(X)

        elif self.P5:
            self.y=330
            self.Screen=self.SP5[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.count=0
                self.y=300
                self.P5=False
                self.Direction(X)

        elif self.P6:
            self.Screen=self.SP6[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.count=0
                self.P6=False
                self.Direction(X)

        elif self.P7:
            if self.right and 1300 -(X.x+X.width)>95: # 96 self.widht
                if (self.x+96)>X.x-40 and  self.x<X.x+X.width+10  and self.count>18 and self.x+96 < 1300:
                    self.x+=50
            else:
                if X.x>96 :# 96 self.widht
                   if self.x<(X.x+X.width+40)and self.x+96>X.x-10 and self.count>18 and self.x > 20:
                        self.x-=50
                    
            if self.count<12 and self.count>4:
                self.y-=25
            self.Screen=self.SP7[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>28:
                if self.x+96>1300:
                    self.x=self.x-(self.x+96-1300)
                if self.x<10:
                    self.x=10
                self.count=0
                self.y=300
                self.P7=False
                self.Direction(X)


        elif self.P8:
            if self.count>8:
                self.y=360
            self.Screen=self.SP8[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.y=300
                self.count=0
                self.P8=False
                self.Direction(X)

        elif self.P9R: 
            if self.right:
                if self.x+120<X.x-20 and self.count>=8: #self.widht 120
                    self.x+=10
                    self.count=7
                self.Screen=self.SP9[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x+80<1300 and self.count>=8: # self.width 80
                    self.x+=10
                    self.count=7
                self.Screen=self.SP10[self.count//4]     
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>12:
                self.y=300
                self.count=0
                self.P9R=False
                self.Direction(X)
                

        elif self.P9L:
            if self.right:
                if self.x>10 and self.count>=8:
                    self.x-=10
                    self.count=7
                self.Screen=self.SP10[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x>X.x+X.width+20 and self.count>=8:
                    self.x-=10
                    self.count=7
                self.Screen=self.SP9[self.count//4]
                
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>12:
                self.y=300
                self.count=0
                self.P9L=False
                self.Direction(X)

                
        
        elif self.P11R:
            if self.right:
                if self.x+150<X.x-20 and self.count>=8: # SELF.WIDTH 150
                    self.x+=10
                    self.count=7
                self.Screen=self.SP11[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x+80<1300 and self.count>=8: # SELF.WIDTH 105
                    self.x+=10
                    self.count=7
                self.Screen=self.SP10[self.count//4]     
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>12:
                    self.y=300
                    self.count=0
                    self.P11R=False
                    self.Direction(X) 
                


        elif self.P11L:
            if self.right: 
                if self.x>10 and self.count>=8:
                    self.x-=10
                    self.count=7
                self.Screen=self.SP10[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x>X.x+X.width+20 and self.count>=8:
                    self.x-=10
                    self.count=7
                self.Screen=self.SP11[self.count//4]
                
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>12:
                    self.y=300
                    self.count=0
                    self.P11L=False
                    self.Direction(X)
                
        
        elif self.P12:
            self.SUPER=self.SE[self.SS//4]
            self.SUPER=pygame.transform.scale(self.SUPER,(300,280))
            self.Screen=self.SP12[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            win.blit(self.SUPER,(self.x-100,self.y-160))
            self.count+=1
            self.SS+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.SS+1>16:
                self.SS=0
            if self.count+1>28:
                self.y=self.Base
                self.count=0
                self.SS=0
                self.P12=False
                self.Direction(X)

        #======================= HITS =========================

        elif self.Z1:
            self.Screen=self.SZ1[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+95<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z1=False
                self.Direction(X)

        elif self.Z2:
            self.Screen=self.SZ2[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+86<1300:
                    self.x+=20
                
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z2=False
                self.Direction(X)

        elif self.Z3:
            self.Screen=self.SZ3[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+118<1300:
                    self.x+=20   
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z3=False
                self.Direction(X)
                

        elif self.Z4:
            self.Screen=self.SZ4[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+79<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z4=False
                self.Direction(X)

        elif self.Z5:
            self.Screen=self.SZ5[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+129<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z5=False
                self.Direction(X)
                

        elif self.Z6:
            self.y=self.Base+30
            self.Screen=self.SZ6[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+126<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z6=False
                self.Direction(X)

        elif self.Z7:
            self.y=self.Base+30
            self.Screen=self.SZ7[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+114<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z7=False
                self.Direction(X)

        elif self.Z8:
            self.Screen=self.SZ8[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=5
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+118<1300:
                    self.x+=5
            if self.y>100 and self.hit<20:
                self.y-=8
            if self.hit>20:
                self.y+=30
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>24:
                self.y=self.Base
                self.hit=0
                self.Z8=False
                self.Direction(X)
                
                

        elif self.Z9:
            self.Screen=self.SZ9[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+76<1300:
                    self.x+=20
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z9=False
                self.Direction(X)
                
                
        elif self.Z10:
            self.Screen=self.SZ10[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+85<1300:
                    self.x+=20
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z10=False
                self.Direction(X)

        elif self.Z11:
            self.Screen=self.SZ11[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+84<1300:
                    self.x+=20   
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z11=False
                self.Direction(X)

        elif self.Z12:
            self.Screen=self.SZ12[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+97<1300:
                    self.x+=20
                
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z12=False
                self.Direction(X)
        
        elif self.Z13:
            self.Screen=self.SZ13[self.hit//4]
            if self.right:
                if self.hit>8 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>8 and self.x+95<1300:
                    self.x+=15
                
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z13=False
                self.Direction(X)
                
        elif self.Z14:
            self.Screen=self.SZ14[self.hit//4]
            if self.right:
                if self.hit>4 and self.x>10:
                    self.x-=6
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>4 and self.x+83<1300:
                    self.x+=6
            if self.y>100 and self.hit<16:
                self.y-=5
            if self.hit>=16:
                self.y+=5
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>24:
                self.y=self.Base
                self.hit=0
                self.Z14=False
                self.Direction(X)
                
        elif self.Z0:
            if self.hit<20:
                self.y=self.Base+60
            elif self.hit==21:
                self.y=self.Base+30
            elif self.hit==25:
                self.y=self.Base+20
            elif self.hit==30:
                self.y=self.Base
            self.Screen=self.SZ0[self.hit//6]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>48:
                self.y=self.Base
                self.hit=0
                self.Z0=False
                self.Direction(X)
                
        else:
            self.Screen=self.Stand[self.stand//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.stand+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.stand+1 > 16:
                self.stand=0
                self.Direction(X)

#---------------------------------------------------------------------------------------------------------------------------------
class Nappa():
    BG=pygame.image.load("data/bg/spaceimg.png").convert_alpha()
    BG=pygame.transform.scale(BG,(1300,600))
    font=pygame.font.SysFont('calibri',40,True,True)
    Name=font.render("Nappa",1,(222,174,23))
    V=font.render("V",1,(222,174,23))
    A=font.render("/",1,(255,223,0))
    S=font.render("S",1,(222,174,23))
    Logo=pygame.image.load("data/Select/A9.png").convert_alpha()
    Logo=pygame.transform.scale(Logo,(100,100))
    SE=[pygame.image.load("data/Effects/A5.png").convert_alpha(),pygame.image.load("data/Effects/A6.png").convert_alpha(),pygame.image.load("data/Effects/A7.png").convert_alpha(),pygame.image.load("data/Effects/A8.png").convert_alpha(),pygame.image.load("data/Effects/A9.png").convert_alpha(),pygame.image.load("data/Effects/A10.png").convert_alpha(),pygame.image.load("data/Effects/A11.png").convert_alpha()]
    Stand=[pygame.image.load("data/Nappa/A1.png").convert_alpha(),pygame.image.load("data/Nappa/A2.png").convert_alpha(),pygame.image.load("data/Nappa/A3.png").convert_alpha(),pygame.image.load("data/Nappa/A4.png").convert_alpha()]
    SQ3=[pygame.image.load("data/Nappa/C1.png").convert_alpha(),pygame.image.load("data/Nappa/C2.png").convert_alpha(),pygame.image.load("data/Nappa/C3.png").convert_alpha(),pygame.image.load("data/Nappa/C4.png").convert_alpha()]
    SQ4=[pygame.image.load("data/Nappa/D1.png").convert_alpha(),pygame.image.load("data/Nappa/D2.png").convert_alpha(),pygame.image.load("data/Nappa/D3.png").convert_alpha(),pygame.image.load("data/Nappa/D3.png").convert_alpha(),pygame.image.load("data/Nappa/D3.png").convert_alpha(),pygame.image.load("data/Nappa/D3.png").convert_alpha()]
    SQ5=[pygame.image.load("data/Nappa/E1.png").convert_alpha(),pygame.image.load("data/Nappa/E2.png").convert_alpha(),pygame.image.load("data/Nappa/E3.png").convert_alpha(),pygame.image.load("data/Nappa/E3.png").convert_alpha(),pygame.image.load("data/Nappa/E3.png").convert_alpha(),pygame.image.load("data/Nappa/E3.png").convert_alpha()]
    SQ6=[pygame.image.load("data/Nappa/F1.png").convert_alpha(),pygame.image.load("data/Nappa/F2.png").convert_alpha(),pygame.image.load("data/Nappa/F3.png").convert_alpha(),pygame.image.load("data/Nappa/F3.png").convert_alpha(),pygame.image.load("data/Nappa/F3.png").convert_alpha(),pygame.image.load("data/Nappa/F3.png").convert_alpha()]
    SQ7=[pygame.image.load("data/Nappa/G1.png").convert_alpha(),pygame.image.load("data/Nappa/G2.png").convert_alpha(),pygame.image.load("data/Nappa/G3.png").convert_alpha(),pygame.image.load("data/Nappa/G4.png").convert_alpha(),pygame.image.load("data/Nappa/G5.png").convert_alpha(),pygame.image.load("data/Nappa/G6.png").convert_alpha(),pygame.image.load("data/Nappa/G7.png").convert_alpha()]
    SQ8=[pygame.image.load("data/Nappa/H1.png").convert_alpha(),pygame.image.load("data/Nappa/H2.png").convert_alpha(),pygame.image.load("data/Nappa/H3.png").convert_alpha(),pygame.image.load("data/Nappa/H3.png").convert_alpha(),pygame.image.load("data/Nappa/H3.png").convert_alpha(),pygame.image.load("data/Nappa/H3.png").convert_alpha()]
    SQ9=[pygame.image.load("data/Nappa/I1.png").convert_alpha(),pygame.image.load("data/Nappa/I2.png").convert_alpha(),pygame.image.load("data/Nappa/I3.png").convert_alpha(),pygame.image.load("data/Nappa/I4.png").convert_alpha(),pygame.image.load("data/Nappa/I5.png").convert_alpha(),pygame.image.load("data/Nappa/I6.png").convert_alpha()]
    SQ10=[pygame.image.load("data/Nappa/J1.png").convert_alpha(),pygame.image.load("data/Nappa/J2.png").convert_alpha(),pygame.image.load("data/Nappa/J3.png").convert_alpha(),pygame.image.load("data/Nappa/J4.png").convert_alpha()]
    SQ11=[pygame.image.load("data/Nappa/K1.png").convert_alpha(),pygame.image.load("data/Nappa/K2.png").convert_alpha(),pygame.image.load("data/Nappa/K3.png").convert_alpha(),pygame.image.load("data/Nappa/K4.png").convert_alpha()]
    SQ12=[pygame.image.load("data/Nappa/L1.png").convert_alpha(),pygame.image.load("data/Nappa/L2.png").convert_alpha(),pygame.image.load("data/Nappa/L3.png").convert_alpha(),pygame.image.load("data/Nappa/L4.png").convert_alpha(),pygame.image.load("data/Nappa/L5.png").convert_alpha()]

    SZ0=[pygame.image.load("data/Nappa/AZ1.png").convert_alpha(),pygame.image.load("data/Nappa/AZ2.png").convert_alpha(),pygame.image.load("data/Nappa/AZ3.png").convert_alpha(),pygame.image.load("data/Nappa/AZ4.png").convert_alpha()]
    SZ1=[pygame.image.load("data/Nappa/AQ1.png").convert_alpha(),pygame.image.load("data/Nappa/AQ2.png").convert_alpha(),pygame.image.load("data/Nappa/AQ3.png").convert_alpha(),pygame.image.load("data/Nappa/AQ4.png").convert_alpha()]
    SZ2=[pygame.image.load("data/Nappa/AR1.png").convert_alpha(),pygame.image.load("data/Nappa/AR2.png").convert_alpha()]
    SZ3=[pygame.image.load("data/Nappa/AW3.png").convert_alpha(),pygame.image.load("data/Nappa/AW4.png").convert_alpha(),pygame.image.load("data/Nappa/AW1.png").convert_alpha(),pygame.image.load("data/Nappa/AW2.png").convert_alpha()]
    SZ4=[pygame.image.load("data/Nappa/AN1.png").convert_alpha(),pygame.image.load("data/Nappa/AN2.png").convert_alpha(),pygame.image.load("data/Nappa/AN3.png").convert_alpha(),pygame.image.load("data/Nappa/AN4.png").convert_alpha()]
    SZ5=[pygame.image.load("data/Nappa/AT1.png").convert_alpha(),pygame.image.load("data/Nappa/AT2.png").convert_alpha(),pygame.image.load("data/Nappa/AT3.png").convert_alpha(),pygame.image.load("data/Nappa/AT4.png").convert_alpha()]
    SZ6=[pygame.image.load("data/Nappa/AU1.png").convert_alpha(),pygame.image.load("data/Nappa/AU2.png").convert_alpha()]
    SZ7=[pygame.image.load("data/Nappa/AV1.png").convert_alpha(),pygame.image.load("data/Nappa/AV2.png").convert_alpha()]
    SZ8=[pygame.image.load("data/Nappa/AX1.png").convert_alpha(),pygame.image.load("data/Nappa/AX2.png").convert_alpha(),pygame.image.load("data/Nappa/AW1.png").convert_alpha(),pygame.image.load("data/Nappa/AW2.png").convert_alpha(),pygame.image.load("data/Nappa/AY1.png").convert_alpha(),pygame.image.load("data/Nappa/AY2.png").convert_alpha()]
    SZ9=[pygame.image.load("data/Nappa/AP1.png").convert_alpha(),pygame.image.load("data/Nappa/AP2.png").convert_alpha()]
    SZ10=[pygame.image.load("data/Nappa/AS1.png").convert_alpha(),pygame.image.load("data/Nappa/AS2.png").convert_alpha()]
    SZ11=[pygame.image.load("data/Nappa/AM1.png").convert_alpha(),pygame.image.load("data/Nappa/AM2.png").convert_alpha(),pygame.image.load("data/Nappa/AM3.png").convert_alpha(),pygame.image.load("data/Nappa/AM4.png").convert_alpha()]
    SZ12=[pygame.image.load("data/Nappa/AO1.png").convert_alpha(),pygame.image.load("data/Nappa/AO2.png").convert_alpha()]
    SZ13=[pygame.image.load("data/Nappa/AW3.png").convert_alpha(),pygame.image.load("data/Nappa/AW4.png").convert_alpha(),pygame.image.load("data/Nappa/AY3.png").convert_alpha(),pygame.image.load("data/Nappa/AY4.png").convert_alpha()]
    SZ14=[pygame.image.load("data/Nappa/AX3.png").convert_alpha(),pygame.image.load("data/Nappa/AX3.png").convert_alpha(),pygame.image.load("data/Nappa/AX4.png").convert_alpha(),pygame.image.load("data/Nappa/AX4.png").convert_alpha(),pygame.image.load("data/Nappa/AY4.png").convert_alpha(),pygame.image.load("data/Nappa/AY4.png").convert_alpha()]
    

    def __init__(self,x,y,right,logo):
        self.x=x
        self.Base=y
        self.y=y
        self.width=None
        self.height=None
        self.health=None
        self.right=right
        self.logo=logo
        self.SS=0
        self.count=0
        self.stand=0
        self.move=0
        self.hit=0
        self.attack=0
        self.Attack=False
        self.EffectWork=False
        self.Effect=None
        self.Screen=None
        self.SUPER=None
        self.POWERX=x
        self.POWERY=y
        self.POWER=None
        self.POWERBLIT=True

        self.Q3L=False
        self.Q3R=False
        self.Q4=False
        self.Q5=False
        self.Q6=False
        self.Q7=False
        self.Q8=False
        self.Q9L=False # It include D10
        self.Q9R=False # It include D10
        self.Q11R=False # It include D10
        self.Q11L=False # It include D10
        self.Q12=False
        self.Q13=False
        self.Q14=False
        self.Q15=False
        self.Q16=False
        self.Q17=False
        self.Q18=False
        self.Q19=False
        self.Q20=False
        self.Q21=False
        self.Q22=False
        self.Q23=False
        self.Q24=False
        self.Q25=False
        self.Q26=False
        self.Q27=False
        self.Q28=False
        self.Q29=False
        self.Q30=False
        self.Q31=False
        self.Q32=False
        self.Q33=False
        self.Q34=False
        self.Q35=False
        self.Q36=False
        self.Q37=False
        self.Q38=False

        self.Z0=False
        self.Z1=False
        self.Z2=False
        self.Z3=False
        self.Z4=False
        self.Z5=False
        self.Z6=False
        self.Z7=False
        self.Z8=False
        self.Z9=False
        self.Z10=False
        self.Z11=False
        self.Z12=False
        self.Z13=False
        self.Z14=False

    def Direction(self,X):
        if self.x>X.x+X.width:
            self.right=False
        elif self.x<X.x-X.width:
            self.right=True
        
    def Battelfeild(self,win):
        win.blit(self.BG,(0,0))
    def Computer(self,X):
        pass
    def Control(self,keys):
        if keys[pygame.K_RSHIFT] and keys[pygame.K_RIGHT]:
            if self.count==0:
                self.Q9R=True
                
        elif keys[pygame.K_RSHIFT] and keys[pygame.K_LEFT]:
            if self.count==0:
                self.Q9L=True

        elif keys[pygame.K_LSHIFT] and keys[pygame.K_RIGHT]:
            if self.count==0:
                self.Q11R=True

        elif keys[pygame.K_LSHIFT] and keys[pygame.K_LEFT]:
            if self.count==0:
                self.Q11L=True
                
        elif keys[pygame.K_LEFT]:
            if self.count==0:
                self.Q3L=True
    
        elif keys[pygame.K_RIGHT]:
            if self.count==0:
                self.Q3R=True
            
        elif keys[pygame.K_a]:
            if self.count==0:
                self.Q4=True

        elif keys[pygame.K_s]:
            if self.count==0:
                self.Q5=True
            
        elif keys[pygame.K_d]:
            if self.count==0:
                self.Q6=True
            
        elif keys[pygame.K_UP]:
            if self.count==0:
                self.Q7=True

        elif keys[pygame.K_DOWN]:
            if self.count==0:
                self.Q8=True

        elif keys[pygame.K_DOWN]:
            if self.count==0:
                self.Q12=True
        
        elif keys[pygame.K_SPACE]:
                self.Q12=True
    
    def draw(self,win,X):
        if self.logo:
            win.blit(self.Logo,(0,0))
            pygame.draw.rect(win,(255,255,255),(0,0,100,100),1)
            win.blit(self.Name,(110,0))
            win.blit(self.V,(620,40))
            win.blit(self.A,(640,40))
            
            pygame.draw.rect(win,(0,0,0),(100,40,500,30))
            pygame.draw.rect(win,(222,174,23),(100,40,500,30))
            pygame.draw.rect(win,(255,255,255),(100,40,500,30),1)
            
            pygame.draw.rect(win,(0,0,0),(100,70,250,30))
            pygame.draw.rect(win,(255,223,0),(100,70,250,30))
            pygame.draw.rect(win,(255,255,255),(100,70,250,30),1)
        else:
            win.blit(self.Logo,(1200,0))
            pygame.draw.rect(win,(255,255,255),(1200,0,100,100),1)
            
            win.blit(self.Name,(1070,0))
            win.blit(self.S,(660,40))
            pygame.draw.rect(win,(0,0,0),(702,40,500,30))
            pygame.draw.rect(win,(222,174,23),(702,40,500,30))
            pygame.draw.rect(win,(255,255,255),(702,40,500,30),1)
            
            pygame.draw.rect(win,(0,0,0),(952,70,250,30))
            pygame.draw.rect(win,(255,223,0),(952,70,250,30))
            pygame.draw.rect(win,(255,255,255),(952,70,250,30),1)


            
        if self.Q3L:
            self.Screen=self.SQ3[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            if self.x>10:
                self.x-=2
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+ 1> 16:
                self.count=0
                self.Q3L=False
                self.Direction(X)

        elif self.Q3R:
            self.Screen=self.SQ3[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            if self.x+124<1300:
                self.x+=2
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+ 1> 16:
                self.count=0
                self.Q3R=False
                self.Direction(X)

        elif self.Q4:
            self.Screen=self.SQ4[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.count=0
                self.Q4=False
                self.Direction(X)

        elif self.Q5:
            self.y=330
            self.Screen=self.SQ5[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.count=0
                self.y=300
                self.Q5=False
                self.Direction(X)

        elif self.Q6:
            self.Screen=self.SQ6[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.count=0
                self.Q6=False
                self.Direction(X)

        elif self.Q7:
            if self.right and 1300 -(X.x+X.width)>124: # 124 self.widht
                if (self.x+124)>X.x-40 and  self.x<X.x+X.width+10  and self.count>18 and self.x+124 < 1300:
                    self.x+=50
            else:
                if X.x>124 :# 124 self.widht
                   if self.x<(X.x+X.width+40)and self.x+124>X.x-10 and self.count>18 and self.x > 20:
                        self.x-=50
                    
            if self.count<12 and self.count>4:
                self.y-=25
            self.Screen=self.SQ7[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>28:
                if self.x+124>1300:
                    self.x=self.x-(self.x+124-1300)
                if self.x<10:
                    self.x=10
                self.count=0
                self.y=300
                self.Q7=False
                self.Direction(X)


        elif self.Q8:
            if self.count>8:
                self.y=360
            self.Screen=self.SQ8[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.y=300
                self.count=0
                self.Q8=False
                self.Direction(X)
                

        elif self.Q9R: 
            if self.right:
                if self.x+200<X.x-20 and self.count>=8: #self.widht 200
                    self.x+=10
                    self.count=7
                self.Screen=self.SQ9[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x+155<1300 and self.count>=7: # self.width 155
                    self.x+=10
                    self.count=6
                self.Screen=self.SQ10[self.count//4]     
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.right:
                if self.count+1>24:
                    self.y=300
                    self.count=0
                    self.Q9R=False
                    self.Direction(X)
            else:
                if self.count+1>16:
                    self.y=300
                    self.count=0
                    self.Q9R=False
                    self.Direction(X)
    
            
        elif self.Q9L:
            if self.right:
                if self.x>10 and self.count>=7:
                    self.x-=10
                    self.count=6
                self.Screen=self.SQ10[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x>X.x+X.width+20 and self.count>=8:
                    self.x-=10
                    self.count=7
                self.Screen=self.SQ9[self.count//4]
                
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.right:
                if self.count+1>16:
                    self.y=300
                    self.count=0
                    self.Q9L=False
                    self.Direction(X)
            else:
                if self.count+1>24:
                    self.y=300
                    self.count=0
                    self.Q9L=False
                    self.Direction(X)
                
            
        
        elif self.Q11R:
            if self.right:
                if self.x+173<X.x-20 and self.count>=8: # SELF.WIDTH 173
                    self.x+=10
                    self.count=7
                self.Screen=self.SQ11[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x+155<1300 and self.count>=8: # SELF.WIDTH 155
                    self.x+=10
                    self.count=7
                self.Screen=self.SQ10[self.count//4]     
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>16:
                self.y=300
                self.count=0
                self.Q11R=False
                self.Direction(X)                            


        elif self.Q11L:
            if self.right:
                if self.x>10 and self.count>=8:
                    self.x-=10
                    self.count=7
                self.Screen=self.SQ10[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x>X.x+X.width+20 and self.count>=8:
                    self.x-=10
                    self.count=7
                self.Screen=self.SQ11[self.count//4]
                
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>16:
                self.y=300
                self.count=0
                self.Q11L=False
                self.Direction(X)
                
                

        elif self.Q12:
            self.SUPER=self.SE[self.SS//4]
            self.SUPER=pygame.transform.scale(self.SUPER,(300,280))
            self.Screen=self.SQ12[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            win.blit(self.SUPER,(self.x-100,self.y-160))
            self.count+=1
            self.SS+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.SS+1>28:
                self.SS=0
            if self.count+1>20:
                self.y=self.Base
                self.count=0
                self.SS=0
                self.Q12=False
                self.Direction(X)

        #======================= HITS =========================

        elif self.Z1:
            self.Screen=self.SZ1[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+143<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z1=False
                self.Direction(X)

        elif self.Z2:
            self.Screen=self.SZ2[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+153<1300:
                    self.x+=20
                
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z2=False
                self.Direction(X)

        elif self.Z3:
            self.Screen=self.SZ3[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+164<1300:
                    self.x+=20   
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z3=False
                self.Direction(X)
                

        elif self.Z4:
            self.Screen=self.SZ4[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+146<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z4=False
                self.Direction(X)

        elif self.Z5:
            self.Screen=self.SZ5[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+150<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z5=False
                self.Direction(X)
                

        elif self.Z6:
            self.y=self.Base+30
            self.Screen=self.SZ6[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+129<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z6=False
                self.Direction(X)

        elif self.Z7:
            self.y=self.Base+30
            self.Screen=self.SZ7[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+144<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z7=False
                self.Direction(X)

        elif self.Z8:
            self.Screen=self.SZ8[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=5
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+164<1300:
                    self.x+=5
            if self.y>100 and self.hit<20:
                self.y-=8
            if self.hit>20:
                self.y+=30
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>24:
                self.y=self.Base
                self.hit=0
                self.Z8=False
                self.Direction(X)
                
                

        elif self.Z9:
            self.Screen=self.SZ9[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+129<1300:
                    self.x+=20
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z9=False
                self.Direction(X)
                
                
        elif self.Z10:
            self.Screen=self.SZ10[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+126<1300:
                    self.x+=20
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z10=False
                self.Direction(X)

        elif self.Z11:
            self.Screen=self.SZ11[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+148<1300:
                    self.x+=20   
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z11=False
                self.Direction(X)

        elif self.Z12:
            self.Screen=self.SZ12[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+150<1300:
                    self.x+=20
                
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z12=False
                self.Direction(X)
        
        elif self.Z13:
            self.Screen=self.SZ13[self.hit//4]
            if self.right:
                if self.hit>8 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>8 and self.x+141<1300:
                    self.x+=15
                
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z13=False
                self.Direction(X)
                
        elif self.Z14:
            self.Screen=self.SZ14[self.hit//4]
            if self.right:
                if self.hit>4 and self.x>10:
                    self.x-=6
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>4 and self.x+144<1300:
                    self.x+=6
            if self.y>100 and self.hit<16:
                self.y-=5
            if self.hit>=16:
                self.y+=5
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>24:
                self.y=self.Base
                self.hit=0
                self.Z14=False
                self.Direction(X)
                
        elif self.Z0:
            if self.hit<20:
                self.y=self.Base+60
            elif self.hit==21:
                self.y=self.Base+30
            elif self.hit==25:
                self.y=self.Base+20
            elif self.hit==30:
                self.y=self.Base
            self.Screen=self.SZ0[self.hit//6]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>24:
                self.y=self.Base
                self.hit=0
                self.Z0=False
                self.Direction(X)
        
        
        else:
            self.Screen=self.Stand[self.stand//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.stand+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.stand+1 > 16:
                self.stand=0
                self.Direction(X)


#---------------------------------------------------------------------------------------------------------------------------------
class Goku():
    BG=pygame.image.load("data/bg/spaceimg.png").convert_alpha()
    BG=pygame.transform.scale(BG,(1300,600))
    font=pygame.font.SysFont('calibri',40,True,True)
    Name=font.render("Goku",1,(231,97,45))
    V=font.render("V",1,(231,97,45))
    A=font.render("/",1,(255,223,0))
    S=font.render("S",1,(231,97,45))
    Logo=pygame.image.load("data/Select/A14.png").convert_alpha()
    Logo=pygame.transform.scale(Logo,(100,100))
    SE=[pygame.image.load("data/Effects/A1.png").convert_alpha(),pygame.image.load("data/Effects/A2.png").convert_alpha(),pygame.image.load("data/Effects/A3.png").convert_alpha(),pygame.image.load("data/Effects/A4.png").convert_alpha()] 
    Stand=[pygame.image.load("data/Goku/A1.png").convert_alpha(),pygame.image.load("data/Goku/A2.png").convert_alpha(),pygame.image.load("data/Goku/A3.png").convert_alpha(),pygame.image.load("data/Goku/A4.png").convert_alpha()]
    SR3=[pygame.image.load("data/Goku/C1.png").convert_alpha(),pygame.image.load("data/Goku/C2.png").convert_alpha(),pygame.image.load("data/Goku/C3.png").convert_alpha(),pygame.image.load("data/Goku/C4.png").convert_alpha(),pygame.image.load("data/Goku/C5.png").convert_alpha(),pygame.image.load("data/Goku/C6.png").convert_alpha()]
    SR4=[pygame.image.load("data/Goku/D1.png").convert_alpha(),pygame.image.load("data/Goku/D2.png").convert_alpha(),pygame.image.load("data/Goku/D3.png").convert_alpha(),pygame.image.load("data/Goku/D3.png").convert_alpha(),pygame.image.load("data/Goku/D3.png").convert_alpha(),pygame.image.load("data/Goku/D3.png").convert_alpha()]
    SR5=[pygame.image.load("data/Goku/E1.png").convert_alpha(),pygame.image.load("data/Goku/E2.png").convert_alpha(),pygame.image.load("data/Goku/E3.png").convert_alpha(),pygame.image.load("data/Goku/E3.png").convert_alpha(),pygame.image.load("data/Goku/E3.png").convert_alpha(),pygame.image.load("data/Goku/E3.png").convert_alpha()]
    SR6=[pygame.image.load("data/Goku/F1.png ").convert_alpha(),pygame.image.load("data/Goku/F2.png").convert_alpha(),pygame.image.load("data/Goku/F3.png").convert_alpha(),pygame.image.load("data/Goku/F3.png").convert_alpha(),pygame.image.load("data/Goku/F3.png").convert_alpha(),pygame.image.load("data/Goku/F3.png").convert_alpha()]
    SR7=[pygame.image.load("data/Goku/G1.png").convert_alpha(),pygame.image.load("data/Goku/G2.png").convert_alpha(),pygame.image.load("data/Goku/G3.png").convert_alpha(),pygame.image.load("data/Goku/G4.png").convert_alpha(),pygame.image.load("data/Goku/G5.png").convert_alpha(),pygame.image.load("data/Goku/G6.png").convert_alpha(),pygame.image.load("data/Goku/G7.png").convert_alpha(),pygame.image.load("data/Goku/G8.png").convert_alpha()]
    SR8=[pygame.image.load("data/Goku/H1.png").convert_alpha(),pygame.image.load("data/Goku/H2.png").convert_alpha(),pygame.image.load("data/Goku/H3.png").convert_alpha(),pygame.image.load("data/Goku/H3.png").convert_alpha(),pygame.image.load("data/Goku/H3.png").convert_alpha(),pygame.image.load("data/Goku/H3.png").convert_alpha()]
    SR9=[pygame.image.load("data/Goku/I1.png").convert_alpha(),pygame.image.load("data/Goku/I2.png").convert_alpha(),pygame.image.load("data/Goku/I3.png").convert_alpha()]
    SR10=[pygame.image.load("data/Goku/J1.png").convert_alpha(),pygame.image.load("data/Goku/J2.png").convert_alpha(),pygame.image.load("data/Goku/J3.png").convert_alpha()]
    SR11=[pygame.image.load("data/Goku/K1.png").convert_alpha(),pygame.image.load("data/Goku/K2.png").convert_alpha(),pygame.image.load("data/Goku/K3.png").convert_alpha()]
    SR12=[pygame.image.load("data/Goku/L1.png").convert_alpha(),pygame.image.load("data/Goku/L2.png").convert_alpha(),pygame.image.load("data/Goku/L3.png").convert_alpha(),pygame.image.load("data/Goku/L4.png").convert_alpha(),pygame.image.load("data/Goku/L5.png").convert_alpha()]

    SZ0=[pygame.image.load("data/Goku/AZ1.png").convert_alpha(),pygame.image.load("data/Goku/AZ2.png").convert_alpha(),pygame.image.load("data/Goku/AZ3.png").convert_alpha(),pygame.image.load("data/Goku/AZ4.png").convert_alpha(),pygame.image.load("data/Goku/AZ5.png").convert_alpha(),pygame.image.load("data/Goku/AZ6.png").convert_alpha(),pygame.image.load("data/Goku/AZ7.png").convert_alpha(),pygame.image.load("data/Goku/AZ7.png").convert_alpha()]
    SZ1=[pygame.image.load("data/Goku/AQ1.png").convert_alpha(),pygame.image.load("data/Goku/AQ2.png").convert_alpha(),pygame.image.load("data/Goku/AQ3.png").convert_alpha(),pygame.image.load("data/Goku/AQ4.png").convert_alpha()]
    SZ2=[pygame.image.load("data/Goku/AR1.png").convert_alpha(),pygame.image.load("data/Goku/AR2.png").convert_alpha()]
    SZ3=[pygame.image.load("data/Goku/AW3.png").convert_alpha(),pygame.image.load("data/Goku/AW4.png").convert_alpha(),pygame.image.load("data/Goku/AW1.png").convert_alpha(),pygame.image.load("data/Goku/AW2.png").convert_alpha()]
    SZ4=[pygame.image.load("data/Goku/AN1.png").convert_alpha(),pygame.image.load("data/Goku/AN2.png").convert_alpha(),pygame.image.load("data/Goku/AN3.png").convert_alpha(),pygame.image.load("data/Goku/AN4.png").convert_alpha()]
    SZ5=[pygame.image.load("data/Goku/AT1.png").convert_alpha(),pygame.image.load("data/Goku/AT2.png").convert_alpha(),pygame.image.load("data/Goku/AT3.png").convert_alpha(),pygame.image.load("data/Goku/AT4.png").convert_alpha()]
    SZ6=[pygame.image.load("data/Goku/AU1.png").convert_alpha(),pygame.image.load("data/Goku/AU2.png").convert_alpha()]
    SZ7=[pygame.image.load("data/Goku/AV1.png").convert_alpha(),pygame.image.load("data/Goku/AV2.png").convert_alpha()]
    SZ8=[pygame.image.load("data/Goku/AX1.png").convert_alpha(),pygame.image.load("data/Goku/AX2.png").convert_alpha(),pygame.image.load("data/Goku/AW1.png").convert_alpha(),pygame.image.load("data/Goku/AW2.png").convert_alpha(),pygame.image.load("data/Goku/AY1.png").convert_alpha(),pygame.image.load("data/Goku/AY2.png").convert_alpha()]
    SZ9=[pygame.image.load("data/Goku/AP1.png").convert_alpha(),pygame.image.load("data/Goku/AP2.png").convert_alpha()]
    SZ10=[pygame.image.load("data/Goku/AS1.png").convert_alpha(),pygame.image.load("data/Goku/AS2.png").convert_alpha()]
    SZ11=[pygame.image.load("data/Goku/AM1.png").convert_alpha(),pygame.image.load("data/Goku/AM2.png").convert_alpha(),pygame.image.load("data/Goku/AM3.png").convert_alpha(),pygame.image.load("data/Goku/AM4.png").convert_alpha()]
    SZ12=[pygame.image.load("data/Goku/AO1.png").convert_alpha(),pygame.image.load("data/Goku/AO2.png").convert_alpha()]
    SZ13=[pygame.image.load("data/Goku/AW3.png").convert_alpha(),pygame.image.load("data/Goku/AW4.png").convert_alpha(),pygame.image.load("data/Goku/AY3.png").convert_alpha(),pygame.image.load("data/Goku/AY4.png").convert_alpha()]
    SZ14=[pygame.image.load("data/Goku/AX3.png").convert_alpha(),pygame.image.load("data/Goku/AX3.png").convert_alpha(),pygame.image.load("data/Goku/AX4.png").convert_alpha(),pygame.image.load("data/Goku/AX4.png").convert_alpha(),pygame.image.load("data/Goku/AY4.png").convert_alpha(),pygame.image.load("data/Goku/AY4.png").convert_alpha()]
    
    def __init__(self,x,y,right,logo):
        self.x=x
        self.Base=y
        self.y=y
        self.width=None
        self.height=None
        self.health=None
        self.right=right
        self.logo=logo
        self.SS=0
        self.count=0
        self.stand=0
        self.move=0
        self.hit=0
        self.attack=0
        self.Attack=False
        self.EffectWork=False
        self.Effect=None
        self.Screen=None
        self.SUPER=None
        self.POWERX=x
        self.POWERY=y
        self.POWER=None
        self.POWERBLIT=True

        self.R3L=False
        self.R3R=False
        self.R4=False
        self.R5=False
        self.R6=False
        self.R7=False
        self.R8=False
        self.R9L=False # It include D10
        self.R9R=False # It include D10
        self.R11R=False # It include D10
        self.R11L=False # It include D10
        self.R12=False
        self.R13=False
        self.R14=False
        self.R15=False
        self.R16=False
        self.R17=False
        self.R18=False
        self.R19=False
        self.R20=False
        self.R21=False
        self.R22=False
        self.R23=False
        self.R24=False
        self.R25=False
        self.R26=False
        self.R27=False
        self.R28=False
        self.R29=False
        self.R30=False
        self.R31=False
        self.R32=False
        self.R33=False
        self.R34=False
        self.R35=False
        self.R36=False
        self.R37=False
        self.R38=False

        self.Z0=False
        self.Z1=False
        self.Z2=False
        self.Z3=False
        self.Z4=False
        self.Z5=False
        self.Z6=False
        self.Z7=False
        self.Z8=False
        self.Z9=False
        self.Z10=False
        self.Z11=False
        self.Z12=False
        self.Z13=False
        self.Z14=False

    def Direction(self,X):
        if self.x>X.x:
            self.right=False
        elif self.x<X.x:
            self.right=True
        
    def Battelfeild(self,win):
        win.blit(self.BG,(0,0))
    def Computer(self,X):
        pass
    def Control(self,keys):
        if keys[pygame.K_RSHIFT] and keys[pygame.K_RIGHT]:
            if self.count==0:
                self.R9R=True
                
        elif keys[pygame.K_RSHIFT] and keys[pygame.K_LEFT]:
            if self.count==0:
                self.R9L=True

        elif keys[pygame.K_LSHIFT] and keys[pygame.K_RIGHT]:
            if self.count==0:
                self.R11R=True

        elif keys[pygame.K_LSHIFT] and keys[pygame.K_LEFT]:
            if self.count==0:
                self.R11L=True
                
        elif keys[pygame.K_LEFT]:
            if self.count==0:
                self.R3L=True
    
        elif keys[pygame.K_RIGHT]:
            if self.count==0:
                self.R3R=True
            
        elif keys[pygame.K_a]:
            if self.count==0:
                self.R4=True

        elif keys[pygame.K_s]:
            if self.count==0:
                self.R5=True
            
        elif keys[pygame.K_d]:
            if self.count==0:
                self.R6=True
            
        elif keys[pygame.K_UP]:
            if self.count==0:
                self.R7=True

        elif keys[pygame.K_DOWN]:
            if self.count==0:
                self.R8=True

        elif keys[pygame.K_DOWN]:
            if self.count==0:
                self.R12=True
        
        elif keys[pygame.K_SPACE]:
                self.R12=True
    
    def draw(self,win,X):
        if self.logo:
            win.blit(self.Logo,(0,0))
            pygame.draw.rect(win,(255,255,255),(0,0,100,100),1)
            win.blit(self.Name,(110,0))
            win.blit(self.V,(620,40))
            win.blit(self.A,(640,40))
            
            pygame.draw.rect(win,(0,0,0),(100,40,500,30))
            pygame.draw.rect(win,(231,97,45),(100,40,500,30))
            pygame.draw.rect(win,(255,255,255),(100,40,500,30),1)
            
            pygame.draw.rect(win,(0,0,0),(100,70,250,30))
            pygame.draw.rect(win,(255,223,0),(100,70,250,30))
            pygame.draw.rect(win,(255,255,255),(100,70,250,30),1)
        else:
            win.blit(self.Logo,(1200,0))
            pygame.draw.rect(win,(255,255,255),(1200,0,100,100),1)
            win.blit(self.Name,(1100,0))
            win.blit(self.S,(660,40))
            
            pygame.draw.rect(win,(0,0,0),(702,40,500,30))
            pygame.draw.rect(win,(231,97,45),(702,40,500,30))
            pygame.draw.rect(win,(255,255,255),(702,40,500,30),1)
            
            pygame.draw.rect(win,(0,0,0),(952,70,250,30))
            pygame.draw.rect(win,(255,223,0),(952,70,250,30))
            pygame.draw.rect(win,(255,255,255),(952,70,250,30),1)
            
        if self.R3L:
            self.Screen=self.SR3[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            if self.x>10:
                self.x-=2
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+ 1> 24:
                self.count=0
                self.R3L=False
                self.Direction(X)

        elif self.R3R:
            self.Screen=self.SR3[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            if self.x+111<1300:
                self.x+=2
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+ 1> 24:
                self.count=0
                self.R3R=False
                self.Direction(X)

        elif self.R4:
            self.Screen=self.SR4[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.count=0
                self.R4=False
                self.Direction(X)

        elif self.R5:
            self.y=330
            self.Screen=self.SR5[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.count=0
                self.y=300
                self.R5=False
                self.Direction(X)

        elif self.R6:
            self.Screen=self.SR6[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.count=0
                self.R6=False
                self.Direction(X)

        elif self.R7:
            if self.right and 1300 -(X.x+X.width)>111: # 111 self.widht
                if (self.x+111)>X.x-40 and  self.x<X.x+X.width+10  and self.count>18 and self.x+111 < 1300:
                    self.x+=50
            else:
                if X.x>111 :# 111 self.widht
                   if self.x<(X.x+X.width+40)and self.x+111>X.x-10 and self.count>18 and self.x > 20:
                        self.x-=50
                    
            if self.count<12 and self.count>4:
                self.y-=25
            self.Screen=self.SR7[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>32:
                if self.x+111>1300:
                    self.x=self.x-(self.x+111-1300)
                if self.x<10:
                    self.x=10
                self.count=0
                self.y=300
                self.R7=False
                self.Direction(X)


        elif self.R8:
            if self.count>8:
                self.y=360
            self.Screen=self.SR8[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.y=300
                self.count=0
                self.R8=False
                self.Direction(X)

        elif self.R9R: 
            if self.right:
                if self.x+143<X.x-20 and self.count>=8: #self.widht 143
                    self.x+=10
                    self.count=7
                self.Screen=self.SR9[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x+106<1300 and self.count>=8: # self.width 106
                    self.x+=10
                    self.count=7
                self.Screen=self.SR10[self.count//4]     
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>12:
                self.y=300
                self.count=0
                self.R9R=False
                self.Direction(X)
                

        elif self.R9L:
            if self.right:
                if self.x>10 and self.count>=8:
                    self.x-=10
                    self.count=7
                self.Screen=self.SR10[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x>X.x+X.width+20 and self.count>=8:
                    self.x-=10
                    self.count=7
                self.Screen=self.SR9[self.count//4]
                
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>12:
                self.y=300
                self.count=0
                self.R9L=False
                self.Direction(X)

                
        
        elif self.R11R:
            if self.right:
                if self.x+165<X.x-20 and self.count>=8: # SELF.WIDTH 165
                    self.x+=10
                    self.count=7
                self.Screen=self.SR11[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x+106<1300 and self.count>=8: # SELF.WIDTH 106
                    self.x+=10
                    self.count=7
                self.Screen=self.SR10[self.count//4]     
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>12:
                    self.y=300
                    self.count=0
                    self.R11R=False
                    self.Direction(X) 
                


        elif self.R11L:
            if self.right: 
                if self.x>10 and self.count>=8:
                    self.x-=10
                    self.count=7
                self.Screen=self.SR10[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x>X.x+X.width+20 and self.count>=8:
                    self.x-=10
                    self.count=7
                self.Screen=self.SR11[self.count//4]
                
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>12:
                    self.y=300
                    self.count=0
                    self.R11L=False
                    self.Direction(X)
                
        elif self.R12:
            self.SUPER=self.SE[self.SS//4]
            self.SUPER=pygame.transform.scale(self.SUPER,(300,280))
            self.Screen=self.SR12[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            win.blit(self.SUPER,(self.x-100,self.y-160))
            self.count+=1
            self.SS+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.SS+1>16:
                self.SS=0
            if self.count+1>20:
                self.y=self.Base
                self.count=0
                self.SS=0
                self.R12=False
                self.Direction(X)
                
        #======================= HITS =========================

        elif self.Z1:
            self.Screen=self.SZ1[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+100<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z1=False
                self.Direction(X)

        elif self.Z2:
            self.Screen=self.SZ2[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+95<1300:
                    self.x+=20
                
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z2=False
                self.Direction(X)

        elif self.Z3:
            self.Screen=self.SZ3[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+143<1300:
                    self.x+=20   
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z3=False
                self.Direction(X)
                

        elif self.Z4:
            self.Screen=self.SZ4[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+94<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z4=False
                self.Direction(X)

        elif self.Z5:
            self.Screen=self.SZ5[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+117<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z5=False
                self.Direction(X)
                

        elif self.Z6:
            self.y=self.Base+30
            self.Screen=self.SZ6[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+124<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z6=False
                self.Direction(X)

        elif self.Z7:
            self.y=self.Base+30
            self.Screen=self.SZ7[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+111<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z7=False
                self.Direction(X)

        elif self.Z8:
            self.Screen=self.SZ8[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=5
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+143<1300:
                    self.x+=5
            if self.y>100 and self.hit<20:
                self.y-=8
            if self.hit>20:
                self.y+=30
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>24:
                self.y=self.Base
                self.hit=0
                self.Z8=False
                self.Direction(X)
                
                

        elif self.Z9:
            self.Screen=self.SZ9[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+75<1300:
                    self.x+=20
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z9=False
                self.Direction(X)
                
                
        elif self.Z10:
            self.Screen=self.SZ10[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+85<1300:
                    self.x+=20
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z10=False
                self.Direction(X)

        elif self.Z11:
            self.Screen=self.SZ11[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+115<1300:
                    self.x+=20   
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z11=False
                self.Direction(X)

        elif self.Z12:
            self.Screen=self.SZ12[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+98<1300:
                    self.x+=20
                
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z12=False
                self.Direction(X)
        
        elif self.Z13:
            self.Screen=self.SZ13[self.hit//4]
            if self.right:
                if self.hit>8 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>8 and self.x+100<1300:
                    self.x+=15
                
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z13=False
                self.Direction(X)
                
        elif self.Z14:
            self.Screen=self.SZ14[self.hit//4]
            if self.right:
                if self.hit>4 and self.x>10:
                    self.x-=6
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>4 and self.x+92<1300:
                    self.x+=6
            if self.y>100 and self.hit<16:
                self.y-=5
            if self.hit>=16:
                self.y+=5
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>24:
                self.y=self.Base
                self.hit=0
                self.Z14=False
                self.Direction(X)
                
        elif self.Z0:
            if self.hit<20:
                self.y=self.Base+60
            elif self.hit==21:
                self.y=self.Base+30
            elif self.hit==25:
                self.y=self.Base+20
            elif self.hit==30:
                self.y=self.Base
            self.Screen=self.SZ0[self.hit//6]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>48:
                self.y=self.Base
                self.hit=0
                self.Z0=False
                self.Direction(X)

        else:
            self.Screen=self.Stand[self.stand//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.stand+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.stand+1 > 16:
                self.stand=0
                self.Direction(X)

#---------------------------------------------------------------------------------------------------------------------------------
class Frieza():
    BG=pygame.image.load("data/bg/spaceimg.png").convert_alpha()
    BG=pygame.transform.scale(BG,(1300,600))
    font=pygame.font.SysFont('calibri',40,True,True)
    Name=font.render("Frieza",1,(130,78,170))
    V=font.render("V",1,(130,78,170))
    A=font.render("/",1,(255,223,0))
    S=font.render("S",1,(130,78,170))
    Logo=pygame.image.load("data/Select/A19.png").convert_alpha()
    Logo=pygame.transform.scale(Logo,(100,100))
    SE=[pygame.image.load("data/Effects/A5.png").convert_alpha(),pygame.image.load("data/Effects/A6.png").convert_alpha(),pygame.image.load("data/Effects/A7.png").convert_alpha(),pygame.image.load("data/Effects/A8.png").convert_alpha(),pygame.image.load("data/Effects/A9.png").convert_alpha(),pygame.image.load("data/Effects/A10.png").convert_alpha(),pygame.image.load("data/Effects/A11.png").convert_alpha()]
    Stand=[pygame.image.load("data/Frieza/A1.png").convert_alpha(),pygame.image.load("data/Frieza/A2.png").convert_alpha(),pygame.image.load("data/Frieza/A3.png").convert_alpha(),pygame.image.load("data/Frieza/A4.png").convert_alpha(),pygame.image.load("data/Frieza/A5.png").convert_alpha(),pygame.image.load("data/Frieza/A6.png").convert_alpha(),pygame.image.load("data/Frieza/A7.png").convert_alpha(),pygame.image.load("data/Frieza/A8.png").convert_alpha(),pygame.image.load("data/Frieza/A9.png").convert_alpha(),pygame.image.load("data/Frieza/A10.png").convert_alpha()]
    SS3=[pygame.image.load("data/Frieza/C1.png").convert_alpha(),pygame.image.load("data/Frieza/C2.png").convert_alpha(),pygame.image.load("data/Frieza/C3.png").convert_alpha(),pygame.image.load("data/Frieza/C4.png").convert_alpha(),pygame.image.load("data/Frieza/C5.png").convert_alpha(),pygame.image.load("data/Frieza/C6.png").convert_alpha(),pygame.image.load("data/Frieza/C7.png").convert_alpha(),pygame.image.load("data/Frieza/C8.png").convert_alpha()]
    SS4=[pygame.image.load("data/Frieza/D1.png").convert_alpha(),pygame.image.load("data/Frieza/D2.png").convert_alpha(),pygame.image.load("data/Frieza/D3.png").convert_alpha(),pygame.image.load("data/Frieza/D3.png").convert_alpha(),pygame.image.load("data/Frieza/D3.png").convert_alpha(),pygame.image.load("data/Frieza/D3.png").convert_alpha()]
    SS5=[pygame.image.load("data/Frieza/E1.png").convert_alpha(),pygame.image.load("data/Frieza/E2.png").convert_alpha(),pygame.image.load("data/Frieza/E3.png").convert_alpha(),pygame.image.load("data/Frieza/E3.png").convert_alpha(),pygame.image.load("data/Frieza/E3.png").convert_alpha(),pygame.image.load("data/Frieza/E3.png").convert_alpha()]
    SS6=[pygame.image.load("data/Frieza/F1.png").convert_alpha(),pygame.image.load("data/Frieza/F2.png").convert_alpha(),pygame.image.load("data/Frieza/F3.png").convert_alpha(),pygame.image.load("data/Frieza/F3.png").convert_alpha(),pygame.image.load("data/Frieza/F3.png").convert_alpha(),pygame.image.load("data/Frieza/F3.png").convert_alpha()]
    SS7=[pygame.image.load("data/Frieza/G1.png").convert_alpha(),pygame.image.load("data/Frieza/G2.png").convert_alpha(),pygame.image.load("data/Frieza/G3.png").convert_alpha(),pygame.image.load("data/Frieza/G4.png").convert_alpha(),pygame.image.load("data/Frieza/G5.png").convert_alpha(),pygame.image.load("data/Frieza/G6.png").convert_alpha(),pygame.image.load("data/Frieza/G7.png").convert_alpha()]
    SS8=[pygame.image.load("data/Frieza/H1.png").convert_alpha(),pygame.image.load("data/Frieza/H2.png").convert_alpha(),pygame.image.load("data/Frieza/H3.png").convert_alpha(),pygame.image.load("data/Frieza/H3.png").convert_alpha(),pygame.image.load("data/Frieza/H3.png").convert_alpha(),pygame.image.load("data/Frieza/H3.png").convert_alpha()]
    SS9=[pygame.image.load("data/Frieza/I1.png").convert_alpha(),pygame.image.load("data/Frieza/I2.png").convert_alpha(),pygame.image.load("data/Frieza/I3.png").convert_alpha()]
    SS10=[pygame.image.load("data/Frieza/J1.png").convert_alpha(),pygame.image.load("data/Frieza/J2.png").convert_alpha(),pygame.image.load("data/Frieza/J3.png").convert_alpha()]
    SS11=[pygame.image.load("data/Frieza/K1.png").convert_alpha(),pygame.image.load("data/Frieza/K2.png").convert_alpha(),pygame.image.load("data/Frieza/K3.png").convert_alpha(),pygame.image.load("data/Frieza/K4.png").convert_alpha(),pygame.image.load("data/Frieza/K5.png").convert_alpha()]
    SS12=[pygame.image.load("data/Frieza/L1.png").convert_alpha(),pygame.image.load("data/Frieza/L2.png").convert_alpha(),pygame.image.load("data/Frieza/L3.png").convert_alpha(),pygame.image.load("data/Frieza/L4.png").convert_alpha(),pygame.image.load("data/Frieza/L5.png").convert_alpha(),pygame.image.load("data/Frieza/L6.png").convert_alpha()]


    SZ0=[pygame.image.load("data/Goku/AZ1.png").convert_alpha(),pygame.image.load("data/Goku/AZ2.png").convert_alpha(),pygame.image.load("data/Goku/AZ3.png").convert_alpha(),pygame.image.load("data/Goku/AZ4.png").convert_alpha(),pygame.image.load("data/Goku/AZ5.png").convert_alpha(),pygame.image.load("data/Goku/AZ6.png").convert_alpha(),pygame.image.load("data/Goku/AZ7.png").convert_alpha(),pygame.image.load("data/Goku/AZ7.png").convert_alpha()]
    SZ1=[pygame.image.load("data/Goku/AQ1.png").convert_alpha(),pygame.image.load("data/Goku/AQ2.png").convert_alpha(),pygame.image.load("data/Goku/AQ3.png").convert_alpha(),pygame.image.load("data/Goku/AQ4.png").convert_alpha()]
    SZ2=[pygame.image.load("data/Goku/AR1.png").convert_alpha(),pygame.image.load("data/Goku/AR2.png").convert_alpha()]
    SZ3=[pygame.image.load("data/Goku/AW3.png").convert_alpha(),pygame.image.load("data/Goku/AW4.png").convert_alpha(),pygame.image.load("data/Goku/AW1.png").convert_alpha(),pygame.image.load("data/Goku/AW2.png").convert_alpha()]
    SZ4=[pygame.image.load("data/Goku/AN1.png").convert_alpha(),pygame.image.load("data/Goku/AN2.png").convert_alpha(),pygame.image.load("data/Goku/AN3.png").convert_alpha(),pygame.image.load("data/Goku/AN4.png").convert_alpha()]
    SZ5=[pygame.image.load("data/Goku/AT1.png").convert_alpha(),pygame.image.load("data/Goku/AT2.png").convert_alpha(),pygame.image.load("data/Goku/AT3.png").convert_alpha(),pygame.image.load("data/Goku/AT4.png").convert_alpha()]
    SZ6=[pygame.image.load("data/Goku/AU1.png").convert_alpha(),pygame.image.load("data/Goku/AU2.png").convert_alpha()]
    SZ7=[pygame.image.load("data/Goku/AV1.png").convert_alpha(),pygame.image.load("data/Goku/AV2.png").convert_alpha()]
    SZ8=[pygame.image.load("data/Goku/AX1.png").convert_alpha(),pygame.image.load("data/Goku/AX2.png").convert_alpha(),pygame.image.load("data/Goku/AW1.png").convert_alpha(),pygame.image.load("data/Goku/AW2.png").convert_alpha(),pygame.image.load("data/Goku/AY1.png").convert_alpha(),pygame.image.load("data/Goku/AY2.png").convert_alpha()]
    SZ9=[pygame.image.load("data/Goku/AP1.png").convert_alpha(),pygame.image.load("data/Goku/AP2.png").convert_alpha()]
    SZ10=[pygame.image.load("data/Goku/AS1.png").convert_alpha(),pygame.image.load("data/Goku/AS2.png").convert_alpha()]
    SZ11=[pygame.image.load("data/Goku/AM1.png").convert_alpha(),pygame.image.load("data/Goku/AM2.png").convert_alpha(),pygame.image.load("data/Goku/AM3.png").convert_alpha(),pygame.image.load("data/Goku/AM4.png").convert_alpha()]
    SZ12=[pygame.image.load("data/Goku/AO1.png").convert_alpha(),pygame.image.load("data/Goku/AO2.png").convert_alpha()]
    SZ13=[pygame.image.load("data/Goku/AW3.png").convert_alpha(),pygame.image.load("data/Goku/AW4.png").convert_alpha(),pygame.image.load("data/Goku/AY3.png").convert_alpha(),pygame.image.load("data/Goku/AY4.png").convert_alpha()]
    SZ14=[pygame.image.load("data/Goku/AX3.png").convert_alpha(),pygame.image.load("data/Goku/AX3.png").convert_alpha(),pygame.image.load("data/Goku/AX4.png").convert_alpha(),pygame.image.load("data/Goku/AX4.png").convert_alpha(),pygame.image.load("data/Goku/AY4.png").convert_alpha(),pygame.image.load("data/Goku/AY4.png").convert_alpha()]

    
    def __init__(self,x,y,right,logo):
        self.x=x
        self.Base=y
        self.y=y
        self.width=None
        self.height=None
        self.health=None
        self.right=right
        self.logo=logo
        self.SS=0
        self.count=0
        self.stand=0
        self.move=0
        self.hit=0
        self.attack=0
        self.Attack=False
        self.EffectWork=False
        self.Effect=None
        self.Screen=None
        self.SUPER=None
        self.POWERX=x
        self.POWERY=y
        self.POWER=None
        self.POWERBLIT=True

        self.S3L=False
        self.S3R=False
        self.S4=False
        self.S5=False
        self.S6=False
        self.S7=False
        self.S8=False
        self.S9L=False # It include D10
        self.S9R=False # It include D10
        self.S11R=False # It include D10
        self.S11L=False # It include D10
        self.S12=False
        self.S13=False
        self.S14=False
        self.S15=False
        self.S16=False
        self.S17=False
        self.S18=False
        self.S19=False
        self.S20=False
        self.S21=False
        self.S22=False
        self.S23=False
        self.S24=False
        self.S25=False
        self.S26=False
        self.S27=False
        self.S28=False
        self.S29=False
        self.S30=False
        self.S31=False
        self.S32=False
        self.S33=False
        self.S34=False
        self.S35=False
        self.S36=False
        self.S37=False
        self.S38=False

        self.Z0=False
        self.Z1=False
        self.Z2=False
        self.Z3=False
        self.Z4=False
        self.Z5=False
        self.Z6=False
        self.Z7=False
        self.Z8=False
        self.Z9=False
        self.Z10=False
        self.Z11=False
        self.Z12=False
        self.Z13=False
        self.Z14=False
    def Direction(self,X):
        if self.x>X.x:
            self.right=False
        elif self.x<X.x:
            self.right=True
        
    def Battelfeild(self,win):
        win.blit(self.BG,(0,0))
    def Computer(self,X):
        pass
    def Control(self,keys):
        if keys[pygame.K_RSHIFT] and keys[pygame.K_RIGHT]:
            if self.count==0:
                self.S9R=True
                
        elif keys[pygame.K_RSHIFT] and keys[pygame.K_LEFT]:
            if self.count==0:
                self.S9L=True

        elif keys[pygame.K_LSHIFT] and keys[pygame.K_RIGHT]:
            if self.count==0:
                self.S11R=True

        elif keys[pygame.K_LSHIFT] and keys[pygame.K_LEFT]:
            if self.count==0:
                self.S11L=True
                
        elif keys[pygame.K_LEFT]:
            if self.count==0:
                self.S3L=True
    
        elif keys[pygame.K_RIGHT]:
            if self.count==0:
                self.S3R=True
            
        elif keys[pygame.K_a]:
            if self.count==0:
                self.S4=True

        elif keys[pygame.K_s]:
            if self.count==0:
                self.S5=True
            
        elif keys[pygame.K_d]:
            if self.count==0:
                self.S6=True
            
        elif keys[pygame.K_UP]:
            if self.count==0:
                self.S7=True

        elif keys[pygame.K_DOWN]:
            if self.count==0:
                self.S8=True

        elif keys[pygame.K_DOWN]:
            if self.count==0:
                self.S12=True
        
        elif keys[pygame.K_SPACE]:
                self.S12=True
    
    def draw(self,win,X):
        if self.logo:
            win.blit(self.Logo,(0,0))
            pygame.draw.rect(win,(255,255,255),(0,0,100,100),1)
            win.blit(self.Name,(110,0))
            win.blit(self.V,(620,40))
            win.blit(self.A,(640,40))
            
            pygame.draw.rect(win,(0,0,0),(100,40,500,30))
            pygame.draw.rect(win,(130,78,170),(100,40,500,30))
            pygame.draw.rect(win,(255,255,255),(100,40,500,30),1)
            
            pygame.draw.rect(win,(0,0,0),(100,70,250,30))
            pygame.draw.rect(win,(255,223,0),(100,70,250,30))
            pygame.draw.rect(win,(255,255,255),(100,70,250,30),1)
        else:
            win.blit(self.Logo,(1200,0))
            pygame.draw.rect(win,(255,255,255),(1200,0,100,100),1)
            win.blit(self.Name,(1070,0))
            win.blit(self.S,(660,40))
            
            pygame.draw.rect(win,(0,0,0),(702,40,500,30))
            pygame.draw.rect(win,(130,78,170),(702,40,500,30))
            pygame.draw.rect(win,(255,255,255),(702,40,500,30),1)
            
            pygame.draw.rect(win,(0,0,0),(952,70,250,30))
            pygame.draw.rect(win,(255,223,0),(952,70,250,30))
            pygame.draw.rect(win,(255,255,255),(952,70,250,30),1)

            
        if self.S3L:
            self.Screen=self.SS3[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            if self.x>10:
                self.x-=2
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+ 1> 32:
                self.count=0
                self.S3L=False
                self.Direction(X)

        elif self.S3R:
            self.Screen=self.SS3[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            if self.x+129<1300:
                self.x+=2
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+ 1> 32:
                self.count=0
                self.S3R=False
                self.Direction(X)

        elif self.S4:
            self.Screen=self.SS4[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.count=0
                self.S4=False
                self.Direction(X)

        elif self.S5:
            self.y=330
            self.Screen=self.SS5[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.count=0
                self.y=300
                self.S5=False
                self.Direction(X)

        elif self.S6:
            self.Screen=self.SS6[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.count=0
                self.S6=False
                self.Direction(X)

        elif self.S7:
            if self.right and 1300 -(X.x+X.width)>129: # 129 self.widht
                if (self.x+129)>X.x-40 and  self.x<X.x+X.width+10  and self.count>18 and self.x+129 < 1300:
                    self.x+=50
            else:
                if X.x>129 :# 129 self.widht
                   if self.x<(X.x+X.width+40)and self.x+129>X.x-10 and self.count>18 and self.x > 20:
                        self.x-=50
                    
            if self.count<12 and self.count>4:
                self.y-=25
            self.Screen=self.SS7[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>28:
                if self.x+129>1300:
                    self.x=self.x-(self.x+129-1300)
                if self.x<10:
                    self.x=10
                self.count=0
                self.y=300
                self.S7=False
                self.Direction(X)

        
        elif self.S8:
            if self.count>8:
                self.y=360
            self.Screen=self.SS8[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.y=300
                self.count=0
                self.S8=False
                self.Direction(X)
                

        elif self.S9R: 
            if self.right:
                if self.x+154<X.x-20 and self.count>=8: #self.widht 154
                    self.x+=10
                    self.count=7
                self.Screen=self.SS9[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x+113<1300 and self.count>=8: # self.width 113
                    self.x+=10
                    self.count=7
                self.Screen=self.SS10[self.count//4]     
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>12:
                self.y=300
                self.count=0
                self.S9R=False
                self.Direction(X)
                
            
    
            
        elif self.S9L:
            if self.right:
                if self.x>10 and self.count>=8:
                    self.x-=10
                    self.count=7
                self.Screen=self.SS10[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x>X.x+X.width+20 and self.count>=8:
                    self.x-=10
                    self.count=7
                self.Screen=self.SS9[self.count//4]
                
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>12:
                self.y=300
                self.count=0
                self.S9L=False
                self.Direction(X)
            
                
                
            
        
        elif self.S11R:
            if self.right:
                if self.x+148<X.x-20 and self.count>=8: # SELF.WIDTH 148
                    self.x+=10
                    self.count=7
                self.Screen=self.SS11[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x+113<1300 and self.count>=8: # SELF.WIDTH 88
                    self.x+=10
                    self.count=7
                self.Screen=self.SS10[self.count//4]     
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.right:
                if self.count+1>20:
                        self.y=300
                        self.count=0
                        self.S11R=False
                        self.Direction(X)
            else:
                if self.count+1>12:
                        self.y=300
                        self.count=0
                        self.S11R=False
                        self.Direction(X)
                


        elif self.S11L:
            if self.right:
                if self.x>10 and self.count>=8:
                    self.x-=10
                    self.count=7
                self.Screen=self.SS10[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x>X.x+X.width+20 and self.count>=8:
                    self.x-=10
                    self.count=7
                self.Screen=self.SS11[self.count//4]
                
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.right:
                if self.count+1>12:
                    self.y=300
                    self.count=0
                    self.S11L=False
                    self.Direction(X)
            else:
                if self.count+1>20:
                    self.y=300
                    self.count=0
                    self.S11L=False
                    self.Direction(X)
                

        elif self.S12:
            self.SUPER=self.SE[self.SS//4]
            self.SUPER=pygame.transform.scale(self.SUPER,(300,280))
            self.Screen=self.SS12[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            win.blit(self.SUPER,(self.x-100,self.y-160))
            self.count+=1
            self.SS+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.SS+1>28:
                self.SS=0
            if self.count+1>24:
                self.y=self.Base
                self.count=0
                self.SS=0
                self.S12=False
                self.Direction(X)

        #======================= HITS =========================

        elif self.Z1:
            self.Screen=self.SZ1[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+113<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z1=False
                self.Direction(X)

        elif self.Z2:
            self.Screen=self.SZ2[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+111<1300:
                    self.x+=20
                
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z2=False
                self.Direction(X)

        elif self.Z3:
            self.Screen=self.SZ3[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+111<1300:
                    self.x+=20   
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z3=False
                self.Direction(X)
                

        elif self.Z4:
            self.Screen=self.SZ4[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+124<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z4=False
                self.Direction(X)

        elif self.Z5:
            self.Screen=self.SZ5[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+130<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z5=False
                self.Direction(X)
                

        elif self.Z6:
            self.y=self.Base+30
            self.Screen=self.SZ6[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+121<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z6=False
                self.Direction(X)

        elif self.Z7:
            self.y=self.Base+30
            self.Screen=self.SZ7[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+136<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z7=False
                self.Direction(X)

        elif self.Z8:
            self.Screen=self.SZ8[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=5
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+111<1300:
                    self.x+=5
            if self.y>100 and self.hit<20:
                self.y-=8
            if self.hit>20:
                self.y+=30
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>24:
                self.y=self.Base
                self.hit=0
                self.Z8=False
                self.Direction(X)
                
                

        elif self.Z9:
            self.Screen=self.SZ9[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+126<1300:
                    self.x+=20
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z9=False
                self.Direction(X)
                
                
        elif self.Z10:
            self.Screen=self.SZ10[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+107<1300:
                    self.x+=20
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z10=False
                self.Direction(X)

        elif self.Z11:
            self.Screen=self.SZ11[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+125<1300:
                    self.x+=20   
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z11=False
                self.Direction(X)

        elif self.Z12:
            self.Screen=self.SZ12[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+122<1300:
                    self.x+=20
                
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z12=False
                self.Direction(X)
        
        elif self.Z13:
            self.Screen=self.SZ13[self.hit//4]
            if self.right:
                if self.hit>8 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>8 and self.x+109<1300:
                    self.x+=15
                
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z13=False
                self.Direction(X)
                
        elif self.Z14:
            self.Screen=self.SZ14[self.hit//4]
            if self.right:
                if self.hit>4 and self.x>10:
                    self.x-=6
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>4 and self.x+104<1300:
                    self.x+=6
            if self.y>100 and self.hit<16:
                self.y-=5
            if self.hit>=16:
                self.y+=5
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>24:
                self.y=self.Base
                self.hit=0
                self.Z14=False
                self.Direction(X)
                
        elif self.Z0:
            if self.hit<20:
                self.y=self.Base+60
            elif self.hit==21:
                self.y=self.Base+30
            elif self.hit==25:
                self.y=self.Base+20
            elif self.hit==30:
                self.y=self.Base
            self.Screen=self.SZ0[self.hit//6]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>48:
                self.y=self.Base
                self.hit=0
                self.Z0=False
                self.Direction(X)

        
        else:
            self.Screen=self.Stand[self.stand//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.stand+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.stand+1 > 40:
                self.stand=0
                self.Direction(X)

#---------------------------------------------------------------------------------------------------------------------------------
class Bardock():
    BG=pygame.image.load("data/bg/spaceimg.png").convert_alpha()
    BG=pygame.transform.scale(BG,(1300,600))
    font=pygame.font.SysFont('calibri',40,True,True)
    Name=font.render("Bardock",1,(69,88,15))
    V=font.render("V",1,(69,88,15))
    A=font.render("/",1,(255,223,0))
    S=font.render("S",1,(69,88,15))
    Logo=pygame.image.load("data/Select/A24.png").convert_alpha()
    Logo=pygame.transform.scale(Logo,(100,100))
    SE=[pygame.image.load("data/Effects/A5.png").convert_alpha(),pygame.image.load("data/Effects/A6.png").convert_alpha(),pygame.image.load("data/Effects/A7.png").convert_alpha(),pygame.image.load("data/Effects/A8.png").convert_alpha(),pygame.image.load("data/Effects/A9.png").convert_alpha(),pygame.image.load("data/Effects/A10.png").convert_alpha(),pygame.image.load("data/Effects/A11.png").convert_alpha()]
    Stand=[pygame.image.load("data/Bardock/A1.png").convert_alpha(),pygame.image.load("data/Bardock/A2.png").convert_alpha(),pygame.image.load("data/Bardock/A3.png").convert_alpha(),pygame.image.load("data/Bardock/A4.png").convert_alpha()]
    ST3=[pygame.image.load("data/Bardock/C1.png").convert_alpha(),pygame.image.load("data/Bardock/C2.png").convert_alpha(),pygame.image.load("data/Bardock/C3.png").convert_alpha(),pygame.image.load("data/Bardock/C4.png").convert_alpha(),pygame.image.load("data/Bardock/C5.png").convert_alpha(),pygame.image.load("data/Bardock/C6.png").convert_alpha()]
    ST4=[pygame.image.load("data/Bardock/D1.png").convert_alpha(),pygame.image.load("data/Bardock/D2.png").convert_alpha(),pygame.image.load("data/Bardock/D3.png").convert_alpha(),pygame.image.load("data/Bardock/D3.png").convert_alpha(),pygame.image.load("data/Bardock/D3.png").convert_alpha(),pygame.image.load("data/Bardock/D3.png").convert_alpha()]
    ST5=[pygame.image.load("data/Bardock/E1.png").convert_alpha(),pygame.image.load("data/Bardock/E2.png").convert_alpha(),pygame.image.load("data/Bardock/E3.png").convert_alpha(),pygame.image.load("data/Bardock/E3.png").convert_alpha(),pygame.image.load("data/Bardock/E3.png").convert_alpha(),pygame.image.load("data/Bardock/E3.png").convert_alpha()]
    ST6=[pygame.image.load("data/Bardock/F1.png").convert_alpha(),pygame.image.load("data/Bardock/F2.png").convert_alpha(),pygame.image.load("data/Bardock/F3.png").convert_alpha(),pygame.image.load("data/Bardock/F3.png").convert_alpha(),pygame.image.load("data/Bardock/F3.png").convert_alpha(),pygame.image.load("data/Bardock/F3.png").convert_alpha()]
    ST7=[pygame.image.load("data/Bardock/G1.png").convert_alpha(),pygame.image.load("data/Bardock/G2.png").convert_alpha(),pygame.image.load("data/Bardock/G3.png").convert_alpha(),pygame.image.load("data/Bardock/G4.png").convert_alpha(),pygame.image.load("data/Bardock/G5.png").convert_alpha(),pygame.image.load("data/Bardock/G6.png").convert_alpha(),pygame.image.load("data/Bardock/G7.png").convert_alpha()]
    ST8=[pygame.image.load("data/Bardock/H1.png").convert_alpha(),pygame.image.load("data/Bardock/H2.png").convert_alpha(),pygame.image.load("data/Bardock/H3.png").convert_alpha(),pygame.image.load("data/Bardock/H3.png").convert_alpha(),pygame.image.load("data/Bardock/H3.png").convert_alpha(),pygame.image.load("data/Bardock/H3.png").convert_alpha()]
    ST9=[pygame.image.load("data/Bardock/I1.png").convert_alpha(),pygame.image.load("data/Bardock/I2.png").convert_alpha(),pygame.image.load("data/Bardock/I3.png").convert_alpha()]
    ST10=[pygame.image.load("data/Bardock/J1.png").convert_alpha(),pygame.image.load("data/Bardock/J2.png").convert_alpha(),pygame.image.load("data/Bardock/J3.png").convert_alpha()]
    ST11=[pygame.image.load("data/Bardock/K1.png").convert_alpha(),pygame.image.load("data/Bardock/K2.png").convert_alpha(),pygame.image.load("data/Bardock/K3.png").convert_alpha(),pygame.image.load("data/Bardock/K4.png").convert_alpha()]
    ST12=[pygame.image.load("data/Bardock/L1.png").convert_alpha(),pygame.image.load("data/Bardock/L2.png").convert_alpha(),pygame.image.load("data/Bardock/L3.png").convert_alpha(),pygame.image.load("data/Bardock/L4.png").convert_alpha(),pygame.image.load("data/Bardock/L5.png").convert_alpha()]

    SZ0=[pygame.image.load("data/Bardock/AZ1.png").convert_alpha(),pygame.image.load("data/Bardock/AZ2.png").convert_alpha(),pygame.image.load("data/Bardock/AZ3.png").convert_alpha(),pygame.image.load("data/Bardock/AZ4.png").convert_alpha(),pygame.image.load("data/Bardock/AZ5.png").convert_alpha(),pygame.image.load("data/Bardock/AZ6.png").convert_alpha(),pygame.image.load("data/Bardock/AZ7.png").convert_alpha(),pygame.image.load("data/Bardock/AZ7.png").convert_alpha()]
    SZ1=[pygame.image.load("data/Bardock/AQ1.png").convert_alpha(),pygame.image.load("data/Bardock/AQ2.png").convert_alpha(),pygame.image.load("data/Bardock/AQ3.png").convert_alpha(),pygame.image.load("data/Bardock/AQ4.png").convert_alpha()]
    SZ2=[pygame.image.load("data/Bardock/AR1.png").convert_alpha(),pygame.image.load("data/Bardock/AR2.png").convert_alpha()]
    SZ3=[pygame.image.load("data/Bardock/AW3.png").convert_alpha(),pygame.image.load("data/Bardock/AW4.png").convert_alpha(),pygame.image.load("data/Bardock/AW1.png").convert_alpha(),pygame.image.load("data/Bardock/AW2.png").convert_alpha()]
    SZ4=[pygame.image.load("data/Bardock/AN1.png").convert_alpha(),pygame.image.load("data/Bardock/AN2.png").convert_alpha(),pygame.image.load("data/Bardock/AN3.png").convert_alpha(),pygame.image.load("data/Bardock/AN4.png").convert_alpha()]
    SZ5=[pygame.image.load("data/Bardock/AT1.png").convert_alpha(),pygame.image.load("data/Bardock/AT2.png").convert_alpha(),pygame.image.load("data/Bardock/AT3.png").convert_alpha(),pygame.image.load("data/Bardock/AT4.png").convert_alpha()]
    SZ6=[pygame.image.load("data/Bardock/AU1.png").convert_alpha(),pygame.image.load("data/Bardock/AU2.png").convert_alpha()]
    SZ7=[pygame.image.load("data/Bardock/AV1.png").convert_alpha(),pygame.image.load("data/Bardock/AV2.png").convert_alpha()]
    SZ8=[pygame.image.load("data/Bardock/AX1.png").convert_alpha(),pygame.image.load("data/Bardock/AX2.png").convert_alpha(),pygame.image.load("data/Bardock/AW1.png").convert_alpha(),pygame.image.load("data/Bardock/AW2.png").convert_alpha(),pygame.image.load("data/Bardock/AY1.png").convert_alpha(),pygame.image.load("data/Bardock/AY2.png").convert_alpha()]
    SZ9=[pygame.image.load("data/Bardock/AP1.png").convert_alpha(),pygame.image.load("data/Bardock/AP2.png").convert_alpha()]
    SZ10=[pygame.image.load("data/Bardock/AS1.png").convert_alpha(),pygame.image.load("data/Bardock/AS2.png").convert_alpha()]
    SZ11=[pygame.image.load("data/Bardock/AM1.png").convert_alpha(),pygame.image.load("data/Bardock/AM2.png").convert_alpha(),pygame.image.load("data/Bardock/AM3.png").convert_alpha(),pygame.image.load("data/Bardock/AM4.png").convert_alpha()]
    SZ12=[pygame.image.load("data/Bardock/AO1.png").convert_alpha(),pygame.image.load("data/Bardock/AO2.png").convert_alpha()]
    SZ13=[pygame.image.load("data/Bardock/AW3.png").convert_alpha(),pygame.image.load("data/Bardock/AW4.png").convert_alpha(),pygame.image.load("data/Bardock/AY3.png").convert_alpha(),pygame.image.load("data/Bardock/AY4.png").convert_alpha()]
    SZ14=[pygame.image.load("data/Bardock/AX3.png").convert_alpha(),pygame.image.load("data/Bardock/AX3.png").convert_alpha(),pygame.image.load("data/Bardock/AX4.png").convert_alpha(),pygame.image.load("data/Bardock/AX4.png").convert_alpha(),pygame.image.load("data/Bardock/AY4.png").convert_alpha(),pygame.image.load("data/Bardock/AY4.png").convert_alpha()]
    
    def __init__(self,x,y,right,logo):
        self.x=x
        self.Base=y
        self.y=y
        self.width=None
        self.height=None
        self.health=None
        self.right=right
        self.logo=logo
        self.SS=0
        self.count=0
        self.stand=0
        self.move=0
        self.hit=0
        self.attack=0
        self.Attack=False
        self.EffectWork=False
        self.Effect=None
        self.Screen=None
        self.SUPER=None
        self.POWERX=x
        self.POWERY=y
        self.POWER=None
        self.POWERBLIT=True

        self.T3L=False
        self.T3R=False
        self.T4=False
        self.T5=False
        self.T6=False
        self.T7=False
        self.T8=False
        self.T9L=False # It include D10
        self.T9R=False # It include D10
        self.T11R=False # It include D10
        self.T11L=False # It include D10
        self.T12=False
        self.T13=False
        self.T14=False
        self.T15=False
        self.T16=False
        self.T17=False
        self.T18=False
        self.T19=False
        self.T20=False
        self.T21=False
        self.T22=False
        self.T23=False
        self.T24=False
        self.T25=False
        self.T26=False
        self.T27=False
        self.T28=False
        self.T29=False
        self.T30=False
        self.T31=False
        self.T32=False
        self.T33=False
        self.T34=False
        self.T35=False
        self.T36=False
        self.T37=False
        self.T38=False

        self.Z0=False
        self.Z1=False
        self.Z2=False
        self.Z3=False
        self.Z4=False
        self.Z5=False
        self.Z6=False
        self.Z7=False
        self.Z8=False
        self.Z9=False
        self.Z10=False
        self.Z11=False
        self.Z12=False
        self.Z13=False
        self.Z14=False
    def Direction(self,X):
        if self.x>X.x:
            self.right=False
        elif self.x<X.x:
            self.right=True
        
    def Battelfeild(self,win):
        win.blit(self.BG,(0,0))
    def Computer(self,X):
        pass
    def Control(self,keys):
        if keys[pygame.K_RSHIFT] and keys[pygame.K_RIGHT]:
            if self.count==0:
                self.T9R=True
                
        elif keys[pygame.K_RSHIFT] and keys[pygame.K_LEFT]:
            if self.count==0:
                self.T9L=True

        elif keys[pygame.K_LSHIFT] and keys[pygame.K_RIGHT]:
            if self.count==0:
                self.T11R=True

        elif keys[pygame.K_LSHIFT] and keys[pygame.K_LEFT]:
            if self.count==0:
                self.T11L=True
                
        elif keys[pygame.K_LEFT]:
            if self.count==0:
                self.T3L=True
    
        elif keys[pygame.K_RIGHT]:
            if self.count==0:
                self.T3R=True
            
        elif keys[pygame.K_a]:
            if self.count==0:
                self.T4=True

        elif keys[pygame.K_s]:
            if self.count==0:
                self.T5=True
            
        elif keys[pygame.K_d]:
            if self.count==0:
                self.T6=True
            
        elif keys[pygame.K_UP]:
            if self.count==0:
                self.T7=True

        elif keys[pygame.K_DOWN]:
            if self.count==0:
                self.T8=True

        elif keys[pygame.K_DOWN]:
            if self.count==0:
                self.T12=True
        
        elif keys[pygame.K_SPACE]:
                self.T12=True
    
    def draw(self,win,X):
        if self.logo:
            win.blit(self.Logo,(0,0))
            pygame.draw.rect(win,(255,255,255),(0,0,100,100),1)
            win.blit(self.Name,(110,0))
            win.blit(self.V,(620,40))
            win.blit(self.A,(640,40))
            
            pygame.draw.rect(win,(0,0,0),(100,40,500,30))
            pygame.draw.rect(win,(69,88,15),(100,40,500,30))
            pygame.draw.rect(win,(255,255,255),(100,40,500,30),1)
            
            pygame.draw.rect(win,(0,0,0),(100,70,250,30))
            pygame.draw.rect(win,(255,223,0),(100,70,250,30))
            pygame.draw.rect(win,(255,255,255),(100,70,250,30),1)
        else:
            win.blit(self.Logo,(1200,0))
            pygame.draw.rect(win,(255,255,255),(1200,0,100,100),1)
            win.blit(self.Name,(1050,0))
            win.blit(self.S,(660,40))
            
            pygame.draw.rect(win,(0,0,0),(702,40,500,30))
            pygame.draw.rect(win,(69,88,15),(702,40,500,30))
            pygame.draw.rect(win,(255,255,255),(702,40,500,30),1)
            
            pygame.draw.rect(win,(0,0,0),(952,70,250,30))
            pygame.draw.rect(win,(255,223,0),(952,70,250,30))
            pygame.draw.rect(win,(255,255,255),(952,70,250,30),1)

        if self.T3L:
            self.Screen=self.ST3[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            if self.x>10:
                self.x-=2
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+ 1> 24:
                self.count=0
                self.T3L=False
                self.Direction(X)

        elif self.T3R:
            self.Screen=self.ST3[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            if self.x+123<1300:
                self.x+=2
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+ 1> 24:
                self.count=0
                self.T3R=False
                self.Direction(X)

        elif self.T4:
            self.Screen=self.ST4[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.count=0
                self.T4=False
                self.Direction(X)

        elif self.T5:
            self.y=330
            self.Screen=self.ST5[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.count=0
                self.y=300
                self.T5=False
                self.Direction(X)

        elif self.T6:
            self.Screen=self.ST6[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.count=0
                self.T6=False
                self.Direction(X)

        elif self.T7:
            if self.right and 1300 -(X.x+X.width)>123: # 123 self.widht
                if (self.x+123)>X.x-40 and  self.x<X.x+X.width+10  and self.count>18 and self.x+123 < 1300:
                    self.x+=50
            else:
                if X.x>123 :# 129 self.widht
                   if self.x<(X.x+X.width+40)and self.x+123>X.x-10 and self.count>18 and self.x > 20:
                        self.x-=50
                    
            if self.count<12 and self.count>4:
                self.y-=25
            self.Screen=self.ST7[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>28:
                if self.x+123>1300:
                    self.x=self.x-(self.x+123-1300)
                if self.x<10:
                    self.x=10
                self.count=0
                self.y=300
                self.T7=False
                self.Direction(X)


        elif self.T8:
            if self.count>8:
                self.y=360
            self.Screen=self.ST8[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.y=300
                self.count=0
                self.T8=False
                self.Direction(X)
                

        elif self.T9R: 
            if self.right:
                if self.x+149<X.x-20 and self.count>=8: #self.widht 149
                    self.x+=10
                    self.count=7
                self.Screen=self.ST9[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x+111<1300 and self.count>=8: # self.width 111
                    self.x+=10
                    self.count=7
                self.Screen=self.ST10[self.count//4]     
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>12:
                self.y=300
                self.count=0
                self.T9R=False
                self.Direction(X)
                
            
    
            
        elif self.T9L:
            if self.right:
                if self.x>10 and self.count>=8:
                    self.x-=10
                    self.count=7
                self.Screen=self.ST10[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x>X.x+X.width+20 and self.count>=8:
                    self.x-=10
                    self.count=7
                self.Screen=self.ST9[self.count//4]
                
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>12:
                self.y=300
                self.count=0
                self.T9L=False
                self.Direction(X)
            
                
                
            
        
        elif self.T11R:
            if self.right:
                if self.x+165<X.x-20 and self.count>=8: # SELF.WIDTH 165
                    self.x+=10
                    self.count=7
                self.Screen=self.ST11[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x+113<1300 and self.count>=8: # SELF.WIDTH 113
                    self.x+=10
                    self.count=7
                self.Screen=self.ST10[self.count//4]     
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.right:
                if self.count+1>16:
                        self.y=300
                        self.count=0
                        self.T11R=False
                        self.Direction(X)
            else:
                if self.count+1>12:
                        self.y=300
                        self.count=0
                        self.T11R=False
                        self.Direction(X)
                


        elif self.T11L:
            if self.right:
                if self.x>10 and self.count>=8:
                    self.x-=10
                    self.count=7
                self.Screen=self.ST10[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x>X.x+X.width+20 and self.count>=8:
                    self.x-=10
                    self.count=7
                self.Screen=self.ST11[self.count//4]
                
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.right:
                if self.count+1>12:
                    self.y=300
                    self.count=0
                    self.T11L=False
                    self.Direction(X)
            else:
                if self.count+1>16:
                    self.y=300
                    self.count=0
                    self.T11L=False
                    self.Direction(X)
                

        elif self.T12:
            self.SUPER=self.SE[self.SS//4]
            self.SUPER=pygame.transform.scale(self.SUPER,(300,280))
            self.Screen=self.ST12[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            win.blit(self.SUPER,(self.x-100,self.y-160))
            self.count+=1
            self.SS+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.SS+1>28:
                self.SS=0
            if self.count+1>20:
                self.y=self.Base
                self.count=0
                self.SS=0
                self.T12=False
                self.Direction(X)
                
        #======================= HITS =========================

        elif self.Z1:
            self.Screen=self.SZ1[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+101<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z1=False
                self.Direction(X)

        elif self.Z2:
            self.Screen=self.SZ2[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+98<1300:
                    self.x+=20
                
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z2=False
                self.Direction(X)

        elif self.Z3:
            self.Screen=self.SZ3[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+136<1300:
                    self.x+=20   
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z3=False
                self.Direction(X)
                

        elif self.Z4:
            self.Screen=self.SZ4[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+107<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z4=False
                self.Direction(X)

        elif self.Z5:
            self.Screen=self.SZ5[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+117<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z5=False
                self.Direction(X)
                

        elif self.Z6:
            self.y=self.Base+30
            self.Screen=self.SZ6[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+126<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z6=False
                self.Direction(X)

        elif self.Z7:
            self.y=self.Base+30
            self.Screen=self.SZ7[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+112<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z7=False
                self.Direction(X)

        elif self.Z8:
            self.Screen=self.SZ8[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=5
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+136<1300:
                    self.x+=5
            if self.y>100 and self.hit<20:
                self.y-=8
            if self.hit>20:
                self.y+=30
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>24:
                self.y=self.Base
                self.hit=0
                self.Z8=False
                self.Direction(X)
                
                

        elif self.Z9:
            self.Screen=self.SZ9[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+93<1300:
                    self.x+=20
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z9=False
                self.Direction(X)
                
                
        elif self.Z10:
            self.Screen=self.SZ10[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+91<1300:
                    self.x+=20
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z10=False
                self.Direction(X)

        elif self.Z11:
            self.Screen=self.SZ11[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+104<1300:
                    self.x+=20   
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z11=False
                self.Direction(X)

        elif self.Z12:
            self.Screen=self.SZ12[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+103<1300:
                    self.x+=20
                
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z12=False
                self.Direction(X)
        
        elif self.Z13:
            self.Screen=self.SZ13[self.hit//4]
            if self.right:
                if self.hit>8 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>8 and self.x+95<1300:
                    self.x+=15
                
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z13=False
                self.Direction(X)
                
        elif self.Z14:
            self.Screen=self.SZ14[self.hit//4]
            if self.right:
                if self.hit>4 and self.x>10:
                    self.x-=6
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>4 and self.x+100<1300:
                    self.x+=6
            if self.y>100 and self.hit<16:
                self.y-=5
            if self.hit>=16:
                self.y+=5
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>24:
                self.y=self.Base
                self.hit=0
                self.Z14=False
                self.Direction(X)
                
        elif self.Z0:
            if self.hit<20:
                self.y=self.Base+60
            elif self.hit==21:
                self.y=self.Base+30
            elif self.hit==25:
                self.y=self.Base+20
            elif self.hit==30:
                self.y=self.Base
            self.Screen=self.SZ0[self.hit//6]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>48:
                self.y=self.Base
                self.hit=0
                self.Z0=False
                self.Direction(X)

        else:
            self.Screen=self.Stand[self.stand//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.stand+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.stand+1 > 16:
                self.stand=0
                self.Direction(X)

#---------------------------------------------------------------------------------------------------------------------------------
class Teen_Gohan():
    BG=pygame.image.load("data/bg/spaceimg.png").convert_alpha()
    BG=pygame.transform.scale(BG,(1300,600))
    font=pygame.font.SysFont('calibri',40,True,True)
    Name=font.render("Teen Gohan",1,(56,37,79))
    V=font.render("V",1,(56,37,76))
    A=font.render("/",1,(255,223,0))
    S=font.render("S",1,(56,37,76))
    Logo=pygame.image.load("data/Select/A5.png").convert_alpha()
    Logo=pygame.transform.scale(Logo,(100,100))
    SE=[pygame.image.load("data/Effects/A1.png").convert_alpha(),pygame.image.load("data/Effects/A2.png").convert_alpha(),pygame.image.load("data/Effects/A3.png").convert_alpha(),pygame.image.load("data/Effects/A4.png").convert_alpha()]
    Stand=[pygame.image.load("data/Teen_Gohan/A1.png").convert_alpha(),pygame.image.load("data/Teen_Gohan/A2.png").convert_alpha(),pygame.image.load("data/Teen_Gohan/A3.png").convert_alpha(),pygame.image.load("data/Teen_Gohan/A4.png").convert_alpha()]
    SU3=[pygame.image.load("data/Teen_Gohan/C1.png").convert_alpha(),pygame.image.load("data/Teen_Gohan/C2.png").convert_alpha(),pygame.image.load("data/Teen_Gohan/C3.png").convert_alpha(),pygame.image.load("data/Teen_Gohan/C4.png").convert_alpha(),pygame.image.load("data/Teen_Gohan/C5.png").convert_alpha()]
    SU4=[pygame.image.load("data/Teen_Gohan/D1.png").convert_alpha(),pygame.image.load("data/Teen_Gohan/D2.png").convert_alpha(),pygame.image.load("data/Teen_Gohan/D3.png").convert_alpha(),pygame.image.load("data/Teen_Gohan/D3.png").convert_alpha(),pygame.image.load("data/Teen_Gohan/D3.png").convert_alpha(),pygame.image.load("data/Teen_Gohan/D3.png").convert_alpha()]
    SU5=[pygame.image.load("data/Teen_Gohan/E1.png").convert_alpha(),pygame.image.load("data/Teen_Gohan/E2.png").convert_alpha(),pygame.image.load("data/Teen_Gohan/E3.png").convert_alpha(),pygame.image.load("data/Teen_Gohan/E3.png").convert_alpha(),pygame.image.load("data/Teen_Gohan/E3.png").convert_alpha(),pygame.image.load("data/Teen_Gohan/E3.png").convert_alpha()]
    SU6=[pygame.image.load("data/Teen_Gohan/F1.png").convert_alpha(),pygame.image.load("data/Teen_Gohan/F2.png").convert_alpha(),pygame.image.load("data/Teen_Gohan/F3.png").convert_alpha(),pygame.image.load("data/Teen_Gohan/F3.png").convert_alpha(),pygame.image.load("data/Teen_Gohan/F3.png").convert_alpha(),pygame.image.load("data/Teen_Gohan/F3.png").convert_alpha()]
    SU7=[pygame.image.load("data/Teen_Gohan/G1.png").convert_alpha(),pygame.image.load("data/Teen_Gohan/G2.png").convert_alpha(),pygame.image.load("data/Teen_Gohan/G3.png").convert_alpha(),pygame.image.load("data/Teen_Gohan/G4.png").convert_alpha(),pygame.image.load("data/Teen_Gohan/G5.png").convert_alpha(),pygame.image.load("data/Teen_Gohan/G6.png").convert_alpha(),pygame.image.load("data/Teen_Gohan/G7.png").convert_alpha()]
    SU8=[pygame.image.load("data/Teen_Gohan/H1.png").convert_alpha(),pygame.image.load("data/Teen_Gohan/H2.png").convert_alpha(),pygame.image.load("data/Teen_Gohan/H3.png").convert_alpha(),pygame.image.load("data/Teen_Gohan/H3.png").convert_alpha(),pygame.image.load("data/Teen_Gohan/H3.png").convert_alpha(),pygame.image.load("data/Teen_Gohan/H3.png").convert_alpha()]
    SU9=[pygame.image.load("data/Teen_Gohan/I1.png").convert_alpha(),pygame.image.load("data/Teen_Gohan/I2.png").convert_alpha(),pygame.image.load("data/Teen_Gohan/I3.png").convert_alpha()]
    SU10=[pygame.image.load("data/Teen_Gohan/J1.png").convert_alpha(),pygame.image.load("data/Teen_Gohan/J2.png").convert_alpha(),pygame.image.load("data/Teen_Gohan/J3.png").convert_alpha()]
    SU11=[pygame.image.load("data/Teen_Gohan/K1.png").convert_alpha(),pygame.image.load("data/Teen_Gohan/K2.png").convert_alpha(),pygame.image.load("data/Teen_Gohan/K3.png").convert_alpha()]
    SU12=[pygame.image.load("data/Teen_Gohan/L1.png").convert_alpha(),pygame.image.load("data/Teen_Gohan/L2.png").convert_alpha(),pygame.image.load("data/Teen_Gohan/L3.png").convert_alpha(),pygame.image.load("data/Teen_Gohan/L4.png").convert_alpha(),pygame.image.load("data/Teen_Gohan/L5.png").convert_alpha(),pygame.image.load("data/Teen_Gohan/L6.png").convert_alpha()]

    SZ0=[pygame.image.load("data/Teen_Gohan/AZ1.png").convert_alpha(),pygame.image.load("data/Teen_Gohan/AZ2.png").convert_alpha(),pygame.image.load("data/Teen_Gohan/AZ3.png").convert_alpha(),pygame.image.load("data/Teen_Gohan/AZ4.png").convert_alpha(),pygame.image.load("data/Teen_Gohan/AZ5.png").convert_alpha(),pygame.image.load("data/Teen_Gohan/AZ6.png").convert_alpha(),pygame.image.load("data/Teen_Gohan/AZ7.png").convert_alpha(),pygame.image.load("data/Teen_Gohan/AZ7.png").convert_alpha()]
    SZ1=[pygame.image.load("data/Teen_Gohan/AQ1.png").convert_alpha(),pygame.image.load("data/Teen_Gohan/AQ2.png").convert_alpha(),pygame.image.load("data/Teen_Gohan/AQ3.png").convert_alpha(),pygame.image.load("data/Teen_Gohan/AQ4.png").convert_alpha()]
    SZ2=[pygame.image.load("data/Teen_Gohan/AR1.png").convert_alpha(),pygame.image.load("data/Teen_Gohan/AR2.png").convert_alpha()]
    SZ3=[pygame.image.load("data/Teen_Gohan/AW3.png").convert_alpha(),pygame.image.load("data/Teen_Gohan/AW4.png").convert_alpha(),pygame.image.load("data/Teen_Gohan/AW1.png").convert_alpha(),pygame.image.load("data/Teen_Gohan/AW2.png").convert_alpha()]
    SZ4=[pygame.image.load("data/Teen_Gohan/AN1.png").convert_alpha(),pygame.image.load("data/Teen_Gohan/AN2.png").convert_alpha(),pygame.image.load("data/Teen_Gohan/AN3.png").convert_alpha(),pygame.image.load("data/Teen_Gohan/AN4.png").convert_alpha()]
    SZ5=[pygame.image.load("data/Teen_Gohan/AT1.png").convert_alpha(),pygame.image.load("data/Teen_Gohan/AT2.png").convert_alpha(),pygame.image.load("data/Teen_Gohan/AT3.png").convert_alpha(),pygame.image.load("data/Teen_Gohan/AT4.png").convert_alpha()]
    SZ6=[pygame.image.load("data/Teen_Gohan/AU1.png").convert_alpha(),pygame.image.load("data/Teen_Gohan/AU2.png").convert_alpha()]
    SZ7=[pygame.image.load("data/Teen_Gohan/AV1.png").convert_alpha(),pygame.image.load("data/Teen_Gohan/AV2.png").convert_alpha()]
    SZ8=[pygame.image.load("data/Teen_Gohan/AX1.png").convert_alpha(),pygame.image.load("data/Teen_Gohan/AX2.png").convert_alpha(),pygame.image.load("data/Teen_Gohan/AW1.png").convert_alpha(),pygame.image.load("data/Teen_Gohan/AW2.png").convert_alpha(),pygame.image.load("data/Teen_Gohan/AY1.png").convert_alpha(),pygame.image.load("data/Teen_Gohan/AY2.png").convert_alpha()]
    SZ9=[pygame.image.load("data/Teen_Gohan/AP1.png").convert_alpha(),pygame.image.load("data/Teen_Gohan/AP2.png").convert_alpha()]
    SZ10=[pygame.image.load("data/Teen_Gohan/AS1.png").convert_alpha(),pygame.image.load("data/Teen_Gohan/AS2.png").convert_alpha()]
    SZ11=[pygame.image.load("data/Teen_Gohan/AM1.png").convert_alpha(),pygame.image.load("data/Teen_Gohan/AM2.png").convert_alpha(),pygame.image.load("data/Teen_Gohan/AM3.png").convert_alpha(),pygame.image.load("data/Teen_Gohan/AM4.png").convert_alpha()]
    SZ12=[pygame.image.load("data/Teen_Gohan/AO1.png").convert_alpha(),pygame.image.load("data/Teen_Gohan/AO2.png").convert_alpha()]
    SZ13=[pygame.image.load("data/Teen_Gohan/AW3.png").convert_alpha(),pygame.image.load("data/Teen_Gohan/AW4.png").convert_alpha(),pygame.image.load("data/Teen_Gohan/AY3.png").convert_alpha(),pygame.image.load("data/Teen_Gohan/AY4.png").convert_alpha()]
    SZ14=[pygame.image.load("data/Teen_Gohan/AX3.png").convert_alpha(),pygame.image.load("data/Teen_Gohan/AX3.png").convert_alpha(),pygame.image.load("data/Teen_Gohan/AX4.png").convert_alpha(),pygame.image.load("data/Teen_Gohan/AX4.png").convert_alpha(),pygame.image.load("data/Teen_Gohan/AY4.png").convert_alpha(),pygame.image.load("data/Teen_Gohan/AY4.png").convert_alpha()]

    
    def __init__(self,x,y,right,logo):
        self.x=x
        self.Base=y
        self.y=y
        self.width=None
        self.height=None
        self.health=None
        self.right=right
        self.logo=logo
        self.SS=0
        self.count=0
        self.stand=0
        self.move=0
        self.hit=0
        self.attack=0
        self.Attack=False
        self.EffectWork=False
        self.Effect=None
        self.Screen=None
        self.SUPER=None
        self.POWERX=x
        self.POWERY=y
        self.POWER=None
        self.POWERBLIT=True

        self.U3L=False
        self.U3R=False
        self.U4=False
        self.U5=False
        self.U6=False
        self.U7=False
        self.U8=False
        self.U9L=False # It include D10
        self.U9R=False # It include D10
        self.U11R=False # It include D10
        self.U11L=False # It include D10
        self.U12=False
        self.U13=False
        self.U14=False
        self.U15=False
        self.U16=False
        self.U17=False
        self.U18=False
        self.U19=False
        self.U20=False
        self.U21=False
        self.U22=False
        self.U23=False
        self.U24=False
        self.U25=False
        self.U26=False
        self.U27=False
        self.U28=False
        self.U29=False
        self.U30=False
        self.U31=False
        self.U32=False
        self.U33=False
        self.U34=False
        self.U35=False
        self.U36=False
        self.U37=False
        self.U38=False

        self.Z0=False
        self.Z1=False
        self.Z2=False
        self.Z3=False
        self.Z4=False
        self.Z5=False
        self.Z6=False
        self.Z7=False
        self.Z8=False
        self.Z9=False
        self.Z10=False
        self.Z11=False
        self.Z12=False
        self.Z13=False
        self.Z14=False

    def Direction(self,X):
        if self.x>X.x:
            self.right=False
        elif self.x<X.x:
            self.right=True
        
    def Battelfeild(self,win):
        win.blit(self.BG,(0,0))
    def Computer(self,X):
        pass
    def Control(self,keys):
        if keys[pygame.K_RSHIFT] and keys[pygame.K_RIGHT]:
            if self.count==0:
                self.U9R=True
                
        elif keys[pygame.K_RSHIFT] and keys[pygame.K_LEFT]:
            if self.count==0:
                self.U9L=True

        elif keys[pygame.K_LSHIFT] and keys[pygame.K_RIGHT]:
            if self.count==0:
                self.U11R=True

        elif keys[pygame.K_LSHIFT] and keys[pygame.K_LEFT]:
            if self.count==0:
                self.U11L=True
                
        elif keys[pygame.K_LEFT]:
            if self.count==0:
                self.U3L=True
    
        elif keys[pygame.K_RIGHT]:
            if self.count==0:
                self.U3R=True
            
        elif keys[pygame.K_a]:
            if self.count==0:
                self.U4=True

        elif keys[pygame.K_s]:
            if self.count==0:
                self.U5=True
            
        elif keys[pygame.K_d]:
            if self.count==0:
                self.U6=True
            
        elif keys[pygame.K_UP]:
            if self.count==0:
                self.U7=True

        elif keys[pygame.K_DOWN]:
            if self.count==0:
                self.U8=True

        elif keys[pygame.K_DOWN]:
            if self.count==0:
                self.U12=True
        
        elif keys[pygame.K_SPACE]:
                self.U12=True
    
    def draw(self,win,X):
        if self.logo:
            win.blit(self.Logo,(0,0))
            pygame.draw.rect(win,(255,255,255),(0,0,100,100),1)
            win.blit(self.Name,(110,0))
            win.blit(self.V,(620,40))
            win.blit(self.A,(640,40))
            
            pygame.draw.rect(win,(0,0,0),(100,40,500,30))
            pygame.draw.rect(win,(100,37,79),(100,40,500,30))
            pygame.draw.rect(win,(255,255,255),(100,40,500,30),1)
            
            pygame.draw.rect(win,(0,0,0),(100,70,250,30))
            pygame.draw.rect(win,(255,223,0),(100,70,250,30))
            pygame.draw.rect(win,(255,255,255),(100,70,250,30),1)
            
        else:
            win.blit(self.Logo,(1200,0))
            pygame.draw.rect(win,(255,255,255),(1200,0,100,100),1)
            win.blit(self.Name,(980,0))
            win.blit(self.S,(660,40))
            
            pygame.draw.rect(win,(0,0,0),(702,40,500,30))
            pygame.draw.rect(win,(100,37,79),(702,40,500,30))
            pygame.draw.rect(win,(255,255,255),(702,40,500,30),1)
            
            pygame.draw.rect(win,(0,0,0),(952,70,250,30))
            pygame.draw.rect(win,(255,223,0),(952,70,250,30))
            pygame.draw.rect(win,(255,255,255),(952,70,250,30),1)

            
        if self.U3L:
            self.Screen=self.SU3[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            if self.x>10:
                self.x-=2
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+ 1> 20:
                self.count=0
                self.U3L=False
                self.Direction(X)

        elif self.U3R:
            self.Screen=self.SU3[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            if self.x+79<1300:
                self.x+=2
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+ 1> 20:
                self.count=0
                self.U3R=False
                self.Direction(X)

        elif self.U4:
            self.Screen=self.SU4[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.count=0
                self.U4=False
                self.Direction(X)

        elif self.U5:
            self.y=330
            self.Screen=self.SU5[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.count=0
                self.y=300
                self.U5=False
                self.Direction(X)

        elif self.U6:
            self.Screen=self.SU6[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.count=0
                self.U6=False
                self.Direction(X)

        elif self.U7:
            if self.right and 1300 -(X.x+X.width)>79: # 79 self.widht
                if (self.x+79)>X.x-40 and  self.x<X.x+X.width+10  and self.count>18 and self.x+79 < 1300:
                    self.x+=50
            else:
                if X.x>79 :# 79 self.widht
                   if self.x<(X.x+X.width+40)and self.x+79>X.x-10 and self.count>18 and self.x > 20:
                        self.x-=50
                    
            if self.count<12 and self.count>4:
                self.y-=25
            self.Screen=self.SU7[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>28:
                if self.x+79>1300:
                    self.x=self.x-(self.x+79-1300)
                if self.x<10:
                    self.x=10
                self.count=0
                self.y=300
                self.U7=False
                self.Direction(X)
                

        elif self.U8:
            if self.count>8:
                self.y=360
            self.Screen=self.SU8[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.y=300
                self.count=0
                self.U8=False
                self.Direction(X)
                

        elif self.U9R: 
            if self.right:
                if self.x+115<X.x-20 and self.count>=8: #self.widht 115
                    self.x+=10
                    self.count=7
                self.Screen=self.SU9[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x+75<1300 and self.count>=8: # self.width 75
                    self.x+=10
                    self.count=7
                self.Screen=self.SU10[self.count//4]     
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>12:
                self.y=300
                self.count=0
                self.U9R=False
                self.Direction(X)
                

        elif self.U9L:
            if self.right:
                if self.x>10 and self.count>=8:
                    self.x-=10
                    self.count=7
                self.Screen=self.SU10[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x>X.x+X.width+20 and self.count>=8:
                    self.x-=10
                    self.count=7
                self.Screen=self.SU9[self.count//4]
                
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>12:
                self.y=300
                self.count=0
                self.U9L=False
                self.Direction(X)

                
        
        elif self.U11R:
            if self.right:
                if self.x+93<X.x-20 and self.count>=8: # SELF.WIDTH 93
                    self.x+=10
                    self.count=7
                self.Screen=self.SU11[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x+75<1300 and self.count>=8: # SELF.WIDTH 106
                    self.x+=10
                    self.count=7
                self.Screen=self.SU10[self.count//4]     
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>12:
                    self.y=300
                    self.count=0
                    self.U11R=False
                    self.Direction(X) 
                


        elif self.U11L:
            if self.right: 
                if self.x>10 and self.count>=8:
                    self.x-=10
                    self.count=7
                self.Screen=self.SU10[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x>X.x+X.width+20 and self.count>=8:
                    self.x-=10
                    self.count=7
                self.Screen=self.SU11[self.count//4]
                
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>12:
                    self.y=300
                    self.count=0
                    self.U11L=False
                    self.Direction(X)
                        
        elif self.U12:
            self.SUPER=self.SE[self.SS//4]
            self.SUPER=pygame.transform.scale(self.SUPER,(300,280))
            self.Screen=self.SU12[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            win.blit(self.SUPER,(self.x-100,self.y-160))
            self.count+=1
            self.SS+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.SS+1>16:
                self.SS=0
            if self.count+1>24:
                self.y=self.Base
                self.count=0
                self.SS=0
                self.U12=False
                self.Direction(X)

        #======================= HITS =========================

        elif self.Z1:
            self.Screen=self.SZ1[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+85<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z1=False
                self.Direction(X)

        elif self.Z2:
            self.Screen=self.SZ2[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+85<1300:
                    self.x+=20
                
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z2=False
                self.Direction(X)

        elif self.Z3:
            self.Screen=self.SZ3[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+121<1300:
                    self.x+=20   
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z3=False
                self.Direction(X)
                

        elif self.Z4:
            self.Screen=self.SZ4[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+85<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z4=False
                self.Direction(X)

        elif self.Z5:
            self.Screen=self.SZ5[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+99<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z5=False
                self.Direction(X)
                

        elif self.Z6:
            self.y=self.Base+30
            self.Screen=self.SZ6[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+97<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z6=False
                self.Direction(X)

        elif self.Z7:
            self.y=self.Base+30
            self.Screen=self.SZ7[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+85<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z7=False
                self.Direction(X)

        elif self.Z8:
            self.Screen=self.SZ8[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=5
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+123<1300:
                    self.x+=5
            if self.y>100 and self.hit<20:
                self.y-=8
            if self.hit>20:
                self.y+=30
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>24:
                self.y=self.Base
                self.hit=0
                self.Z8=False
                self.Direction(X)
                
                

        elif self.Z9:
            self.Screen=self.SZ9[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+85<1300:
                    self.x+=20
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z9=False
                self.Direction(X)
                
                
        elif self.Z10:
            self.Screen=self.SZ10[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+85<1300:
                    self.x+=20
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z10=False
                self.Direction(X)

        elif self.Z11:
            self.Screen=self.SZ11[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+107<1300:
                    self.x+=20   
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z11=False
                self.Direction(X)

        elif self.Z12:
            self.Screen=self.SZ12[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+85<1300:
                    self.x+=20
                
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z12=False
                self.Direction(X)
        
        elif self.Z13:
            self.Screen=self.SZ13[self.hit//4]
            if self.right:
                if self.hit>8 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>8 and self.x+95<1300:
                    self.x+=15
                
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z13=False
                self.Direction(X)
                
        elif self.Z14:
            self.Screen=self.SZ14[self.hit//4]
            if self.right:
                if self.hit>4 and self.x>10:
                    self.x-=6
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>4 and self.x+123<1300:
                    self.x+=6
            if self.y>100 and self.hit<16:
                self.y-=5
            if self.hit>=16:
                self.y+=5
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>24:
                self.y=self.Base
                self.hit=0
                self.Z14=False
                self.Direction(X)
                
        elif self.Z0:
            if self.hit<20:
                self.y=self.Base+60
            elif self.hit==21:
                self.y=self.Base+30
            elif self.hit==25:
                self.y=self.Base+20
            elif self.hit==30:
                self.y=self.Base
            self.Screen=self.SZ0[self.hit//6]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>48:
                self.y=self.Base
                self.hit=0
                self.Z0=False
                self.Direction(X)

        else:
            self.Screen=self.Stand[self.stand//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.stand+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.stand+1 > 16:
                self.stand=0
                self.Direction(X)

#---------------------------------------------------------------------------------------------------------------------------------
class Mister_Buu():
    
    BG=pygame.image.load("data/bg/spaceimg.png").convert_alpha()
    BG=pygame.transform.scale(BG,(1300,600))
    font=pygame.font.SysFont('calibri',40,True,True)
    Name=font.render("Mister Buu",1,(254,194,190))
    V=font.render("V",1,(254,194,190))
    A=font.render("/",1,(255,223,0))
    S=font.render("S",1,(254,194,190))
    Logo=pygame.image.load("data/Select/A10.png").convert_alpha()
    Logo=pygame.transform.scale(Logo,(100,100))
    
    SE=[pygame.image.load("data/Effects/A5.png").convert_alpha(),pygame.image.load("data/Effects/A6.png").convert_alpha(),pygame.image.load("data/Effects/A7.png").convert_alpha(),pygame.image.load("data/Effects/A8.png").convert_alpha(),pygame.image.load("data/Effects/A9.png").convert_alpha(),pygame.image.load("data/Effects/A10.png").convert_alpha(),pygame.image.load("data/Effects/A11.png").convert_alpha()]
    Stand=[pygame.image.load("data/Mister_Buu/A1.png").convert_alpha(),pygame.image.load("data/Mister_Buu/A2.png").convert_alpha(),pygame.image.load("data/Mister_Buu/A3.png").convert_alpha(),pygame.image.load("data/Mister_Buu/A4.png").convert_alpha(),pygame.image.load("data/Mister_Buu/A5.png").convert_alpha(),pygame.image.load("data/Mister_Buu/A6.png").convert_alpha(),pygame.image.load("data/Mister_Buu/A7.png").convert_alpha(),pygame.image.load("data/Mister_Buu/A8.png").convert_alpha()]
    SV3=[pygame.image.load("data/Mister_Buu/C1.png").convert_alpha(),pygame.image.load("data/Mister_Buu/C2.png").convert_alpha(),pygame.image.load("data/Mister_Buu/C3.png").convert_alpha(),pygame.image.load("data/Mister_Buu/C4.png").convert_alpha(),pygame.image.load("data/Mister_Buu/C5.png").convert_alpha()]
    SV4=[pygame.image.load("data/Mister_Buu/D1.png").convert_alpha(),pygame.image.load("data/Mister_Buu/D2.png").convert_alpha(),pygame.image.load("data/Mister_Buu/D3.png").convert_alpha(),pygame.image.load("data/Mister_Buu/D3.png").convert_alpha(),pygame.image.load("data/Mister_Buu/D3.png").convert_alpha(),pygame.image.load("data/Mister_Buu/D3.png").convert_alpha()]
    SV5=[pygame.image.load("data/Mister_Buu/E1.png").convert_alpha(),pygame.image.load("data/Mister_Buu/E2.png").convert_alpha(),pygame.image.load("data/Mister_Buu/E3.png").convert_alpha(),pygame.image.load("data/Mister_Buu/E3.png").convert_alpha(),pygame.image.load("data/Mister_Buu/E3.png").convert_alpha(),pygame.image.load("data/Mister_Buu/E3.png").convert_alpha()]
    SV6=[pygame.image.load("data/Mister_Buu/F1.png").convert_alpha(),pygame.image.load("data/Mister_Buu/F2.png").convert_alpha(),pygame.image.load("data/Mister_Buu/F3.png").convert_alpha(),pygame.image.load("data/Mister_Buu/F3.png").convert_alpha(),pygame.image.load("data/Mister_Buu/F3.png").convert_alpha(),pygame.image.load("data/Mister_Buu/F3.png").convert_alpha()]
    SV7=[pygame.image.load("data/Mister_Buu/G1.png").convert_alpha(),pygame.image.load("data/Mister_Buu/G2.png").convert_alpha(),pygame.image.load("data/Mister_Buu/G3.png").convert_alpha(),pygame.image.load("data/Mister_Buu/G4.png").convert_alpha(),pygame.image.load("data/Mister_Buu/G5.png").convert_alpha()]
    SV8=[pygame.image.load("data/Mister_Buu/H1.png").convert_alpha(),pygame.image.load("data/Mister_Buu/H2.png").convert_alpha(),pygame.image.load("data/Mister_Buu/H3.png").convert_alpha(),pygame.image.load("data/Mister_Buu/H3.png").convert_alpha(),pygame.image.load("data/Mister_Buu/H3.png").convert_alpha(),pygame.image.load("data/Mister_Buu/H3.png").convert_alpha()]
    SV9=[pygame.image.load("data/Mister_Buu/I1.png").convert_alpha(),pygame.image.load("data/Mister_Buu/I2.png").convert_alpha(),pygame.image.load("data/Mister_Buu/I3.png").convert_alpha()]
    SV10=[pygame.image.load("data/Mister_Buu/J1.png").convert_alpha(),pygame.image.load("data/Mister_Buu/J2.png").convert_alpha(),pygame.image.load("data/Mister_Buu/J3.png").convert_alpha()]
    SV11=[pygame.image.load("data/Mister_Buu/K1.png").convert_alpha(),pygame.image.load("data/Mister_Buu/K2.png").convert_alpha(),pygame.image.load("data/Mister_Buu/K3.png").convert_alpha(),pygame.image.load("data/Mister_Buu/K4.png").convert_alpha()]
    SV12=[pygame.image.load("data/Mister_Buu/L1.png").convert_alpha(),pygame.image.load("data/Mister_Buu/L2.png").convert_alpha(),pygame.image.load("data/Mister_Buu/L3.png").convert_alpha(),pygame.image.load("data/Mister_Buu/L4.png").convert_alpha(),pygame.image.load("data/Mister_Buu/L5.png").convert_alpha(),pygame.image.load("data/Mister_Buu/L6.png").convert_alpha()]

    SZ0=[pygame.image.load("data/Mister_Buu/AZ1.png").convert_alpha(),pygame.image.load("data/Mister_Buu/AZ2.png").convert_alpha(),pygame.image.load("data/Mister_Buu/AZ3.png").convert_alpha(),pygame.image.load("data/Mister_Buu/AZ4.png").convert_alpha(),pygame.image.load("data/Mister_Buu/AZ5.png").convert_alpha(),pygame.image.load("data/Mister_Buu/AZ6.png").convert_alpha()]
    SZ1=[pygame.image.load("data/Mister_Buu/AQ1.png").convert_alpha(),pygame.image.load("data/Mister_Buu/AQ2.png").convert_alpha(),pygame.image.load("data/Mister_Buu/AQ3.png").convert_alpha(),pygame.image.load("data/Mister_Buu/AQ4.png").convert_alpha()]
    SZ2=[pygame.image.load("data/Mister_Buu/AR1.png").convert_alpha(),pygame.image.load("data/Mister_Buu/AR2.png").convert_alpha()]
    SZ3=[pygame.image.load("data/Mister_Buu/AW3.png").convert_alpha(),pygame.image.load("data/Mister_Buu/AW4.png").convert_alpha(),pygame.image.load("data/Mister_Buu/AW1.png").convert_alpha(),pygame.image.load("data/Mister_Buu/AW2.png").convert_alpha()]
    SZ4=[pygame.image.load("data/Mister_Buu/AN1.png").convert_alpha(),pygame.image.load("data/Mister_Buu/AN2.png").convert_alpha(),pygame.image.load("data/Mister_Buu/AN3.png").convert_alpha(),pygame.image.load("data/Mister_Buu/AN4.png").convert_alpha()]
    SZ5=[pygame.image.load("data/Mister_Buu/AT1.png").convert_alpha(),pygame.image.load("data/Mister_Buu/AT2.png").convert_alpha(),pygame.image.load("data/Mister_Buu/AT3.png").convert_alpha(),pygame.image.load("data/Mister_Buu/AT4.png").convert_alpha()]
    SZ6=[pygame.image.load("data/Mister_Buu/AU1.png").convert_alpha(),pygame.image.load("data/Mister_Buu/AU2.png").convert_alpha()]
    SZ7=[pygame.image.load("data/Mister_Buu/AV1.png").convert_alpha(),pygame.image.load("data/Mister_Buu/AV2.png").convert_alpha()]
    SZ8=[pygame.image.load("data/Mister_Buu/AX1.png").convert_alpha(),pygame.image.load("data/Mister_Buu/AX2.png").convert_alpha(),pygame.image.load("data/Mister_Buu/AW1.png").convert_alpha(),pygame.image.load("data/Mister_Buu/AW2.png").convert_alpha(),pygame.image.load("data/Mister_Buu/AY1.png").convert_alpha(),pygame.image.load("data/Mister_Buu/AY2.png").convert_alpha()]
    SZ9=[pygame.image.load("data/Mister_Buu/AP1.png").convert_alpha(),pygame.image.load("data/Mister_Buu/AP2.png").convert_alpha()]
    SZ10=[pygame.image.load("data/Mister_Buu/AS1.png").convert_alpha(),pygame.image.load("data/Mister_Buu/AS2.png").convert_alpha()]
    SZ11=[pygame.image.load("data/Mister_Buu/AM1.png").convert_alpha(),pygame.image.load("data/Mister_Buu/AM2.png").convert_alpha(),pygame.image.load("data/Mister_Buu/AM3.png").convert_alpha(),pygame.image.load("data/Mister_Buu/AM4.png").convert_alpha()]
    SZ12=[pygame.image.load("data/Mister_Buu/AO1.png").convert_alpha(),pygame.image.load("data/Mister_Buu/AO2.png").convert_alpha()]
    SZ13=[pygame.image.load("data/Mister_Buu/AW3.png").convert_alpha(),pygame.image.load("data/Mister_Buu/AW4.png").convert_alpha(),pygame.image.load("data/Mister_Buu/AY3.png").convert_alpha(),pygame.image.load("data/Mister_Buu/AY4.png").convert_alpha()]
    SZ14=[pygame.image.load("data/Mister_Buu/AX3.png").convert_alpha(),pygame.image.load("data/Mister_Buu/AX3.png").convert_alpha(),pygame.image.load("data/Mister_Buu/AX4.png").convert_alpha(),pygame.image.load("data/Mister_Buu/AX4.png").convert_alpha(),pygame.image.load("data/Mister_Buu/AY4.png").convert_alpha(),pygame.image.load("data/Mister_Buu/AY4.png").convert_alpha()]
    
    def __init__(self,x,y,right,logo):
        self.x=x
        self.Base=y
        self.y=y
        self.width=None
        self.height=None
        self.health=None
        self.right=right
        self.logo=logo
        self.SS=0
        self.count=0
        self.stand=0
        self.move=0
        self.hit=0
        self.attack=0
        self.Attack=False
        self.EffectWork=False
        self.Effect=None
        self.Screen=None
        self.SUPER=None
        self.POWERX=x
        self.POWERY=y
        self.POWER=None
        self.POWERBLIT=True

        self.V3L=False
        self.V3R=False
        self.V4=False
        self.V5=False
        self.V6=False
        self.V7=False
        self.V8=False
        self.V9L=False # It include D10
        self.V9R=False # It include D10
        self.V11R=False # It include D10
        self.V11L=False # It include D10
        self.V12=False
        self.V13=False
        self.V14=False
        self.V15=False
        self.V16=False
        self.V17=False
        self.V18=False
        self.V19=False
        self.V20=False
        self.V21=False
        self.V22=False
        self.V23=False
        self.V24=False
        self.V25=False
        self.V26=False
        self.V27=False
        self.V28=False
        self.V29=False
        self.V30=False
        self.V31=False
        self.V32=False
        self.V33=False
        self.V34=False
        self.V35=False
        self.V36=False
        self.V37=False
        self.V38=False

        self.Z0=False
        self.Z1=False
        self.Z2=False
        self.Z3=False
        self.Z4=False
        self.Z5=False
        self.Z6=False
        self.Z7=False
        self.Z8=False
        self.Z9=False
        self.Z10=False
        self.Z11=False
        self.Z12=False
        self.Z13=False
        self.Z14=False

    def Direction(self,X):
        if self.x>X.x:
            self.right=False
        elif self.x<X.x:
            self.right=True
        
    def Battelfeild(self,win):
        win.blit(self.BG,(0,0))
    def Computer(self,X):
        pass
    def Control(self,keys):
        if keys[pygame.K_RSHIFT] and keys[pygame.K_RIGHT]:
            if self.count==0:
                self.V9R=True
                
        elif keys[pygame.K_RSHIFT] and keys[pygame.K_LEFT]:
            if self.count==0:
                self.V9L=True

        elif keys[pygame.K_LSHIFT] and keys[pygame.K_RIGHT]:
            if self.count==0:
                self.V11R=True

        elif keys[pygame.K_LSHIFT] and keys[pygame.K_LEFT]:
            if self.count==0:
                self.V11L=True
                
        elif keys[pygame.K_LEFT]:
            if self.count==0:
                self.V3L=True
    
        elif keys[pygame.K_RIGHT]:
            if self.count==0:
                self.V3R=True
            
        elif keys[pygame.K_a]:
            if self.count==0:
                self.V4=True

        elif keys[pygame.K_s]:
            if self.count==0:
                self.V5=True
            
        elif keys[pygame.K_d]:
            if self.count==0:
                self.V6=True
            
        elif keys[pygame.K_UP]:
            if self.count==0:
                self.V7=True

        elif keys[pygame.K_DOWN]:
            if self.count==0:
                self.V8=True

        elif keys[pygame.K_DOWN]:
            if self.count==0:
                self.V12=True
        
        elif keys[pygame.K_SPACE]:
                self.V12=True
    
    def draw(self,win,X):
        if self.logo:
            win.blit(self.Logo,(0,0))
            pygame.draw.rect(win,(255,255,255),(0,0,100,100),1)
            win.blit(self.Name,(110,0))
            win.blit(self.V,(620,40))
            win.blit(self.A,(640,40))
            
            pygame.draw.rect(win,(0,0,0),(100,40,500,30))
            pygame.draw.rect(win,(254,194,190),(100,40,500,30))
            pygame.draw.rect(win,(255,255,255),(100,40,500,30),1)
            
            pygame.draw.rect(win,(0,0,0),(100,70,250,30))
            pygame.draw.rect(win,(255,223,0),(100,70,250,30))
            pygame.draw.rect(win,(255,255,255),(100,70,250,30),1)
        else:
            win.blit(self.Logo,(1200,0))
            pygame.draw.rect(win,(255,255,255),(1200,0,100,100),1)
            win.blit(self.Name,(1000,0))
            win.blit(self.S,(660,40))
            
            pygame.draw.rect(win,(0,0,0),(702,40,500,30))
            pygame.draw.rect(win,(254,194,190),(702,40,500,30))
            pygame.draw.rect(win,(255,255,255),(702,40,500,30),1)
            
            pygame.draw.rect(win,(0,0,0),(952,70,250,30))
            pygame.draw.rect(win,(255,223,0),(952,70,250,30))
            pygame.draw.rect(win,(255,255,255),(952,70,250,30),1)

            
        if self.V3L:
            self.Screen=self.SV3[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            if self.x>10:
                self.x-=2
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+ 1> 20:
                self.count=0
                self.V3L=False
                self.Direction(X)

        elif self.V3R:
            self.Screen=self.SV3[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            if self.x+164<1300:
                self.x+=2
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+ 1> 20:
                self.count=0
                self.V3R=False
                self.Direction(X)

        elif self.V4:
            self.Screen=self.SV4[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.count=0
                self.V4=False
                self.Direction(X)

        elif self.V5:
            self.y=330
            self.Screen=self.SV5[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.count=0
                self.y=300
                self.V5=False
                self.Direction(X)

        elif self.V6:
            self.Screen=self.SV6[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.count=0
                self.V6=False
                self.Direction(X)

        elif self.V7:
            if self.right and 1300 -(X.x+X.width)>164: # 164 self.widht
                if (self.x+164)>X.x-40 and  self.x<X.x+X.width+10  and self.count>11 and self.x+164 < 1300:
                    self.x+=50
            else:
                if X.x>164 :# 79 self.widht
                   if self.x<(X.x+X.width+40)and self.x+164>X.x-10 and self.count>11 and self.x > 20:
                        self.x-=50
                    
            if self.count<12 and self.count>4:
                self.y-=25
            self.Screen=self.SV7[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>20:
                if self.x+164>1300:
                    self.x=self.x-(self.x+164-1300)
                if self.x<10:
                    self.x=10
                self.count=0
                self.y=300
                self.V7=False
                self.Direction(X)


        elif self.V8:
            if self.count>8:
                self.y=360
            self.Screen=self.SV8[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.y=300
                self.count=0
                self.V8=False
                self.Direction(X)
                

        elif self.V9R: 
            if self.right:
                if self.x+155<X.x-20 and self.count>=8: #self.widht 154
                    self.x+=10
                    self.count=7
                self.Screen=self.SV9[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x+180<1300 and self.count>=8: # self.width 113
                    self.x+=10
                    self.count=7
                self.Screen=self.SV10[self.count//4]     
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>12:
                self.y=300
                self.count=0
                self.V9R=False
                self.Direction(X)
                
            
    
            
        elif self.V9L:
            if self.right:
                if self.x>10 and self.count>=8:
                    self.x-=10
                    self.count=7
                self.Screen=self.SV10[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x>X.x+X.width+20 and self.count>=8:
                    self.x-=10
                    self.count=7
                self.Screen=self.SV9[self.count//4]
                
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>12:
                self.y=300
                self.count=0
                self.V9L=False
                self.Direction(X)
            
                
                
            
        
        elif self.V11R:
            if self.right:
                if self.x+186<X.x-20 and self.count>=8: # SELF.WIDTH 186
                    self.x+=10
                    self.count=7
                self.Screen=self.SV11[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x+180<1300 and self.count>=8: # SELF.WIDTH 180
                    self.x+=10
                    self.count=7
                self.Screen=self.SV10[self.count//4]     
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.right:
                if self.count+1>16:
                        self.y=300
                        self.count=0
                        self.V11R=False
                        self.Direction(X)
            else:
                if self.count+1>12:
                        self.y=300
                        self.count=0
                        self.V11R=False
                        self.Direction(X)
                


        elif self.V11L:
            if self.right:
                if self.x>10 and self.count>=8:
                    self.x-=10
                    self.count=7
                self.Screen=self.SV10[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x>X.x+X.width+20 and self.count>=8:
                    self.x-=10
                    self.count=7
                self.Screen=self.SV11[self.count//4]
                
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.right:
                if self.count+1>12:
                    self.y=300
                    self.count=0
                    self.V11L=False
                    self.Direction(X)
            else:
                if self.count+1>16:
                    self.y=300
                    self.count=0
                    self.V11L=False
                    self.Direction(X)
                

        elif self.V12:
            self.SUPER=self.SE[self.SS//4]
            self.SUPER=pygame.transform.scale(self.SUPER,(300,280))
            self.Screen=self.SV12[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            win.blit(self.SUPER,(self.x-100,self.y-160))
            self.count+=1
            self.SS+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.SS+1>28:
                self.SS=0
            if self.count+1>24:
                self.y=self.Base
                self.count=0
                self.SS=0
                self.V12=False
                self.Direction(X)

        #======================= HITS =========================

        elif self.Z1:
            self.Screen=self.SZ1[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+175<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z1=False
                self.Direction(X)

        elif self.Z2:
            self.Screen=self.SZ2[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+172<1300:
                    self.x+=20
                
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z2=False
                self.Direction(X)

        elif self.Z3:
            self.Screen=self.SZ3[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+162<1300:
                    self.x+=20   
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z3=False
                self.Direction(X)
                

        elif self.Z4:
            self.Screen=self.SZ4[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+160<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z4=False
                self.Direction(X)

        elif self.Z5:
            self.Screen=self.SZ5[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+160<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z5=False
                self.Direction(X)
                

        elif self.Z6:
            self.y=self.Base+30
            self.Screen=self.SZ6[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+153<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z6=False
                self.Direction(X)

        elif self.Z7:
            self.y=self.Base+30
            self.Screen=self.SZ7[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+147<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z7=False
                self.Direction(X)

        elif self.Z8:
            self.Screen=self.SZ8[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=5
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+174<1300:
                    self.x+=5
            if self.y>100 and self.hit<20:
                self.y-=8
            if self.hit>20:
                self.y+=30
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>24:
                self.y=self.Base
                self.hit=0
                self.Z8=False
                self.Direction(X)
                
                

        elif self.Z9:
            self.Screen=self.SZ9[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+160<1300:
                    self.x+=20
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z9=False
                self.Direction(X)
                
                
        elif self.Z10:
            self.Screen=self.SZ10[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+163<1300:
                    self.x+=20
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z10=False
                self.Direction(X)

        elif self.Z11:
            self.Screen=self.SZ11[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+186<1300:
                    self.x+=20   
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z11=False
                self.Direction(X)

        elif self.Z12:
            self.Screen=self.SZ12[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+163<1300:
                    self.x+=20
                
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z12=False
                self.Direction(X)
        
        elif self.Z13:
            self.Screen=self.SZ13[self.hit//4]
            if self.right:
                if self.hit>8 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>8 and self.x+163<1300:
                    self.x+=15
                
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z13=False
                self.Direction(X)
                
        elif self.Z14:
            self.Screen=self.SZ14[self.hit//4]
            if self.right:
                if self.hit>4 and self.x>10:
                    self.x-=6
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>4 and self.x+158<1300:
                    self.x+=6
            if self.y>100 and self.hit<16:
                self.y-=5
            if self.hit>=16:
                self.y+=5
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>24:
                self.y=self.Base
                self.hit=0
                self.Z14=False
                self.Direction(X)
                
        elif self.Z0:
            if self.hit<20:
                self.y=self.Base+60
            elif self.hit==21:
                self.y=self.Base+30
            elif self.hit==25:
                self.y=self.Base+20
            elif self.hit==30:
                self.y=self.Base
            self.Screen=self.SZ0[self.hit//6]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>36:
                self.y=self.Base
                self.hit=0
                self.Z0=False
                self.Direction(X)

        
        else:
            self.Screen=self.Stand[self.stand//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.stand+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.stand+1 > 32:
                self.stand=0
                self.Direction(X)
            

#---------------------------------------------------------------------------------------------------------------------------------
class Saiyan_Goku():
    BG=pygame.image.load("data/bg/spaceimg.png").convert_alpha()
    BG=pygame.transform.scale(BG,(1300,600))
    font=pygame.font.SysFont('calibri',40,True,True)
    Name=font.render("Saiyan Goku",1,(218,170,79))
    V=font.render("V",1,(218,170,79))
    A=font.render("/",1,(255,223,0))
    S=font.render("S",1,(218,170,79))
    Logo=pygame.image.load("data/Select/A15.png").convert_alpha()
    Logo=pygame.transform.scale(Logo,(100,100))
    SE=[pygame.image.load("data/Effects/A1.png").convert_alpha(),pygame.image.load("data/Effects/A2.png").convert_alpha(),pygame.image.load("data/Effects/A3.png").convert_alpha(),pygame.image.load("data/Effects/A4.png").convert_alpha()]
    Stand=[pygame.image.load("data/Saiyan_Goku/A4.png").convert_alpha(),pygame.image.load("data/Saiyan_Goku/A5.png").convert_alpha(),pygame.image.load("data/Saiyan_Goku/A6.png").convert_alpha(),pygame.image.load("data/Saiyan_Goku/A7.png").convert_alpha(),pygame.image.load("data/Saiyan_Goku/A8.png").convert_alpha()]
    SW3=[pygame.image.load("data/Saiyan_Goku/C1.png").convert_alpha(),pygame.image.load("data/Saiyan_Goku/C2.png").convert_alpha(),pygame.image.load("data/Saiyan_Goku/C3.png").convert_alpha(),pygame.image.load("data/Saiyan_Goku/C4.png").convert_alpha(),pygame.image.load("data/Saiyan_Goku/C5.png").convert_alpha(),pygame.image.load("data/Saiyan_Goku/C6.png").convert_alpha()]
    SW4=[pygame.image.load("data/Saiyan_Goku/D1.png").convert_alpha(),pygame.image.load("data/Saiyan_Goku/D2.png").convert_alpha(),pygame.image.load("data/Saiyan_Goku/D3.png").convert_alpha(),pygame.image.load("data/Saiyan_Goku/D3.png").convert_alpha(),pygame.image.load("data/Saiyan_Goku/D3.png").convert_alpha(),pygame.image.load("data/Saiyan_Goku/D3.png").convert_alpha()]
    SW5=[pygame.image.load("data/Saiyan_Goku/E1.png").convert_alpha(),pygame.image.load("data/Saiyan_Goku/E2.png").convert_alpha(),pygame.image.load("data/Saiyan_Goku/E3.png").convert_alpha(),pygame.image.load("data/Saiyan_Goku/E3.png").convert_alpha(),pygame.image.load("data/Saiyan_Goku/E3.png").convert_alpha(),pygame.image.load("data/Saiyan_Goku/E3.png").convert_alpha()]
    SW6=[pygame.image.load("data/Saiyan_Goku/F1.png").convert_alpha(),pygame.image.load("data/Saiyan_Goku/F2.png").convert_alpha(),pygame.image.load("data/Saiyan_Goku/F3.png").convert_alpha(),pygame.image.load("data/Saiyan_Goku/F3.png").convert_alpha(),pygame.image.load("data/Saiyan_Goku/F3.png").convert_alpha(),pygame.image.load("data/Saiyan_Goku/F3.png").convert_alpha()]
    SW7=[pygame.image.load("data/Saiyan_Goku/G1.png").convert_alpha(),pygame.image.load("data/Saiyan_Goku/G2.png").convert_alpha(),pygame.image.load("data/Saiyan_Goku/G3.png").convert_alpha(),pygame.image.load("data/Saiyan_Goku/G4.png").convert_alpha(),pygame.image.load("data/Saiyan_Goku/G5.png").convert_alpha(),pygame.image.load("data/Saiyan_Goku/G6.png").convert_alpha(),pygame.image.load("data/Saiyan_Goku/G7.png").convert_alpha(),pygame.image.load("data/Saiyan_Goku/G8.png").convert_alpha()]
    SW8=[pygame.image.load("data/Saiyan_Goku/H1.png").convert_alpha(),pygame.image.load("data/Saiyan_Goku/H2.png").convert_alpha(),pygame.image.load("data/Saiyan_Goku/H3.png").convert_alpha(),pygame.image.load("data/Saiyan_Goku/H3.png").convert_alpha(),pygame.image.load("data/Saiyan_Goku/H3.png").convert_alpha(),pygame.image.load("data/Saiyan_Goku/H3.png").convert_alpha()]
    SW9=[pygame.image.load("data/Saiyan_Goku/I1.png").convert_alpha(),pygame.image.load("data/Saiyan_Goku/I2.png").convert_alpha(),pygame.image.load("data/Saiyan_Goku/I3.png").convert_alpha()]
    SW10=[pygame.image.load("data/Saiyan_Goku/J1.png").convert_alpha(),pygame.image.load("data/Saiyan_Goku/J2.png").convert_alpha(),pygame.image.load("data/Saiyan_Goku/J3.png").convert_alpha()]
    SW11=[pygame.image.load("data/Saiyan_Goku/K1.png").convert_alpha(),pygame.image.load("data/Saiyan_Goku/K2.png").convert_alpha(),pygame.image.load("data/Saiyan_Goku/K3.png").convert_alpha()]
    SW12=[pygame.image.load("data/Saiyan_Goku/L1.png").convert_alpha(),pygame.image.load("data/Saiyan_Goku/L2.png").convert_alpha(),pygame.image.load("data/Saiyan_Goku/L3.png").convert_alpha(),pygame.image.load("data/Saiyan_Goku/L4.png").convert_alpha(),pygame.image.load("data/Saiyan_Goku/L5.png").convert_alpha()]

    SZ0=[pygame.image.load("data/Saiyan_Goku/AZ1.png").convert_alpha(),pygame.image.load("data/Saiyan_Goku/AZ2.png").convert_alpha(),pygame.image.load("data/Saiyan_Goku/AZ3.png").convert_alpha(),pygame.image.load("data/Saiyan_Goku/AZ4.png").convert_alpha(),pygame.image.load("data/Saiyan_Goku/AZ5.png").convert_alpha(),pygame.image.load("data/Saiyan_Goku/AZ6.png").convert_alpha(),pygame.image.load("data/Saiyan_Goku/AZ7.png").convert_alpha(),pygame.image.load("data/Saiyan_Goku/AZ7.png").convert_alpha()]
    SZ1=[pygame.image.load("data/Saiyan_Goku/AQ1.png").convert_alpha(),pygame.image.load("data/Saiyan_Goku/AQ2.png").convert_alpha(),pygame.image.load("data/Saiyan_Goku/AQ3.png").convert_alpha(),pygame.image.load("data/Saiyan_Goku/AQ4.png").convert_alpha()]
    SZ2=[pygame.image.load("data/Saiyan_Goku/AR1.png").convert_alpha(),pygame.image.load("data/Saiyan_Goku/AR2.png").convert_alpha()]
    SZ3=[pygame.image.load("data/Saiyan_Goku/AW3.png").convert_alpha(),pygame.image.load("data/Saiyan_Goku/AW4.png").convert_alpha(),pygame.image.load("data/Saiyan_Goku/AW1.png").convert_alpha(),pygame.image.load("data/Saiyan_Goku/AW2.png").convert_alpha()]
    SZ4=[pygame.image.load("data/Saiyan_Goku/AN1.png").convert_alpha(),pygame.image.load("data/Saiyan_Goku/AN2.png").convert_alpha(),pygame.image.load("data/Saiyan_Goku/AN3.png").convert_alpha(),pygame.image.load("data/Saiyan_Goku/AN4.png").convert_alpha()]
    SZ5=[pygame.image.load("data/Saiyan_Goku/AT1.png").convert_alpha(),pygame.image.load("data/Saiyan_Goku/AT2.png").convert_alpha(),pygame.image.load("data/Saiyan_Goku/AT3.png").convert_alpha(),pygame.image.load("data/Saiyan_Goku/AT4.png").convert_alpha()]
    SZ6=[pygame.image.load("data/Saiyan_Goku/AU1.png").convert_alpha(),pygame.image.load("data/Saiyan_Goku/AU2.png").convert_alpha()]
    SZ7=[pygame.image.load("data/Saiyan_Goku/AV1.png").convert_alpha(),pygame.image.load("data/Saiyan_Goku/AV2.png").convert_alpha()]
    SZ8=[pygame.image.load("data/Saiyan_Goku/AX1.png").convert_alpha(),pygame.image.load("data/Saiyan_Goku/AX2.png").convert_alpha(),pygame.image.load("data/Saiyan_Goku/AW1.png").convert_alpha(),pygame.image.load("data/Saiyan_Goku/AW2.png").convert_alpha(),pygame.image.load("data/Saiyan_Goku/AY1.png").convert_alpha(),pygame.image.load("data/Saiyan_Goku/AY2.png").convert_alpha()]
    SZ9=[pygame.image.load("data/Saiyan_Goku/AP1.png").convert_alpha(),pygame.image.load("data/Saiyan_Goku/AP2.png").convert_alpha()]
    SZ10=[pygame.image.load("data/Saiyan_Goku/AS1.png").convert_alpha(),pygame.image.load("data/Saiyan_Goku/AS2.png").convert_alpha()]
    SZ11=[pygame.image.load("data/Saiyan_Goku/AM1.png").convert_alpha(),pygame.image.load("data/Saiyan_Goku/AM2.png").convert_alpha(),pygame.image.load("data/Saiyan_Goku/AM3.png").convert_alpha(),pygame.image.load("data/Saiyan_Goku/AM4.png").convert_alpha()]
    SZ12=[pygame.image.load("data/Saiyan_Goku/AO1.png").convert_alpha(),pygame.image.load("data/Saiyan_Goku/AO2.png").convert_alpha()]
    SZ13=[pygame.image.load("data/Saiyan_Goku/AW3.png").convert_alpha(),pygame.image.load("data/Saiyan_Goku/AW4.png").convert_alpha(),pygame.image.load("data/Saiyan_Goku/AY3.png").convert_alpha(),pygame.image.load("data/Saiyan_Goku/AY4.png").convert_alpha()]
    SZ14=[pygame.image.load("data/Saiyan_Goku/AX3.png").convert_alpha(),pygame.image.load("data/Saiyan_Goku/AX3.png").convert_alpha(),pygame.image.load("data/Saiyan_Goku/AX4.png").convert_alpha(),pygame.image.load("data/Saiyan_Goku/AX4.png").convert_alpha(),pygame.image.load("data/Saiyan_Goku/AY4.png").convert_alpha(),pygame.image.load("data/Saiyan_Goku/AY4.png").convert_alpha()]
    
    def __init__(self,x,y,right,logo):
        self.x=x
        self.Base=y
        self.y=y
        self.width=None
        self.height=None
        self.health=None
        self.right=right
        self.logo=logo
        self.SS=0
        self.count=0
        self.stand=0
        self.move=0
        self.hit=0
        self.attack=0
        self.Attack=False
        self.EffectWork=False
        self.Effect=None
        self.Screen=None
        self.SUPER=None
        self.POWERX=x
        self.POWERY=y
        self.POWER=None
        self.POWERBLIT=True

        self.W3L=False
        self.W3R=False
        self.W4=False
        self.W5=False
        self.W6=False
        self.W7=False
        self.W8=False
        self.W9L=False # It include D10
        self.W9R=False # It include D10
        self.W11R=False # It include D10
        self.W11L=False # It include D10
        self.W12=False
        self.W13=False
        self.W14=False
        self.W15=False
        self.W16=False
        self.W17=False
        self.W18=False
        self.W19=False
        self.W20=False
        self.W21=False
        self.W22=False
        self.W23=False
        self.W24=False
        self.W25=False
        self.W26=False
        self.W27=False
        self.W28=False
        self.W29=False
        self.W30=False
        self.W31=False
        self.W32=False
        self.W33=False
        self.W34=False
        self.W35=False
        self.W36=False
        self.W37=False
        self.W38=False

        self.Z0=False
        self.Z1=False
        self.Z2=False
        self.Z3=False
        self.Z4=False
        self.Z5=False
        self.Z6=False
        self.Z7=False
        self.Z8=False
        self.Z9=False
        self.Z10=False
        self.Z11=False
        self.Z12=False
        self.Z13=False
        self.Z14=False

    def Direction(self,X):
        if self.x>X.x:
            self.right=False
        elif self.x<X.x:
            self.right=True
        
    def Battelfeild(self,win):
        win.blit(self.BG,(0,0))
    def Computer(self,X):
        pass
    def Control(self,keys):
        if keys[pygame.K_RSHIFT] and keys[pygame.K_RIGHT]:
            if self.count==0:
                self.W9R=True
                
        elif keys[pygame.K_RSHIFT] and keys[pygame.K_LEFT]:
            if self.count==0:
                self.W9L=True

        elif keys[pygame.K_LSHIFT] and keys[pygame.K_RIGHT]:
            if self.count==0:
                self.W11R=True

        elif keys[pygame.K_LSHIFT] and keys[pygame.K_LEFT]:
            if self.count==0:
                self.W11L=True
                
        elif keys[pygame.K_LEFT]:
            if self.count==0:
                self.W3L=True
    
        elif keys[pygame.K_RIGHT]:
            if self.count==0:
                self.W3R=True
            
        elif keys[pygame.K_a]:
            if self.count==0:
                self.W4=True

        elif keys[pygame.K_s]:
            if self.count==0:
                self.W5=True
            
        elif keys[pygame.K_d]:
            if self.count==0:
                self.W6=True
            
        elif keys[pygame.K_UP]:
            if self.count==0:
                self.W7=True

        elif keys[pygame.K_DOWN]:
            if self.count==0:
                self.W8=True

        elif keys[pygame.K_DOWN]:
            if self.count==0:
                self.W12=True
        
        elif keys[pygame.K_SPACE]:
                self.W12=True
    
    def draw(self,win,X):
        if self.logo:
            win.blit(self.Logo,(0,0))
            pygame.draw.rect(win,(255,255,255),(0,0,100,100),1)
            win.blit(self.Name,(110,0))
            win.blit(self.V,(620,40))
            win.blit(self.A,(640,40))
            
            pygame.draw.rect(win,(0,0,0),(100,40,500,30))
            pygame.draw.rect(win,(218,170,79),(100,40,500,30))
            pygame.draw.rect(win,(255,255,255),(100,40,500,30),1)
            
            pygame.draw.rect(win,(0,0,0),(100,70,250,30))
            pygame.draw.rect(win,(255,223,0),(100,70,250,30))
            pygame.draw.rect(win,(255,255,255),(100,70,250,30),1)
            
        else:
            win.blit(self.Logo,(1200,0))
            pygame.draw.rect(win,(255,255,255),(1200,0,100,100),1)
            win.blit(self.Name,(980,0))
            win.blit(self.S,(660,40))
            
            pygame.draw.rect(win,(0,0,0),(702,40,500,30))
            pygame.draw.rect(win,(218,170,79),(702,40,500,30))
            pygame.draw.rect(win,(255,255,255),(702,40,500,30),1)
            
            pygame.draw.rect(win,(0,0,0),(952,70,250,30))
            pygame.draw.rect(win,(255,223,0),(952,70,250,30))
            pygame.draw.rect(win,(255,255,255),(952,70,250,30),1)

            
        if self.W3L:
            self.Screen=self.SW3[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            if self.x>10:
                self.x-=2
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+ 1> 24:
                self.count=0
                self.W3L=False
                self.Direction(X)

        elif self.W3R:
            self.Screen=self.SW3[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            if self.x+106<1300:
                self.x+=2
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+ 1> 24:
                self.count=0
                self.W3R=False
                self.Direction(X)

        elif self.W4:
            self.Screen=self.SW4[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.count=0
                self.W4=False
                self.Direction(X)

        elif self.W5:
            self.y=330
            self.Screen=self.SW5[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.count=0
                self.y=300
                self.W5=False
                self.Direction(X)

        elif self.W6:
            self.Screen=self.SW6[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.count=0
                self.W6=False
                self.Direction(X)

        elif self.W7:
            if self.right and 1300 -(X.x+X.width)>106: # 106 self.widht
                if (self.x+106)>X.x-40 and  self.x<X.x+X.width+10  and self.count>11 and self.x+106 < 1300:
                    self.x+=50
            else:
                if X.x>106 :# 79 self.widht
                   if self.x<(X.x+X.width+40)and self.x+106>X.x-10 and self.count>11 and self.x > 20:
                        self.x-=50
                    
            if self.count<12 and self.count>4:
                self.y-=25
            self.Screen=self.SW7[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>32:
                if self.x+106>1300:
                    self.x=self.x-(self.x+106-1300)
                if self.x<10:
                    self.x=10
                self.count=0
                self.y=300
                self.W7=False
                self.Direction(X)


        elif self.W8:
            if self.count>8:
                self.y=360
            self.Screen=self.SW8[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.y=300
                self.count=0
                self.W8=False
                self.Direction(X)

        elif self.W9R: 
            if self.right:
                if self.x+136<X.x-20 and self.count>=8: #self.widht 136
                    self.x+=10
                    self.count=7
                self.Screen=self.SW9[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x+106<1300 and self.count>=8: # self.width 106
                    self.x+=10
                    self.count=7
                self.Screen=self.SW10[self.count//4]     
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>12:
                self.y=300
                self.count=0
                self.W9R=False
                self.Direction(X)
                

        elif self.W9L:
            if self.right:
                if self.x>10 and self.count>=8:
                    self.x-=10
                    self.count=7
                self.Screen=self.SW10[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x>X.x+X.width+20 and self.count>=8:
                    self.x-=10
                    self.count=7
                self.Screen=self.SW9[self.count//4]
                
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>12:
                self.y=300
                self.count=0
                self.W9L=False
                self.Direction(X)

                
        
        elif self.W11R:
            if self.right:
                if self.x+165<X.x-20 and self.count>=8: # SELF.WIDTH 165
                    self.x+=10
                    self.count=7
                self.Screen=self.SW11[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x+106<1300 and self.count>=8: # SELF.WIDTH 106
                    self.x+=10
                    self.count=7
                self.Screen=self.SW10[self.count//4]     
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>12:
                    self.y=300
                    self.count=0
                    self.W11R=False
                    self.Direction(X) 
                


        elif self.W11L:
            if self.right: 
                if self.x>10 and self.count>=8:
                    self.x-=10
                    self.count=7
                self.Screen=self.SW10[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x>X.x+X.width+20 and self.count>=8:
                    self.x-=10
                    self.count=7
                self.Screen=self.SW11[self.count//4]
                
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>12:
                    self.y=300
                    self.count=0
                    self.W11L=False
                    self.Direction(X)
                        
        elif self.W12:
            self.SUPER=self.SE[self.SS//4]
            self.SUPER=pygame.transform.scale(self.SUPER,(300,280))
            self.Screen=self.SW12[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            win.blit(self.SUPER,(self.x-100,self.y-160))
            self.count+=1
            self.SS+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.SS+1>16:
                self.SS=0
            if self.count+1>20:
                self.y=self.Base
                self.count=0
                self.SS=0
                self.W12=False
                self.Direction(X)
        
        #======================= HITS =========================

        elif self.Z1:
            self.Screen=self.SZ1[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+99<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z1=False
                self.Direction(X)

        elif self.Z2:
            self.Screen=self.SZ2[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+91<1300:
                    self.x+=20
                
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z2=False
                self.Direction(X)

        elif self.Z3:
            self.Screen=self.SZ3[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+132<1300:
                    self.x+=20   
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z3=False
                self.Direction(X)
                

        elif self.Z4:
            self.Screen=self.SZ4[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+94<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z4=False
                self.Direction(X)

        elif self.Z5:
            self.Screen=self.SZ5[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+112<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z5=False
                self.Direction(X)
                

        elif self.Z6:
            self.y=self.Base+30
            self.Screen=self.SZ6[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+115<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z6=False
                self.Direction(X)

        elif self.Z7:
            self.y=self.Base+30
            self.Screen=self.SZ7[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+111<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z7=False
                self.Direction(X)

        elif self.Z8:
            self.Screen=self.SZ8[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=5
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+132<1300:
                    self.x+=5
            if self.y>100 and self.hit<20:
                self.y-=8
            if self.hit>20:
                self.y+=30
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>24:
                self.y=self.Base
                self.hit=0
                self.Z8=False
                self.Direction(X)
                
                

        elif self.Z9:
            self.Screen=self.SZ9[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+79<1300:
                    self.x+=20
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z9=False
                self.Direction(X)
                
                
        elif self.Z10:
            self.Screen=self.SZ10[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+85<1300:
                    self.x+=20
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z10=False
                self.Direction(X)

        elif self.Z11:
            self.Screen=self.SZ11[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+117<1300:
                    self.x+=20   
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z11=False
                self.Direction(X)

        elif self.Z12:
            self.Screen=self.SZ12[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+93<1300:
                    self.x+=20
                
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z12=False
                self.Direction(X)
        
        elif self.Z13:
            self.Screen=self.SZ13[self.hit//4]
            if self.right:
                if self.hit>8 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>8 and self.x+100<1300:
                    self.x+=15
                
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z13=False
                self.Direction(X)
                
        elif self.Z14:
            self.Screen=self.SZ14[self.hit//4]
            if self.right:
                if self.hit>4 and self.x>10:
                    self.x-=6
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>4 and self.x+92<1300:
                    self.x+=6
            if self.y>100 and self.hit<16:
                self.y-=5
            if self.hit>=16:
                self.y+=5
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>24:
                self.y=self.Base
                self.hit=0
                self.Z14=False
                self.Direction(X)
                
        elif self.Z0:
            if self.hit<20:
                self.y=self.Base+60
            elif self.hit==21:
                self.y=self.Base+30
            elif self.hit==25:
                self.y=self.Base+20
            elif self.hit==30:
                self.y=self.Base
            self.Screen=self.SZ0[self.hit//6]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>48:
                self.y=self.Base
                self.hit=0
                self.Z0=False
                self.Direction(X)

        else:
            self.Screen=self.Stand[self.stand//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.stand+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.stand+1 > 20:
                self.stand=0
                self.Direction(X)

#---------------------------------------------------------------------------------------------------------------------------------
class Cell():
    BG=pygame.image.load("data/bg/spaceimg.png").convert_alpha()
    BG=pygame.transform.scale(BG,(1300,600))
    font=pygame.font.SysFont('calibri',40,True,True)
    Name=font.render("Cell",1,(65,180,85))
    V=font.render("V",1,(65,180,85))
    A=font.render("/",1,(255,223,0))
    S=font.render("S",1,(65,180,85))
    Logo=pygame.image.load("data/Select/A20.png").convert_alpha()
    Logo=pygame.transform.scale(Logo,(100,100))
    SE=[pygame.image.load("data/Effects/A5.png").convert_alpha(),pygame.image.load("data/Effects/A6.png").convert_alpha(),pygame.image.load("data/Effects/A7.png").convert_alpha(),pygame.image.load("data/Effects/A8.png").convert_alpha(),pygame.image.load("data/Effects/A9.png").convert_alpha(),pygame.image.load("data/Effects/A10.png").convert_alpha(),pygame.image.load("data/Effects/A11.png").convert_alpha()]
    Stand=[pygame.image.load("data/Cell/A1.png").convert_alpha(),pygame.image.load("data/Cell/A2.png").convert_alpha(),pygame.image.load("data/Cell/A3.png").convert_alpha(),pygame.image.load("data/Cell/A4.png").convert_alpha()]
    SX3=[pygame.image.load("data/Cell/C1.png").convert_alpha(),pygame.image.load("data/Cell/C2.png").convert_alpha(),pygame.image.load("data/Cell/C3.png").convert_alpha(),pygame.image.load("data/Cell/C4.png").convert_alpha(),pygame.image.load("data/Cell/C5.png").convert_alpha(),pygame.image.load("data/Cell/C6.png").convert_alpha(),pygame.image.load("data/Cell/C7.png").convert_alpha(),pygame.image.load("data/Cell/C8.png").convert_alpha(),pygame.image.load("data/Cell/C9.png").convert_alpha(),pygame.image.load("data/Cell/C10.png").convert_alpha()]
    SX4=[pygame.image.load("data/Cell/D1.png").convert_alpha(),pygame.image.load("data/Cell/D2.png").convert_alpha(),pygame.image.load("data/Cell/D3.png").convert_alpha(),pygame.image.load("data/Cell/D3.png").convert_alpha(),pygame.image.load("data/Cell/D3.png").convert_alpha(),pygame.image.load("data/Cell/D3.png").convert_alpha()]
    SX5=[pygame.image.load("data/Cell/E1.png").convert_alpha(),pygame.image.load("data/Cell/E2.png").convert_alpha(),pygame.image.load("data/Cell/E3.png").convert_alpha(),pygame.image.load("data/Cell/E3.png").convert_alpha(),pygame.image.load("data/Cell/E3.png").convert_alpha(),pygame.image.load("data/Cell/E3.png").convert_alpha()]
    SX6=[pygame.image.load("data/Cell/F1.png").convert_alpha(),pygame.image.load("data/Cell/F2.png").convert_alpha(),pygame.image.load("data/Cell/F3.png").convert_alpha(),pygame.image.load("data/Cell/F3.png").convert_alpha(),pygame.image.load("data/Cell/F3.png").convert_alpha(),pygame.image.load("data/Cell/F3.png").convert_alpha()]
    SX7=[pygame.image.load("data/Cell/G1.png").convert_alpha(),pygame.image.load("data/Cell/G2.png").convert_alpha(),pygame.image.load("data/Cell/G3.png").convert_alpha(),pygame.image.load("data/Cell/G4.png").convert_alpha(),pygame.image.load("data/Cell/G5.png").convert_alpha(),pygame.image.load("data/Cell/G6.png").convert_alpha(),pygame.image.load("data/Cell/G7.png").convert_alpha(),pygame.image.load("data/Cell/G8.png").convert_alpha()]
    SX8=[pygame.image.load("data/Cell/H1.png").convert_alpha(),pygame.image.load("data/Cell/H2.png").convert_alpha(),pygame.image.load("data/Cell/H3.png").convert_alpha(),pygame.image.load("data/Cell/H3.png").convert_alpha(),pygame.image.load("data/Cell/H3.png").convert_alpha(),pygame.image.load("data/Cell/H3.png").convert_alpha()]
    SX9=[pygame.image.load("data/Cell/I1.png").convert_alpha(),pygame.image.load("data/Cell/I2.png").convert_alpha()]
    SX10=[pygame.image.load("data/Cell/J1.png").convert_alpha(),pygame.image.load("data/Cell/J2.png").convert_alpha(),pygame.image.load("data/Cell/J3.png").convert_alpha()]
    SX11=[pygame.image.load("data/Cell/K1.png").convert_alpha(),pygame.image.load("data/Cell/K2.png").convert_alpha(),pygame.image.load("data/Cell/K3.png").convert_alpha(),pygame.image.load("data/Cell/K4.png").convert_alpha()]
    SX12=[pygame.image.load("data/Cell/L1.png").convert_alpha(),pygame.image.load("data/Cell/L2.png").convert_alpha(),pygame.image.load("data/Cell/L3.png").convert_alpha(),pygame.image.load("data/Cell/L4.png").convert_alpha(),pygame.image.load("data/Cell/L5.png").convert_alpha()]

    SZ0=[pygame.image.load("data/Cell/AZ1.png").convert_alpha(),pygame.image.load("data/Cell/AZ2.png").convert_alpha(),pygame.image.load("data/Cell/AZ3.png").convert_alpha(),pygame.image.load("data/Cell/AZ4.png").convert_alpha(),pygame.image.load("data/Cell/AZ5.png").convert_alpha(),pygame.image.load("data/Cell/AZ6.png").convert_alpha(),pygame.image.load("data/Cell/AZ7.png").convert_alpha(),pygame.image.load("data/Cell/AZ7.png").convert_alpha()]
    SZ1=[pygame.image.load("data/Cell/AQ1.png").convert_alpha(),pygame.image.load("data/Cell/AQ2.png").convert_alpha(),pygame.image.load("data/Cell/AQ3.png").convert_alpha(),pygame.image.load("data/Cell/AQ4.png").convert_alpha()]
    SZ2=[pygame.image.load("data/Cell/AR1.png").convert_alpha(),pygame.image.load("data/Cell/AR2.png").convert_alpha()]
    SZ3=[pygame.image.load("data/Cell/AW3.png").convert_alpha(),pygame.image.load("data/Cell/AW4.png").convert_alpha(),pygame.image.load("data/Cell/AW1.png").convert_alpha(),pygame.image.load("data/Cell/AW2.png").convert_alpha()]
    SZ4=[pygame.image.load("data/Cell/AN1.png").convert_alpha(),pygame.image.load("data/Cell/AN2.png").convert_alpha(),pygame.image.load("data/Cell/AN3.png").convert_alpha(),pygame.image.load("data/Cell/AN4.png").convert_alpha()]
    SZ5=[pygame.image.load("data/Cell/AT1.png").convert_alpha(),pygame.image.load("data/Cell/AT2.png").convert_alpha(),pygame.image.load("data/Cell/AT3.png").convert_alpha(),pygame.image.load("data/Cell/AT4.png").convert_alpha()]
    SZ6=[pygame.image.load("data/Cell/AU1.png").convert_alpha(),pygame.image.load("data/Cell/AU2.png").convert_alpha()]
    SZ7=[pygame.image.load("data/Cell/AV1.png").convert_alpha(),pygame.image.load("data/Cell/AV2.png").convert_alpha()]
    SZ8=[pygame.image.load("data/Cell/AX1.png").convert_alpha(),pygame.image.load("data/Cell/AX2.png").convert_alpha(),pygame.image.load("data/Cell/AW1.png").convert_alpha(),pygame.image.load("data/Cell/AW2.png").convert_alpha(),pygame.image.load("data/Cell/AY1.png").convert_alpha(),pygame.image.load("data/Cell/AY2.png").convert_alpha()]
    SZ9=[pygame.image.load("data/Cell/AP1.png").convert_alpha(),pygame.image.load("data/Cell/AP2.png").convert_alpha()]
    SZ10=[pygame.image.load("data/Cell/AS1.png").convert_alpha(),pygame.image.load("data/Cell/AS2.png").convert_alpha()]
    SZ11=[pygame.image.load("data/Cell/AM1.png").convert_alpha(),pygame.image.load("data/Cell/AM2.png").convert_alpha(),pygame.image.load("data/Cell/AM3.png").convert_alpha(),pygame.image.load("data/Cell/AM4.png").convert_alpha()]
    SZ12=[pygame.image.load("data/Cell/AO1.png").convert_alpha(),pygame.image.load("data/Cell/AO2.png").convert_alpha()]
    SZ13=[pygame.image.load("data/Cell/AW3.png").convert_alpha(),pygame.image.load("data/Cell/AW4.png").convert_alpha(),pygame.image.load("data/Cell/AY3.png").convert_alpha(),pygame.image.load("data/Cell/AY4.png").convert_alpha()]
    SZ14=[pygame.image.load("data/Cell/AX3.png").convert_alpha(),pygame.image.load("data/Cell/AX3.png").convert_alpha(),pygame.image.load("data/Cell/AX4.png").convert_alpha(),pygame.image.load("data/Cell/AX4.png").convert_alpha(),pygame.image.load("data/Cell/AY4.png").convert_alpha(),pygame.image.load("data/Cell/AY4.png").convert_alpha()]
    
    def __init__(self,x,y,right,logo):
        self.x=x
        self.Base=y
        self.y=y
        self.width=None
        self.height=None
        self.health=None
        self.right=right
        self.logo=logo
        self.SS=0
        self.count=0
        self.stand=0
        self.move=0
        self.hit=0
        self.attack=0
        self.Attack=False
        self.EffectWork=False
        self.Effect=None
        self.Screen=None
        self.SUPER=None
        self.POWERX=x
        self.POWERY=y
        self.POWER=None
        self.POWERBLIT=True

        self.X3L=False
        self.X3R=False
        self.X4=False
        self.X5=False
        self.X6=False
        self.X7=False
        self.X8=False
        self.X9L=False # It include D10
        self.X9R=False # It include D10
        self.X11R=False # It include D10
        self.X11L=False # It include D10
        self.X12=False
        self.X13=False
        self.X14=False
        self.X15=False
        self.X16=False
        self.X17=False
        self.X18=False
        self.X19=False
        self.X20=False
        self.X21=False
        self.X22=False
        self.X23=False
        self.X24=False
        self.X25=False
        self.X26=False
        self.X27=False
        self.X28=False
        self.X29=False
        self.X30=False
        self.X31=False
        self.X32=False
        self.X33=False
        self.X34=False
        self.X35=False
        self.X36=False
        self.X37=False
        self.X38=False

        self.Z0=False
        self.Z1=False
        self.Z2=False
        self.Z3=False
        self.Z4=False
        self.Z5=False
        self.Z6=False
        self.Z7=False
        self.Z8=False
        self.Z9=False
        self.Z10=False
        self.Z11=False
        self.Z12=False
        self.Z13=False
        self.Z14=False

    def Direction(self,X):
        if self.x>X.x:
            self.right=False
        elif self.x<X.x:
            self.right=True
        
    def Battelfeild(self,win):
        win.blit(self.BG,(0,0))
    def Computer(self,X):
        pass
    def Control(self,keys):
        if keys[pygame.K_RSHIFT] and keys[pygame.K_RIGHT]:
            if self.count==0:
                self.X9R=True
                
        elif keys[pygame.K_RSHIFT] and keys[pygame.K_LEFT]:
            if self.count==0:
                self.X9L=True

        elif keys[pygame.K_LSHIFT] and keys[pygame.K_RIGHT]:
            if self.count==0:
                self.X11R=True

        elif keys[pygame.K_LSHIFT] and keys[pygame.K_LEFT]:
            if self.count==0:
                self.X11L=True
                
        elif keys[pygame.K_LEFT]:
            if self.count==0:
                self.X3L=True
    
        elif keys[pygame.K_RIGHT]:
            if self.count==0:
                self.X3R=True
            
        elif keys[pygame.K_a]:
            if self.count==0:
                self.X4=True

        elif keys[pygame.K_s]:
            if self.count==0:
                self.X5=True
            
        elif keys[pygame.K_d]:
            if self.count==0:
                self.X6=True
            
        elif keys[pygame.K_UP]:
            if self.count==0:
                self.X7=True

        elif keys[pygame.K_DOWN]:
            if self.count==0:
                self.X8=True

        elif keys[pygame.K_DOWN]:
            if self.count==0:
                self.X12=True
        
        elif keys[pygame.K_SPACE]:
                self.X12=True
    
    def draw(self,win,X):
        if self.logo:
            win.blit(self.Logo,(0,0))
            pygame.draw.rect(win,(255,255,255),(0,0,100,100),1)
            win.blit(self.Name,(110,0))
            win.blit(self.V,(620,40))
            win.blit(self.A,(640,40))
            
            pygame.draw.rect(win,(0,0,0),(100,40,500,30))
            pygame.draw.rect(win,(65,180,85),(100,40,500,30))
            pygame.draw.rect(win,(255,255,255),(100,40,500,30),1)
            
            pygame.draw.rect(win,(0,0,0),(100,70,250,30))
            pygame.draw.rect(win,(255,223,0),(100,70,250,30))
            pygame.draw.rect(win,(255,255,255),(100,70,250,30),1)
            
        else:
            win.blit(self.Logo,(1200,0))
            pygame.draw.rect(win,(255,255,255),(1200,0,100,100),1)
            win.blit(self.Name,(1120,0))
            win.blit(self.S,(660,40))
            
            pygame.draw.rect(win,(0,0,0),(702,40,500,30))
            pygame.draw.rect(win,(65,180,85),(702,40,500,30))
            pygame.draw.rect(win,(255,255,255),(702,40,500,30),1)
            
            pygame.draw.rect(win,(0,0,0),(952,70,250,30))
            pygame.draw.rect(win,(255,223,0),(952,70,250,30))
            pygame.draw.rect(win,(255,255,255),(952,70,250,30),1)

            
        if self.X3L:
            self.Screen=self.SX3[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            if self.x>10:
                self.x-=1
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+ 1> 40:
                self.count=0
                self.X3L=False
                self.Direction(X)

        elif self.X3R:
            self.Screen=self.SX3[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            if self.x+125<1300:
                self.x+=1
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+ 1> 40:
                self.count=0
                self.X3R=False
                self.Direction(X)

        elif self.X4:
            self.Screen=self.SX4[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.count=0
                self.X4=False
                self.Direction(X)

        elif self.X5:
            self.y=330
            self.Screen=self.SX5[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.count=0
                self.y=300
                self.X5=False
                self.Direction(X)

        elif self.X6:
            self.Screen=self.SX6[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.count=0
                self.X6=False
                self.Direction(X)

        elif self.X7:
            if self.right and 1300 -(X.x+X.width)>125: # 106 self.widht
                if (self.x+125)>X.x-40 and  self.x<X.x+X.width+10  and self.count>11 and self.x+125 < 1300:
                    self.x+=50
            else:
                if X.x>125 :# 79 self.widht
                   if self.x<(X.x+X.width+40)and self.x+125>X.x-10 and self.count>11 and self.x > 20:
                        self.x-=50
                    
            if self.count<12 and self.count>4:
                self.y-=25
            self.Screen=self.SX7[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>32:
                if self.x+125>1300:
                    self.x=self.x-(self.x+125-1300)
                if self.x<10:
                    self.x=10
                self.count=0
                self.y=300
                self.X7=False
                self.Direction(X)

        elif self.X8:
            if self.count>8:
                self.y=360
            self.Screen=self.SX8[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.y=300
                self.count=0
                self.X8=False
                self.Direction(X)
                

        elif self.X9R: 
            if self.right:
                if self.x+208<X.x-20 and self.count>=7: #self.widht 208
                    self.x+=10
                    self.count=6
                self.Screen=self.SX9[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x+124<1300 and self.count>=8: # self.width 124
                    self.x+=10
                    self.count=7
                self.Screen=self.SX10[self.count//4]     
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.right:
                if self.count+1>8:
                    self.y=300
                    self.count=0
                    self.X9R=False
                    self.Direction(X)
            else:
                if self.count+1>12:
                    self.y=300
                    self.count=0
                    self.X9R=False
                    self.Direction(X)
    
            
        elif self.X9L:
            if self.right:
                if self.x>10 and self.count>=8:
                    self.x-=10
                    self.count=7
                self.Screen=self.SX10[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x>X.x+X.width+20 and self.count>=7:
                    self.x-=10
                    self.count=6
                self.Screen=self.SX9[self.count//4]
                
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.right:
                if self.count+1>12:
                    self.y=300
                    self.count=0
                    self.X9L=False
                    self.Direction(X)
            else:
                if self.count+1>8:
                    self.y=300
                    self.count=0
                    self.X9L=False
                    self.Direction(X)
                
            
        
        elif self.X11R:
            if self.right:
                if self.x+163<X.x-20 and self.count>=8: # SELF.WIDTH 163
                    self.x+=10
                    self.count=7
                self.Screen=self.SX11[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x+124<1300 and self.count>=8: # SELF.WIDTH 124
                    self.x+=10
                    self.count=7
                self.Screen=self.SX10[self.count//4]     
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.right:
                if self.count+1>16:
                        self.y=300
                        self.count=0
                        self.X11R=False
                        self.Direction(X)
            else:
                if self.count+1>12:
                        self.y=300
                        self.count=0
                        self.X11R=False
                        self.Direction(X)
                


        elif self.X11L:
            if self.right:
                if self.x>10 and self.count>=8:
                    self.x-=10
                    self.count=7
                self.Screen=self.SX10[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x>X.x+X.width+20 and self.count>=8:
                    self.x-=10
                    self.count=7
                self.Screen=self.SX11[self.count//4]
                
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.right:
                if self.count+1>12:
                    self.y=300
                    self.count=0
                    self.X11L=False
                    self.Direction(X)
            else:
                if self.count+1>16:
                    self.y=300
                    self.count=0
                    self.X11L=False
                    self.Direction(X)
                

        elif self.X12:
            self.SUPER=self.SE[self.SS//4]
            self.SUPER=pygame.transform.scale(self.SUPER,(300,280))
            self.Screen=self.SX12[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            win.blit(self.SUPER,(self.x-100,self.y-160))
            self.count+=1
            self.SS+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.SS+1>28:
                self.SS=0
            if self.count+1>20:
                self.y=self.Base
                self.count=0
                self.SS=0
                self.X12=False
                self.Direction(X)

        #======================= HITS =========================

        elif self.Z1:
            self.Screen=self.SZ1[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+107<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z1=False
                self.Direction(X)

        elif self.Z2:
            self.Screen=self.SZ2[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+120<1300:
                    self.x+=20
                
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z2=False
                self.Direction(X)

        elif self.Z3:
            self.Screen=self.SZ3[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+150<1300:
                    self.x+=20   
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z3=False
                self.Direction(X)
                

        elif self.Z4:
            self.Screen=self.SZ4[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+143<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z4=False
                self.Direction(X)

        elif self.Z5:
            self.Screen=self.SZ5[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+161<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z5=False
                self.Direction(X)
                

        elif self.Z6:
            self.y=self.Base+30
            self.Screen=self.SZ6[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+150<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z6=False
                self.Direction(X)

        elif self.Z7:
            self.y=self.Base+30
            self.Screen=self.SZ7[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+165<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z7=False
                self.Direction(X)

        elif self.Z8:
            self.Screen=self.SZ8[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=5
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+153<1300:
                    self.x+=5
            if self.y>100 and self.hit<20:
                self.y-=8
            if self.hit>20:
                self.y+=30
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>24:
                self.y=self.Base
                self.hit=0
                self.Z8=False
                self.Direction(X)
                
                

        elif self.Z9:
            self.Screen=self.SZ9[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+150<1300:
                    self.x+=20
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z9=False
                self.Direction(X)
                
                
        elif self.Z10:
            self.Screen=self.SZ10[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+117<1300:
                    self.x+=20
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z10=False
                self.Direction(X)

        elif self.Z11:
            self.Screen=self.SZ11[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+137<1300:
                    self.x+=20   
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z11=False
                self.Direction(X)

        elif self.Z12:
            self.Screen=self.SZ12[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+140<1300:
                    self.x+=20
                
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z12=False
                self.Direction(X)
        
        elif self.Z13:
            self.Screen=self.SZ13[self.hit//4]
            if self.right:
                if self.hit>8 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>8 and self.x+144<1300:
                    self.x+=15
                
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z13=False
                self.Direction(X)
                
        elif self.Z14:
            self.Screen=self.SZ14[self.hit//4]
            if self.right:
                if self.hit>4 and self.x>10:
                    self.x-=6
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>4 and self.x+143<1300:
                    self.x+=6
            if self.y>100 and self.hit<16:
                self.y-=5
            if self.hit>=16:
                self.y+=5
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>24:
                self.y=self.Base
                self.hit=0
                self.Z14=False
                self.Direction(X)
                
        elif self.Z0:
            if self.hit<20:
                self.y=self.Base+60
            elif self.hit==21:
                self.y=self.Base+30
            elif self.hit==25:
                self.y=self.Base+20
            elif self.hit==30:
                self.y=self.Base
            self.Screen=self.SZ0[self.hit//6]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>48:
                self.y=self.Base
                self.hit=0
                self.Z0=False
                self.Direction(X)
                
        else:
            self.Screen=self.Stand[self.stand//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.stand+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.stand+1 > 16:
                self.stand=0
                self.Direction(X)

#---------------------------------------------------------------------------------------------------------------------------------
class Android_18():
    
    BG=pygame.image.load("data/bg/spaceimg.png").convert_alpha()
    BG=pygame.transform.scale(BG,(1300,600))
    font=pygame.font.SysFont('calibri',40,True,True)
    Name=font.render("Android 18",1,(104,100,181))
    V=font.render("V",1,(104,100,181))
    A=font.render("/",1,(255,223,0))
    S=font.render("S",1,(104,100,181))
    Logo=pygame.image.load("data/Select/A25.png").convert_alpha()
    Logo=pygame.transform.scale(Logo,(100,100))
    SE=[pygame.image.load("data/Effects/A5.png").convert_alpha(),pygame.image.load("data/Effects/A6.png").convert_alpha(),pygame.image.load("data/Effects/A7.png").convert_alpha(),pygame.image.load("data/Effects/A8.png").convert_alpha(),pygame.image.load("data/Effects/A9.png").convert_alpha(),pygame.image.load("data/Effects/A10.png").convert_alpha(),pygame.image.load("data/Effects/A11.png").convert_alpha()]
    Stand=[pygame.image.load("data/Android18/A1.png").convert_alpha(),pygame.image.load("data/Android18/A2.png").convert_alpha(),pygame.image.load("data/Android18/A3.png").convert_alpha(),pygame.image.load("data/Android18/A4.png").convert_alpha()]
    SY3=[pygame.image.load("data/Android18/C1.png").convert_alpha(),pygame.image.load("data/Android18/C2.png").convert_alpha(),pygame.image.load("data/Android18/C3.png").convert_alpha(),pygame.image.load("data/Android18/C4.png").convert_alpha(),pygame.image.load("data/Android18/C5.png").convert_alpha()]
    SY4=[pygame.image.load("data/Android18/D1.png").convert_alpha(),pygame.image.load("data/Android18/D2.png").convert_alpha(),pygame.image.load("data/Android18/D3.png").convert_alpha(),pygame.image.load("data/Android18/D3.png").convert_alpha(),pygame.image.load("data/Android18/D3.png").convert_alpha(),pygame.image.load("data/Android18/D3.png").convert_alpha()]
    SY5=[pygame.image.load("data/Android18/E1.png").convert_alpha(),pygame.image.load("data/Android18/E2.png").convert_alpha(),pygame.image.load("data/Android18/E3.png").convert_alpha(),pygame.image.load("data/Android18/E3.png").convert_alpha(),pygame.image.load("data/Android18/E3.png").convert_alpha(),pygame.image.load("data/Android18/E3.png").convert_alpha()]
    SY6=[pygame.image.load("data/Android18/F1.png").convert_alpha(),pygame.image.load("data/Android18/F2.png").convert_alpha(),pygame.image.load("data/Android18/F3.png").convert_alpha(),pygame.image.load("data/Android18/F3.png").convert_alpha(),pygame.image.load("data/Android18/F3.png").convert_alpha(),pygame.image.load("data/Android18/F3.png").convert_alpha()]
    SY7=[pygame.image.load("data/Android18/G1.png").convert_alpha(),pygame.image.load("data/Android18/G2.png").convert_alpha(),pygame.image.load("data/Android18/G3.png").convert_alpha(),pygame.image.load("data/Android18/G4.png").convert_alpha(),pygame.image.load("data/Android18/G5.png").convert_alpha(),pygame.image.load("data/Android18/G6.png").convert_alpha(),pygame.image.load("data/Android18/G7.png").convert_alpha(),pygame.image.load("data/Android18/G8.png").convert_alpha()]
    SY8=[pygame.image.load("data/Android18/H1.png").convert_alpha(),pygame.image.load("data/Android18/H2.png").convert_alpha(),pygame.image.load("data/Android18/H3.png").convert_alpha()]
    SY9=[pygame.image.load("data/Android18/I1.png").convert_alpha(),pygame.image.load("data/Android18/I2.png").convert_alpha(),pygame.image.load("data/Android18/I3.png").convert_alpha()]
    SY10=[pygame.image.load("data/Android18/J1.png").convert_alpha(),pygame.image.load("data/Android18/J2.png").convert_alpha(),pygame.image.load("data/Android18/J3.png").convert_alpha(),pygame.image.load("data/Android18/J4.png").convert_alpha()]
    SY11=[pygame.image.load("data/Android18/K1.png").convert_alpha(),pygame.image.load("data/Android18/K2.png").convert_alpha(),pygame.image.load("data/Android18/K3.png").convert_alpha(),pygame.image.load("data/Android18/K4.png").convert_alpha()]
    SY12=[pygame.image.load("data/Android18/L1.png").convert_alpha(),pygame.image.load("data/Android18/L2.png").convert_alpha(),pygame.image.load("data/Android18/L3.png").convert_alpha(),pygame.image.load("data/Android18/L4.png").convert_alpha(),pygame.image.load("data/Android18/L5.png").convert_alpha()]

    SZ0=[pygame.image.load("data/Android18/AZ1.png").convert_alpha(),pygame.image.load("data/Android18/AZ2.png").convert_alpha(),pygame.image.load("data/Android18/AZ3.png").convert_alpha(),pygame.image.load("data/Android18/AZ4.png").convert_alpha(),pygame.image.load("data/Android18/AZ5.png").convert_alpha(),pygame.image.load("data/Android18/AZ6.png").convert_alpha(),pygame.image.load("data/Android18/AZ7.png").convert_alpha(),pygame.image.load("data/Android18/AZ8.png").convert_alpha()]
    SZ1=[pygame.image.load("data/Android18/AQ1.png").convert_alpha(),pygame.image.load("data/Android18/AQ2.png").convert_alpha(),pygame.image.load("data/Android18/AQ3.png").convert_alpha(),pygame.image.load("data/Android18/AQ4.png").convert_alpha()]
    SZ2=[pygame.image.load("data/Android18/AR1.png").convert_alpha(),pygame.image.load("data/Android18/AR2.png").convert_alpha()]
    SZ3=[pygame.image.load("data/Android18/AW3.png").convert_alpha(),pygame.image.load("data/Android18/AW4.png").convert_alpha(),pygame.image.load("data/Android18/AW1.png").convert_alpha(),pygame.image.load("data/Android18/AW2.png").convert_alpha()]
    SZ4=[pygame.image.load("data/Android18/AN1.png").convert_alpha(),pygame.image.load("data/Android18/AN2.png").convert_alpha(),pygame.image.load("data/Android18/AN3.png").convert_alpha(),pygame.image.load("data/Android18/AN4.png").convert_alpha()]
    SZ5=[pygame.image.load("data/Android18/AT1.png").convert_alpha(),pygame.image.load("data/Android18/AT2.png").convert_alpha(),pygame.image.load("data/Android18/AT3.png").convert_alpha(),pygame.image.load("data/Android18/AT4.png").convert_alpha()]
    SZ6=[pygame.image.load("data/Android18/AU1.png").convert_alpha(),pygame.image.load("data/Android18/AU2.png").convert_alpha()]
    SZ7=[pygame.image.load("data/Android18/AV1.png").convert_alpha(),pygame.image.load("data/Android18/AV2.png").convert_alpha()]
    SZ8=[pygame.image.load("data/Android18/AX1.png").convert_alpha(),pygame.image.load("data/Android18/AX2.png").convert_alpha(),pygame.image.load("data/Android18/AW1.png").convert_alpha(),pygame.image.load("data/Android18/AW2.png").convert_alpha(),pygame.image.load("data/Android18/AY1.png").convert_alpha(),pygame.image.load("data/Android18/AY2.png").convert_alpha()]
    SZ9=[pygame.image.load("data/Android18/AP1.png").convert_alpha(),pygame.image.load("data/Android18/AP2.png").convert_alpha()]
    SZ10=[pygame.image.load("data/Android18/AS1.png").convert_alpha(),pygame.image.load("data/Android18/AS2.png").convert_alpha()]
    SZ11=[pygame.image.load("data/Android18/AM1.png").convert_alpha(),pygame.image.load("data/Android18/AM2.png").convert_alpha(),pygame.image.load("data/Android18/AM3.png").convert_alpha(),pygame.image.load("data/Android18/AM4.png").convert_alpha()]
    SZ12=[pygame.image.load("data/Android18/AO1.png").convert_alpha(),pygame.image.load("data/Android18/AO2.png").convert_alpha()]
    SZ13=[pygame.image.load("data/Android18/AW3.png").convert_alpha(),pygame.image.load("data/Android18/AW4.png").convert_alpha(),pygame.image.load("data/Android18/AY3.png").convert_alpha(),pygame.image.load("data/Android18/AY4.png").convert_alpha()]
    SZ14=[pygame.image.load("data/Android18/AX3.png").convert_alpha(),pygame.image.load("data/Android18/AX3.png").convert_alpha(),pygame.image.load("data/Android18/AX4.png").convert_alpha(),pygame.image.load("data/Android18/AX4.png").convert_alpha(),pygame.image.load("data/Android18/AY4.png").convert_alpha(),pygame.image.load("data/Android18/AY4.png").convert_alpha()]
    
    
    def __init__(self,x,y,right,logo):
        self.x=x
        self.Base=y
        self.y=y
        self.width=None
        self.height=None
        self.health=None
        self.right=right
        self.logo=logo
        self.SS=0
        self.count=0
        self.stand=0
        self.move=0
        self.hit=0
        self.attack=0
        self.Attack=False
        self.EffectWork=False
        self.Effect=None
        self.Screen=None
        self.SUPER=None
        self.POWERX=x
        self.POWERY=y
        self.POWER=None
        self.POWERBLIT=True

        self.Y3L=False
        self.Y3R=False
        self.Y4=False
        self.Y5=False
        self.Y6=False
        self.Y7=False
        self.Y8=False
        self.Y9L=False # It include D10
        self.Y9R=False # It include D10
        self.Y11R=False # It include D10
        self.Y11L=False # It include D10
        self.Y12=False
        self.Y13=False
        self.Y14=False
        self.Y15=False
        self.Y16=False
        self.Y17=False
        self.Y18=False
        self.Y19=False
        self.Y20=False
        self.Y21=False
        self.Y22=False
        self.Y23=False
        self.Y24=False
        self.Y25=False
        self.Y26=False
        self.Y27=False
        self.Y28=False
        self.Y29=False
        self.Y30=False
        self.Y31=False
        self.Y32=False
        self.Y33=False
        self.Y34=False
        self.Y35=False
        self.Y36=False
        self.Y37=False
        self.Y38=False

        # HITS
        self.Z0=False
        self.Z1=False
        self.Z2=False
        self.Z3=False
        self.Z4=False
        self.Z5=False
        self.Z6=False
        self.Z7=False
        self.Z8=False
        self.Z9=False
        self.Z10=False
        self.Z11=False
        self.Z12=False
        self.Z13=False
        self.Z14=False
        self.Z15=False
        
    def Direction(self,X):
        if self.x>X.x:
            self.right=False
        elif self.x<X.x:
            self.right=True        
    def Battelfeild(self,win):
        win.blit(self.BG,(0,0))
        
    def Computer(self,X):
        pass
    def Control(self,keys): 
        if keys[pygame.K_RSHIFT] and keys[pygame.K_RIGHT]:
            if self.count==0:
                self.Y9R=True
                
        elif keys[pygame.K_RSHIFT] and keys[pygame.K_LEFT]:
            if self.count==0:
                self.Y9L=True

        elif keys[pygame.K_LSHIFT] and keys[pygame.K_RIGHT]:
            if self.count==0:
                self.Y11R=True

        elif keys[pygame.K_LSHIFT] and keys[pygame.K_LEFT]:
            if self.count==0:
                self.Y11L=True
                
        elif keys[pygame.K_LEFT]:
            if self.count==0:
                self.Y3L=True
    
        elif keys[pygame.K_RIGHT]:
            if self.count==0:
                self.Y3R=True
            
        elif keys[pygame.K_a]:
            if self.count==0:
                self.Y4=True

        elif keys[pygame.K_s]:
            if self.count==0:
                self.Y5=True
            
        elif keys[pygame.K_d]:
            if self.count==0:
                self.Y6=True
            
        elif keys[pygame.K_UP]:
            if self.count==0:
                self.Y7=True

        elif keys[pygame.K_DOWN]:
            if self.count==0:
                self.Y8=True

        elif keys[pygame.K_DOWN]:
            if self.count==0:
                self.Y12=True
        
        elif keys[pygame.K_SPACE]:
                self.Y12=True
    
    def draw(self,win,X):
        if self.logo:
            win.blit(self.Logo,(0,0))
            pygame.draw.rect(win,(255,255,255),(0,0,100,100),1)
            win.blit(self.Name,(110,0))
            win.blit(self.V,(620,40))
            win.blit(self.A,(640,40))
            
            pygame.draw.rect(win,(0,0,0),(100,40,500,30))
            pygame.draw.rect(win,(104,100,181),(100,40,500,30))
            pygame.draw.rect(win,(255,255,255),(100,40,500,30),1)
            
            pygame.draw.rect(win,(0,0,0),(100,70,250,30))
            pygame.draw.rect(win,(255,223,0),(100,70,250,30))
            pygame.draw.rect(win,(255,255,255),(100,70,250,30),1)
        else:
            win.blit(self.Logo,(1200,0))
            pygame.draw.rect(win,(255,255,255),(1200,0,100,100),1)
            win.blit(self.Name,(1000,0))
            win.blit(self.S,(660,40))
            
            pygame.draw.rect(win,(0,0,0),(702,40,500,30))
            pygame.draw.rect(win,(104,100,181),(702,40,500,30))
            pygame.draw.rect(win,(255,255,255),(702,40,500,30),1)
            
            pygame.draw.rect(win,(0,0,0),(952,70,250,30))
            pygame.draw.rect(win,(255,223,0),(952,70,250,30))
            pygame.draw.rect(win,(255,255,255),(952,70,250,30),1)


            
        if self.Y3L:
            self.Screen=self.SY3[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            if self.x>10:
                self.x-=2
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+ 1> 20:
                self.count=0
                self.Y3L=False
                self.Direction(X)

        elif self.Y3R:
            self.Screen=self.SY3[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            if self.x+85<1300:
                self.x+=2
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+ 1> 20:
                self.count=0
                self.Y3R=False
                self.Direction(X)

        elif self.Y4:
            self.Screen=self.SY4[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.count=0
                self.Y4=False
                self.Direction(X)

        elif self.Y5:
            self.y=self.Base+30
            self.Screen=self.SY5[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.count=0
                self.y=self.Base
                self.Y5=False
                self.Direction(X)

        elif self.Y6:
            self.Screen=self.SY6[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.count=0
                self.Y6=False
                self.Direction(X)

        elif self.Y7:
            if self.right and 1300 -(X.x+X.width)>85: # 85 self.widht
                if (self.x+85)>X.x-40 and  self.x<X.x+X.width+10  and self.count>11 and self.x+85 < 1300:
                    self.x+=50
            else:
                if X.x>85 :# 85 self.widht
                   if self.x<(X.x+X.width+40)and self.x+85>X.x-10 and self.count>11 and self.x > 20:
                        self.x-=50

            if self.count<12 and self.count>4:
                self.y-=25
            self.Screen=self.SY7[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>32:
                if self.x+85>1300:
                    self.x=self.x-(self.x+85-1300)
                if self.x<10:
                    self.x=10
                self.count=0
                self.y=self.Base
                self.Y7=False
                self.Direction(X)

        elif self.Y8:
            if self.count>8:
                self.y=self.Base+60
            self.Screen=self.SY8[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>24:
                self.y=self.Base
                self.count=0
                self.Y8=False
                self.Direction(X)
                

        elif self.Y9R: 
            if self.right:
                if self.x+114<X.x-20 and self.count>=8: #self.widht 114
                    self.x+=10
                    self.count=7
                self.Screen=self.SY9[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x+85<1300 and self.count>=7: # self.width 85
                    self.x+=10
                    self.count=6
                self.Screen=self.SY10[self.count//4]     
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.right:
                if self.count+1>12:
                    self.y=self.Base
                    self.count=0
                    self.Y9R=False
                    self.Direction(X)
            else:
                if self.count+1>16:
                    self.y=self.Base
                    self.count=0
                    self.Y9R=False
                    self.Direction(X)
    
            
        elif self.Y9L:
            if self.right:
                if self.x>10 and self.count>=7:
                    self.x-=10
                    self.count=6
                self.Screen=self.SY10[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x>X.x+X.width+20 and self.count>=8:
                    self.x-=10
                    self.count=7
                self.Screen=self.SY9[self.count//4]
                
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.right:
                if self.count+1>16:
                    self.y=self.Base
                    self.count=0
                    self.Y9L=False
                    self.Direction(X)
            else:
                if self.count+1>12:
                    self.y=self.Base
                    self.count=0
                    self.Y9L=False
                    self.Direction(X)
                
            
        
        elif self.Y11R:
            if self.right:
                if self.x+104<X.x-20 and self.count>=8: # SELF.WIDTH 104
                    self.x+=10
                    self.count=7
                self.Screen=self.SY11[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x+85<1300 and self.count>=8: # SELF.WIDTH 85
                    self.x+=10
                    self.count=7
                self.Screen=self.SY10[self.count//4]     
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>16:
                self.y=self.Base
                self.count=0
                self.Y11R=False
                self.Direction(X)                            


        elif self.Y11L:
            if self.right:
                if self.x>10 and self.count>=8:
                    self.x-=10
                    self.count=7
                self.Screen=self.SY10[self.count//4]
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.x>X.x+X.width+20 and self.count>=8:
                    self.x-=10
                    self.count=7
                self.Screen=self.SY11[self.count//4]
                
            win.blit(self.Screen,(self.x,self.y))
            self.count+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.count+1>16:
                self.y=self.Base
                self.count=0
                self.Y11L=False
                self.Direction(X)
                
                

        elif self.Y12:
            self.SUPER=self.SE[self.SS//4]
            self.SUPER=pygame.transform.scale(self.SUPER,(300,280))
            self.Screen=self.SY12[self.count//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            win.blit(self.SUPER,(self.x-100,self.y-160))
            self.count+=1
            self.SS+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.SS+1>28:
                self.SS=0
            if self.count+1>20:
                self.y=self.Base
                self.count=0
                self.SS=0
                self.Y12=False
                self.Direction(X)


        #======================= HITS =========================

        elif self.Z1:
            self.Screen=self.SZ1[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+85<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z1=False
                self.Direction(X)

        elif self.Z2:
            self.Screen=self.SZ2[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+85<1300:
                    self.x+=20
                
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z2=False
                self.Direction(X)

        elif self.Z3:
            self.Screen=self.SZ3[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+121<1300:
                    self.x+=20   
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z3=False
                self.Direction(X)
                

        elif self.Z4:
            self.Screen=self.SZ4[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+85<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z4=False
                self.Direction(X)

        elif self.Z5:
            self.Screen=self.SZ5[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+99<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z5=False
                self.Direction(X)
                

        elif self.Z6:
            self.y=self.Base+30
            self.Screen=self.SZ6[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+97<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z6=False
                self.Direction(X)

        elif self.Z7:
            self.y=self.Base+30
            self.Screen=self.SZ7[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+85<1300:
                    self.x+=15    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z7=False
                self.Direction(X)

        elif self.Z8:
            self.Screen=self.SZ8[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=5
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+123<1300:
                    self.x+=5
            if self.y>100 and self.hit<20:
                self.y-=8
            if self.hit>20:
                self.y+=30
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>24:
                self.y=self.Base
                self.hit=0
                self.Z8=False
                self.Direction(X)
                
                

        elif self.Z9:
            self.Screen=self.SZ9[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+85<1300:
                    self.x+=20
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z9=False
                self.Direction(X)
                
                
        elif self.Z10:
            self.Screen=self.SZ10[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+85<1300:
                    self.x+=20
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z10=False
                self.Direction(X)

        elif self.Z11:
            self.Screen=self.SZ11[self.hit//4]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+107<1300:
                    self.x+=20   
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z11=False
                self.Direction(X)

        elif self.Z12:
            self.Screen=self.SZ12[self.hit//8]
            if self.right:
                if self.hit>12 and self.x>10:
                    self.x-=20
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>12 and self.x+85<1300:
                    self.x+=20
                
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z12=False
                self.Direction(X)
        
        elif self.Z13:
            self.Screen=self.SZ13[self.hit//4]
            if self.right:
                if self.hit>8 and self.x>10:
                    self.x-=15
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>8 and self.x+95<1300:
                    self.x+=15
                
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>16:
                self.y=self.Base
                self.hit=0
                self.Z13=False
                self.Direction(X)
                
        elif self.Z14:
            self.Screen=self.SZ14[self.hit//4]
            if self.right:
                if self.hit>4 and self.x>10:
                    self.x-=6
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            else:
                if self.hit>4 and self.x+123<1300:
                    self.x+=6
            if self.y>100 and self.hit<16:
                self.y-=5
            if self.hit>=16:
                self.y+=5
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>24:
                self.y=self.Base
                self.hit=0
                self.Z14=False
                self.Direction(X)
                
        elif self.Z0:
            if self.hit<20:
                self.y=self.Base+60
            elif self.hit==21:
                self.y=self.Base+30
            elif self.hit==25:
                self.y=self.Base+20
            elif self.hit==30:
                self.y=self.Base
            self.Screen=self.SZ0[self.hit//6]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)    
            win.blit(self.Screen,(self.x,self.y))
            self.hit+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.hit+1>48:
                self.y=self.Base
                self.hit=0
                self.Z0=False
                self.Direction(X)
                
        else:
            self.Screen=self.Stand[self.stand//4]
            if self.right:
                self.Screen=pygame.transform.flip(self.Screen,1,0)
            win.blit(self.Screen,(self.x,self.y))
            self.stand+=1
            self.width=self.Screen.get_width()
            self.height=self.Screen.get_height()
            if self.stand+1 > 16:
                self.stand=0
                self.Direction(X)
            

#---------------------------------------------------------------------------------------------------------------------------------

                                                        
###############################################################################################################################
                       
                                                        # WELCOME FUNCTION #
                                                    #=========================#
                                                        
def welcome():
    global SOUND
    global MUSIC
    pygame.display.set_caption("DragonBallZ")
    clock = pygame.time.Clock()
    Exit=True
    State=0
    C1=[255,223,0]
    C2=[244,81,11]
    C3=[244,81,11]
    C4=[244,81,11]
    M=[255,223,0]
    S=[244,81,11]
    Control=1
    VControl=1
    HControl=1
    H_Control=1
    COn=[0,255,0]
    COn1=[0,255,0]
    COff=[244,81,11]
    COff1=[244,81,11]
    
    start_tick=pygame.time.get_ticks()
    font=pygame.font.SysFont('calibri',100,True,True)
    f=pygame.font.SysFont('calibri',40,True,True)
    f1=pygame.font.SysFont('calibri',70,True,True)
    play=font.render("Play",1,(255,223,0))
    help1=font.render("Help",1,(255,223,0))
    about=font.render("About",1,(255,223,0))
    setting=font.render("Setting",1,(255,223,0))
    Mode=font.render("(1P) PLAYER MODE",1,(145,149,134))
    ComingSoon=font.render("(2P) Coming Soon",1,(145,149,134))
    bg=pygame.image.load("data/bg/611138.png")
    bg=pygame.transform.scale(bg,(1300,600)).convert_alpha()
    help1a=font.render("Help",1,C3)
    game_keys=f.render("Game keys .....",1,C3)
    
    about1=font.render("About",1,C2)
    info=f.render("THIS  IS  FREE  SIMPLE  AI  FIGHTING  GAME",1,C2)
    info1=f.render("BASED  ON  TV  SERIES  Dragon Ball Z",1,C2)
    info1a=f.render("IT JUST A  GAME PROJECT FOR FUN",1,C2)
    info1b=f.render("HOPE YOU LIKE IT !",1,C2)
    info2=f.render("CREATED BY : SURAJ MISHRA",1,C2)
    info3=f.render("Email ID : surajmishra574619@gmail.com",1,C2)
    info5=f.render("PRESS : ENTER ",1,C2)

    setting1=font.render("Setting",1,C2)
    music=f1.render("MUSIC",1,M)
    on=f1.render("ON",1,COn)
    off=f1.render("OFF",1,COff)
    sound=f1.render("SOUND",1,S)
    on1=f1.render("ON",1,COn1)
    off1=f1.render("OFF",1,COff1)
    if MUSIC:
            pygame.mixer.music.load("data/Sound/Dragon Ball Z Opening Theme Song   Rock the Dragon 720p HD)   YouTube ( 256kbps cbr ).mp3")
            pygame.mixer.music.play(-1)

    while Exit:
        if MUSIC:
            pygame.mixer.music.unpause()
        else:
            pygame.mixer.music.pause()
            
        clock.tick(40)
        pygame.display.update()
        GameScreen.blit(bg,(0,0))
        second=(pygame.time.get_ticks()-start_tick)//1000
        if second>5 and second<10:
            bg=pygame.image.load("data/bg/goku.png").convert_alpha()
            bg=pygame.transform.scale(bg,(1300,600)).convert_alpha()
            GameScreen.blit(bg,(0,0))
            State=1          
            
        for event in pygame.event.get():
            if event.type==pygame.QUIT:
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    pygame.quit()
                    quit()
                if State==1:
                    if event.key==pygame.K_RETURN and Control==1:
                           Exit=False

                    elif event.key==pygame.K_RETURN and Control==4:
                           State=4
       
                    elif event.key==pygame.K_RETURN and Control==3:
                           State=3

                    elif event.key==pygame.K_RETURN and Control==2:
                           State=2
                        
                    elif event.key==pygame.K_DOWN:      
                           if Control>4:
                                 Control=0
                       
                           Control+=1
                           if Control==1:
                                 C1=[255,223,0]
                                 C2=[244,81,11]
                                 C3=[244,81,11]
                                 C4=[244,81,11]

                           elif Control==2:
                                 C1=[244,81,11]
                                 C2=[255,223,0]
                                 C3=[244,81,11]
                                 C4=[244,81,11]
                           elif Control==3:
                                 C1=[244,81,11]
                                 C2=[244,81,11]
                                 C3=[255,223,0]
                                 C4=[244,81,11]
                           else:
                                 C1=[244,81,11]
                                 C2=[244,81,11]
                                 C3=[244,81,11]
                                 C4=[255,223,0]
                       
                    elif event.key==pygame.K_UP:
                           Control-=1
                           if Control==1:
                                 C1=[255,223,0]
                                 C2=[244,81,11]
                                 C3=[244,81,11]
                                 C4=[244,81,11]

                           elif Control==2:
                                 C1=[244,81,11]
                                 C2=[255,223,0]
                                 C3=[244,81,11]
                                 C4=[244,81,11]
                           elif Control==3:
                                 C1=[244,81,11]
                                 C2=[244,81,11]
                                 C3=[255,223,0]
                                 C4=[244,81,11]
                           else:
                                 C1=[244,81,11]
                                 C2=[244,81,11]
                                 C3=[244,81,11]
                                 C4=[255,223,0]
                           if Control<1:
                                 Control=4
                    else:
                        pass

                elif State==2 or State==3:
                    if event.key==pygame.K_RETURN:
                        State=1
        
                else:    
                    if event.key==pygame.K_RIGHT and VControl==1:
                           HControl+=1
                           if HControl>2:
                               HControl=1
                           if HControl==1:
                               COn=[0,255,0]
                               COff=[244,81,11]
                               MUSIC=True
                           else:
                               COn=[244,81,11]
                               COff=[0,255,0]
                               MUSIC=False
                               
                    
                    elif event.key==pygame.K_LEFT and VControl==1:
                           HControl-=1
                           if HControl<0:
                               HControl=2
                           if HControl==1:
                               COn=[0,255,0]
                               COff=[244,81,11]
                               MUSIC=True
                           else:
                               COn=[244,81,11]
                               COff=[0,255,0]
                               MUSIC=False
                    elif event.key==pygame.K_DOWN:
                        VControl=2
                        S=[255,223,0]
                        M=[244,81,11]   

                    elif event.key==pygame.K_UP:
                        VControl=1
                        S=[244,81,11]
                        M=[255,223,0]
                        
                    elif event.key==pygame.K_RIGHT and VControl==2:
                           H_Control+=1
                           if H_Control>2:
                               H_Control=1
                           if H_Control==1:
                               COn1=[0,255,0]
                               COff1=[244,81,11]
                               SOUND=True
                           else:
                               COn1=[244,81,11]
                               COff1=[0,255,0]
                               SOUND=False
                    
                    elif event.key==pygame.K_LEFT and VControl==2:
                           H_Control-=1
                           if H_Control<0:
                               H_Control=2
                           if H_Control==1:
                               COn1=[0,255,0]
                               COff1=[244,81,11]
                               SOUND=True
                           else:
                               COn1=[244,81,11]
                               COff1=[0,255,0]
                               SOUND=False
                                            
                    elif event.key==pygame.K_RETURN:
                        State=1
                    
                    
                



                    
        if State==1:
            play=font.render("Play",1,C1)
            help1=font.render("Help",1,C2)
            about=font.render("About",1,C3)
            setting=font.render("Setting",1,C4)
            GameScreen.blit(Mode,(10,8))
            GameScreen.blit(play,(100,100))
            GameScreen.blit(help1,(100,200))
            GameScreen.blit(about,(100,300))
            GameScreen.blit(setting,(100,400))
            GameScreen.blit(ComingSoon,(10,500))
        elif State==2:
            bg=pygame.image.load("data/bg/goku.png").convert_alpha()
            bg=pygame.transform.scale(bg,(1300,600))
            keybord=pygame.image.load("data/bg/keybord.png").convert_alpha()
            keybord=pygame.transform.scale(keybord,(600,200))
            GameScreen.blit(help1a,(250,50))
            GameScreen.blit(info5,(240,550))
            GameScreen.blit(keybord,(50,170))
            GameScreen.blit(game_keys,(240,400))
        elif State==3:
            bg=pygame.image.load("data/bg/goku.png").convert_alpha()
            bg=pygame.transform.scale(bg,(1300,600))
            GameScreen.blit(about1,(250,50))
            GameScreen.blit(info,(60,200))
            GameScreen.blit(info1,(80,250))
            GameScreen.blit(info1a,(100,300))
            GameScreen.blit(info1b,(220,350))
            GameScreen.blit(info2,(160,430))
            GameScreen.blit(info3,(60,460))
            GameScreen.blit(info5,(240,550))
        elif State==4:
            bg=pygame.image.load("data/bg/goku.png").convert_alpha()
            bg=pygame.transform.scale(bg,(1300,600))
            sound=f1.render("Sound",1,S)
            music=f1.render("Music",1,M)
            on=f1.render("on",1,COn)
            off=f1.render("off",1,COff)
            on1=f1.render("on",1,COn1)
            off1=f1.render("off",1,COff1) 
            GameScreen.blit(setting1,(200,50))
            GameScreen.blit(music,(250,150))
            GameScreen.blit(on,(140,230))
            GameScreen.blit(off,(400,230))
            GameScreen.blit(sound,(250,330))
            GameScreen.blit(on1,(140,410))
            GameScreen.blit(off1,(400,410))
            GameScreen.blit(info5,(240,550))
            if SOUND :
                SOUNDLOGO1=pygame.image.load("data/Select/C1.png").convert_alpha()
                SOUNDLOGO1=pygame.transform.scale(SOUNDLOGO1,(100,100))
            else:
                SOUNDLOGO1=pygame.image.load("data/Select/C2.png").convert_alpha()
                SOUNDLOGO1=pygame.transform.scale(SOUNDLOGO1,(100,100))
            if MUSIC :
                MUSICLOGO1=pygame.image.load("data/Select/C1.png").convert_alpha()
                MUSICLOGO1=pygame.transform.scale(MUSICLOGO1,(100,100))
            else:
                MUSICLOGO1=pygame.image.load("data/Select/C2.png").convert_alpha()
                MUSICLOGO1=pygame.transform.scale(MUSICLOGO1,(100,100))
            
            GameScreen.blit(SOUNDLOGO1,(500,400))
            GameScreen.blit(MUSICLOGO1,(500,200))
        else:
            pass
        
        


##############################################################################################################################################
                                                 # AGAIN PAGE #
                                                #===============#
def Again():
    EXIT=True
    clock = pygame.time.Clock()
    bg=pygame.image.load("data/bg/last.jpg").convert_alpha()
    bg=pygame.transform.scale(bg,(1300,600))
    f1=pygame.font.SysFont('calibri',80,True,True)
    font=pygame.font.SysFont('calibri',100,True,True)
    con=font.render("Continue",1,(255,223,0))
    f=pygame.font.SysFont('calibri',40,True,True)
    m1=f.render("PRESS : ENTER ",1,(244,81,11))
    Control=1
    while EXIT:
        clock.tick(40)
        pygame.display.update()
        GameScreen.blit(bg,(0,0))
        GameScreen.blit(con,(150,100))
        GameScreen.blit(m1,(210,550))
        if Control==1:
            y=f1.render("YES",1,(0,255,0))
            n=f1.render("NO",1,(244,81,11))
            GameScreen.blit(y,(270,250))
            GameScreen.blit(n,(270,390))
        else:
            y=f1.render("YES",1,(244,81,11))
            n=f1.render("NO",1,(0,255,0))
            GameScreen.blit(y,(270,250))
            GameScreen.blit(n,(270,390))
        
        for event in pygame.event.get():
            if event.type==pygame.QUIT:
                pygame.quit()
                quit()
                
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    pygame.quit()
                    quit()
                if event.key == pygame.K_DOWN:
                    Control+=1
                    if Control>2:
                        Control=1
                if event.key == pygame.K_UP:
                    Control-=1
                    if Control<1:
                        Control=2
                if event.key == pygame.K_RETURN and Control==1:
                    print("Yes")
                if event.key == pygame.K_RETURN and Control==2:
                    EXIT=False


#Again()
##############################################################################################################################################
                                           # SELECT MODE #
                                        #====================#

def Select():
    global ME
    pygame.display.set_caption("DragonBallZ")
    A1=pygame.image.load("data/Select/A1.png").convert_alpha()
    A1=pygame.transform.scale(A1,(110,110))
    A2=pygame.image.load("data/Select/A2.png").convert_alpha()
    A2=pygame.transform.scale(A2,(110,110))
    A3=pygame.image.load("data/Select/A3.png").convert_alpha()
    A3=pygame.transform.scale(A3,(110,110))
    A4=pygame.image.load("data/Select/A4.png").convert_alpha()
    A4=pygame.transform.scale(A4,(110,110))
    A5=pygame.image.load("data/Select/A5.png").convert_alpha()
    A5=pygame.transform.scale(A5,(110,110))
    A6=pygame.image.load("data/Select/A6.png").convert_alpha()
    A6=pygame.transform.scale(A6,(110,110))
    A7=pygame.image.load("data/Select/A7.png").convert_alpha()
    A7=pygame.transform.scale(A7,(110,110))
    A8=pygame.image.load("data/Select/A8.png").convert_alpha()
    A8=pygame.transform.scale(A8,(110,110))
    A9=pygame.image.load("data/Select/A9.png").convert_alpha()
    A9=pygame.transform.scale(A9,(110,110))
    A10=pygame.image.load("data/Select/A10.png").convert_alpha()
    A10=pygame.transform.scale(A10,(110,110))
    A11=pygame.image.load("data/Select/A11.png").convert_alpha()
    A11=pygame.transform.scale(A11,(110,110))
    A12=pygame.image.load("data/Select/A12.png").convert_alpha()
    A12=pygame.transform.scale(A12,(110,110))
    A13=pygame.image.load("data/Select/A13.png").convert_alpha()
    A13=pygame.transform.scale(A13,(110,110))
    A14=pygame.image.load("data/Select/A14.png").convert_alpha()
    A14=pygame.transform.scale(A14,(110,110))
    A15=pygame.image.load("data/Select/A15.png").convert_alpha()
    A15=pygame.transform.scale(A15,(110,110))
    A16=pygame.image.load("data/Select/A16.png").convert_alpha()
    A16=pygame.transform.scale(A16,(110,110))
    A17=pygame.image.load("data/Select/A17.png").convert_alpha()
    A17=pygame.transform.scale(A17,(110,110))
    A18=pygame.image.load("data/Select/A18.png").convert_alpha()
    A18=pygame.transform.scale(A18,(110,110))
    A19=pygame.image.load("data/Select/A19.png").convert_alpha()
    A19=pygame.transform.scale(A19,(110,110))
    A20=pygame.image.load("data/Select/A20.png").convert_alpha()
    A20=pygame.transform.scale(A20,(110,110))
    A21=pygame.image.load("data/Select/A21.png").convert_alpha()
    A21=pygame.transform.scale(A21,(110,110))
    A22=pygame.image.load("data/Select/A22.png").convert_alpha()
    A22=pygame.transform.scale(A22,(110,110))
    A23=pygame.image.load("data/Select/A23.png").convert_alpha()
    A23=pygame.transform.scale(A23,(110,110))
    A24=pygame.image.load("data/Select/A24.png").convert_alpha()
    A24=pygame.transform.scale(A24,(110,110))
    A25=pygame.image.load("data/Select/A25.png").convert_alpha()
    A25=pygame.transform.scale(A25,(110,110))
    x,y=490,0         #x=490,640,790,940,1090  y=0,120,240,360,480
    Row=1
    Coloum=1
    Color=(255,255,255)
    Exit=True
    clock = pygame.time.Clock()
    f1=pygame.font.SysFont('calibri',80,True,True)
    Name=f1.render("Young Gohan",1,(230,98,46))
    Enter = f1.render("PRESS : ENTER",1,(255,255,255))
    logo = pygame.image.load("data/Select/B1.png")
    logo = pygame.transform.scale(logo,(200,200))
    start_tick=pygame.time.get_ticks()
    while Exit:
        clock.tick(40)
        second=(pygame.time.get_ticks()-start_tick)//1000
        if second%2==0:
            Color=(0,0,255)
        else:
            Color=(255,0,0)
        pygame.display.update()
        GameScreen.fill((0,0,0))
        GameScreen.blit(Name,(20,50))
        Enter = f1.render("PRESS : ENTER",1,Color)
        GameScreen.blit(Enter,(10,500))
        GameScreen.blit(logo,(100,200))
        pygame.draw.rect(GameScreen,(255,0,255),(x,y,130,130))
        GameScreen.blit(A1,(500,10))
        pygame.draw.rect(GameScreen,(255,255,255),(500,10,110,110),1)
        GameScreen.blit(A2,(500,130))
        pygame.draw.rect(GameScreen,(255,255,255),(500,130,110,110),1)
        GameScreen.blit(A3,(500,250))
        pygame.draw.rect(GameScreen,(255,255,255),(500,250,110,110),1)
        GameScreen.blit(A4,(500,370))
        pygame.draw.rect(GameScreen,(255,255,255),(500,370,110,110),1)
        GameScreen.blit(A5,(500,490))
        pygame.draw.rect(GameScreen,(255,255,255),(500,490,110,110),1)

        GameScreen.blit(A6,(650,10))
        pygame.draw.rect(GameScreen,(255,255,255),(650,10,110,110),1)
        GameScreen.blit(A7,(650,130))
        pygame.draw.rect(GameScreen,(255,255,255),(650,130,110,110),1)
        GameScreen.blit(A8,(650,250))
        pygame.draw.rect(GameScreen,(255,255,255),(650,250,110,110),1)
        GameScreen.blit(A9,(650,370))
        pygame.draw.rect(GameScreen,(255,255,255),(650,370,110,110),1)
        GameScreen.blit(A10,(650,490))
        pygame.draw.rect(GameScreen,(255,255,255),(650,490,110,110),1)

        GameScreen.blit(A11,(800,10))
        pygame.draw.rect(GameScreen,(255,255,255),(800,10,110,110),1)
        GameScreen.blit(A12,(800,130))
        pygame.draw.rect(GameScreen,(255,255,255),(800,130,110,110),1)
        GameScreen.blit(A13,(800,250))
        pygame.draw.rect(GameScreen,(255,255,255),(800,250,110,110),1)
        GameScreen.blit(A14,(800,370))
        pygame.draw.rect(GameScreen,(255,255,255),(800,370,110,110),1)
        GameScreen.blit(A15,(800,490))
        pygame.draw.rect(GameScreen,(255,255,255),(800,490,110,110),1)

        GameScreen.blit(A16,(950,10))
        pygame.draw.rect(GameScreen,(255,255,255),(950,10,110,110),1)
        GameScreen.blit(A17,(950,130))
        pygame.draw.rect(GameScreen,(255,255,255),(950,130,110,110),1)
        GameScreen.blit(A18,(950,250))
        pygame.draw.rect(GameScreen,(255,255,255),(950,250,110,110),1)
        GameScreen.blit(A19,(950,370))
        pygame.draw.rect(GameScreen,(255,255,255),(950,370,110,110),1)
        GameScreen.blit(A20,(950,490))
        pygame.draw.rect(GameScreen,(255,255,255),(950,490,110,110),1)

        GameScreen.blit(A21,(1100,10))
        pygame.draw.rect(GameScreen,(255,255,255),(1100,10,110,110),1)
        GameScreen.blit(A22,(1100,130))
        pygame.draw.rect(GameScreen,(255,255,255),(1100,130,110,110),1)
        GameScreen.blit(A23,(1100,250))
        pygame.draw.rect(GameScreen,(255,255,255),(1100,250,110,110),1)
        GameScreen.blit(A24,(1100,370))
        pygame.draw.rect(GameScreen,(255,255,255),(1100,370,110,110),1)
        GameScreen.blit(A25,(1100,490))
        pygame.draw.rect(GameScreen,(255,255,255),(1100,490,110,110),1)


        for event in pygame.event.get():
            if event.type==pygame.QUIT:
                pygame.quit()
                quit()
                
            if event.type == pygame.KEYDOWN:
                if event.key==pygame.K_ESCAPE:
                    pygame.quit()
                    quit()
                elif event.key == pygame.K_RIGHT:
                    Coloum+=1
                    x+=150
                    if Coloum>5:
                        Coloum=1
                    if x>1090:
                        x=490
                elif event.key == pygame.K_LEFT:
                    Coloum-=1
                    x-=150
                    if Coloum<1:
                        Coloum=5
                    if x<490:
                        x=1090
                elif event.key == pygame.K_DOWN:
                    Row+=1
                    y+=120
                    if Row>5:
                        Row=1
                    if y>480:
                        y=0
                elif event.key == pygame.K_UP:
                    Row-=1
                    y-=120
                    if Row<1:
                        Row=5
                    if y<0:
                        y=480
                elif event.key == pygame.K_RETURN:
                    Exit=False

        if Row==1 and Coloum==1:
            logo = pygame.image.load("data/Select/B1.png")
            logo = pygame.transform.scale(logo,(200,200))
            Name=f1.render("Young Gohan",1,(230,98,46))
            ME=Young_Gohan(100,300,True,True)
        elif Row==1 and Coloum==2:
            logo = pygame.image.load("data/Select/B6.png")
            logo = pygame.transform.scale(logo,(200,200))
            Name=f1.render("Saiyan Gohan",1,(109,84,156))
            ME=Saiyan_Gohan(100,300,True,True)
        elif Row==1 and Coloum==3:
            logo = pygame.image.load("data/Select/B11.png")
            logo = pygame.transform.scale(logo,(200,200))
            Name=f1.render("Krillin",1,(214,86,42))
            ME=Krillin(100,300,True,True)
        elif Row==1 and Coloum==4:
            logo = pygame.image.load("data/Select/B16.png")
            logo = pygame.transform.scale(logo,(200,200))
            Name=f1.render("Goku God",1,(252,36,84))
            ME=Goku_God(100,300,True,True)
        elif Row==1 and Coloum==5:
            logo = pygame.image.load("data/Select/B21.png")
            logo = pygame.transform.scale(logo,(200,200))
            Name=f1.render("Captain Ginyu",1,(218,178,246))
            ME=Captain_Ginyu(100,300,True,True)
        elif Row==2 and Coloum==1:
            logo = pygame.image.load("data/Select/B2.png")
            logo = pygame.transform.scale(logo,(200,200))
            Name=f1.render("Saiyan Gohan",1,(200,165,5))
            ME=Saiyan_Adult_Gohan(100,300,True,True)
        elif Row==2 and Coloum==2:
            logo = pygame.image.load("data/Select/B7.png")
            logo = pygame.transform.scale(logo,(200,200))
            Name=f1.render("Raditz",1,(184,93,27))
            ME=Raditz(100,300,True,True)
        elif Row==2 and Coloum==3:
            logo = pygame.image.load("data/Select/B12.png")
            logo = pygame.transform.scale(logo,(200,200))
            Name=f1.render("Kid Buu",1,(255,189,197))
            ME=Kid_Buu(100,300,True,True)
        elif Row==2 and Coloum==4:
            logo = pygame.image.load("data/Select/B17.png")
            logo = pygame.transform.scale(logo,(200,200))
            Name=f1.render("Goku Blue",1,(5,188,204))
            ME=Goku_Blue(100,300,True,True)
        elif Row==2 and Coloum==5:
            logo = pygame.image.load("data/Select/B22.png")
            logo = pygame.transform.scale(logo,(200,200))
            Name=f1.render("Broly",1,(165,219,92))
            ME=Broly(100,300,True,True)
        elif Row==3 and Coloum==1:
            logo = pygame.image.load("data/Select/B3.png")
            logo = pygame.transform.scale(logo,(200,200))
            Name=f1.render("Vegeta",1,(23,82,169))
            ME=Vegeta(100,300,True,True)
        elif Row==3 and Coloum==2:
            logo = pygame.image.load("data/Select/B8.png")
            logo = pygame.transform.scale(logo,(200,200))
            Name=f1.render("Piccolo",1,(137,194,77))
            ME=Piccolo(100,300,True,True)
        elif Row==3 and Coloum==3:
            logo = pygame.image.load("data/Select/B13.png")
            logo = pygame.transform.scale(logo,(200,200))
            Name=f1.render("Gotenks",1,(252,252,197))
            ME=Gotenks(100,300,True,True)
        elif Row==3 and Coloum==4:
            logo = pygame.image.load("data/Select/B18.png")
            logo = pygame.transform.scale(logo,(200,200))
            Name=f1.render("Future Trunks",1,(147,130,222))
            ME=Future_Trunks(100,300,True,True)
        elif Row==3 and Coloum==5:
            logo = pygame.image.load("data/Select/B23.png")
            logo = pygame.transform.scale(logo,(200,200))
            Name=f1.render("Beerus",1,(153,129,163))
            ME=Beerus(100,300,True,True)
        elif Row==4 and Coloum==1:
            logo = pygame.image.load("data/Select/B4.png")
            logo = pygame.transform.scale(logo,(200,200))
            Name=f1.render("Saiyan Vegeta",1,(85,116,233))
            ME=Saiyan_Vegeta(100,300,True,True)
        elif Row==4 and Coloum==2:
            logo = pygame.image.load("data/Select/B9.png")
            logo = pygame.transform.scale(logo,(200,200))
            Name=f1.render("Nappa",1,(222,174,23))
            ME=Nappa(100,300,True,True)
        elif Row==4 and Coloum==3:
            logo = pygame.image.load("data/Select/B14.png")
            logo = pygame.transform.scale(logo,(200,200))
            Name=f1.render("Goku",1,(231,97,45))
            ME=Goku(100,300,True,True)
        elif Row==4 and Coloum==4:
            logo = pygame.image.load("data/Select/B19.png")
            logo = pygame.transform.scale(logo,(200,200))
            Name=f1.render("Frieza",1,(130,78,170))
            ME=Frieza(100,300,True,True)
        elif Row==4 and Coloum==5:
            logo = pygame.image.load("data/Select/B24.png")
            logo = pygame.transform.scale(logo,(200,200))
            Name=f1.render("Bardock",1,(69,88,15))
            ME=Bardock(100,300,True,True)
        elif Row==5 and Coloum==1:
            logo = pygame.image.load("data/Select/B5.png")
            logo = pygame.transform.scale(logo,(200,200))
            Name=f1.render("Teen Gohan",1,(56,37,79))
            ME=Teen_Gohan(100,300,True,True)
        elif Row==5 and Coloum==2:
            logo = pygame.image.load("data/Select/B10.png")
            logo = pygame.transform.scale(logo,(200,200))
            Name=f1.render("Mister Buu",1,(254,194,190))
            ME=Mister_Buu(100,300,True,True)
        elif Row==5 and Coloum==3:
            logo = pygame.image.load("data/Select/B15.png")
            logo = pygame.transform.scale(logo,(200,200))
            Name=f1.render("Saiyan Goku",1,(218,170,79))
            ME=Saiyan_Goku(100,300,True,True)
        elif Row==5 and Coloum==4:
            logo = pygame.image.load("data/Select/B20.png")
            logo = pygame.transform.scale(logo,(200,200))
            Name=f1.render("Cell",1,(165,180,85))
            ME=Cell(100,300,True,True)
        elif Row==5 and Coloum==5:
            logo = pygame.image.load("data/Select/B25.png")
            logo = pygame.transform.scale(logo,(200,200))
            Name=f1.render("Android 18",1,(104,100,181))
            ME=Android_18(100,300,True,True)





welcome()         
Select()

###############################################################################################################################################

def redrawwindow():
    global ME
    global COMPUTER
    if COMPUTER.Attack:
        ME.draw(GameScreen,COMPUTER,)
        COMPUTER.draw(GameScreen,ME)
    else:
        ME.Computer(COMPUTER)
        COMPUTER.draw(GameScreen,ME)
        ME.draw(GameScreen,COMPUTER)
#############################################################################################################################################3
GAMEFINISH=True
LEVELEXIT=True
clock = pygame.time.Clock()


while GAMEFINISH:
#    COMPUTER=Young_Gohan(800,300,False,False)
    COMPUTER=Saiyan_Gohan(400,300,False,False)
#    COMPUTER=Krillin(400,300,False,False)
#    COMPUTER=Goku_God(400,300,False,False)   
#    COMPUTER=Captain_Ginyu(400,300,False,False)
#    COMPUTER=Saiyan_Adult_Gohan(400,300,False,False)
#    COMPUTER=Raditz(400,300,False,False)
#    COMPUTER=Kid_Buu(400,300,False,False)
#    COMPUTER=Goku_Blue(400,300,False,False)
#    COMPUTER=Broly(400,300,False,False)
#    COMPUTER=Vegeta(400,300,False,False)
#    COMPUTER=Piccolo(400,300,False,False)
#    COMPUTER=Gotenks(400,300,False,False)
#    COMPUTER=Future_Trunks(400,300,False,False)
#    COMPUTER=Beerus(400,300,False,False)
#    COMPUTER=Saiyan_Vegeta(400,300,False,False)
#    COMPUTER=Nappa(400,300,False,False)
#    COMPUTER=Goku(400,300,False,False)
#    COMPUTER=Frieza(400,300,False,False)
#    COMPUTER=Bardock(400,300,False,False)
#    COMPUTER=Teen_Gohan(400,300,False,False)
#    COMPUTER=Mister_Buu(400,300,False)
#    COMPUTER=Saiyan_Goku(400,300,False)
#    COMPUTER=Cell(400,300,False,False)
#    COMPUTER=Android_18(400,300,False,False)
    
    while LEVELEXIT:
        clock.tick(40)
        pygame.display.update()
        COMPUTER.Battelfeild(GameScreen)
        redrawwindow()
        for event in pygame.event.get():
            if event.type==pygame.QUIT:
                LEVELEXIT=False
                GAMEFINISH=False
            keys = pygame.key.get_pressed()
            if keys[pygame.K_ESCAPE]:
                LEVELEXIT=False
                GAMEFINISH=False
            ME.Control(keys)
            
pygame.quit()
quit()
